!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABRT_ERR	include/linux/hdreg.h	/^#define ABRT_ERR	/;"	d
ACC_MODE	fs/namei.c	/^#define ACC_MODE(/;"	d	file:
ADD64	kernel/math/get_put.c	/^#define ADD64(/;"	d	file:
ALRMMASK	kernel/chr_drv/tty_io.c	/^#define ALRMMASK /;"	d	file:
AR	fs/Makefile	/^AR	=gar$/;"	m
AR	kernel/Makefile	/^AR	=gar$/;"	m
AR	kernel/blk_drv/Makefile	/^AR	=gar$/;"	m
AR	kernel/chr_drv/Makefile	/^AR	=gar$/;"	m
AR	kernel/math/Makefile	/^AR	=gar$/;"	m
AR	lib/Makefile	/^AR	=gar$/;"	m
AR	mm/Makefile	/^AR	=gar$/;"	m
ARCHIVES	Makefile	/^ARCHIVES=kernel\/kernel.o mm\/mm.o fs\/fs.o$/;"	m
AS	Makefile	/^AS	=gas$/;"	m
AS	fs/Makefile	/^AS	=gas$/;"	m
AS	kernel/Makefile	/^AS	=gas$/;"	m
AS	kernel/blk_drv/Makefile	/^AS	=gas$/;"	m
AS	kernel/chr_drv/Makefile	/^AS	=gas$/;"	m
AS	kernel/math/Makefile	/^AS	=gas$/;"	m
AS	lib/Makefile	/^AS	=gas$/;"	m
AS	mm/Makefile	/^AS	=gas$/;"	m
AS86	Makefile	/^AS86	=as86 -0 -a$/;"	m
B0	include/termios.h	/^#define  B0	/;"	d
B110	include/termios.h	/^#define  B110	/;"	d
B1200	include/termios.h	/^#define  B1200	/;"	d
B134	include/termios.h	/^#define  B134	/;"	d
B150	include/termios.h	/^#define  B150	/;"	d
B1800	include/termios.h	/^#define  B1800	/;"	d
B19200	include/termios.h	/^#define  B19200	/;"	d
B200	include/termios.h	/^#define  B200	/;"	d
B2400	include/termios.h	/^#define  B2400	/;"	d
B300	include/termios.h	/^#define  B300	/;"	d
B38400	include/termios.h	/^#define  B38400	/;"	d
B4800	include/termios.h	/^#define  B4800	/;"	d
B50	include/termios.h	/^#define  B50	/;"	d
B600	include/termios.h	/^#define  B600	/;"	d
B75	include/termios.h	/^#define  B75	/;"	d
B9600	include/termios.h	/^#define  B9600	/;"	d
BADNESS	fs/buffer.c	/^#define BADNESS(/;"	d	file:
BBD_ERR	include/linux/hdreg.h	/^#define	BBD_ERR	/;"	d
BCD_TO_BIN	init/main.c	/^#define BCD_TO_BIN(/;"	d	file:
BITS24	include/linux/math_emu.h	/^#define BITS24	/;"	d
BITS53	include/linux/math_emu.h	/^#define BITS53	/;"	d
BITS64	include/linux/math_emu.h	/^#define BITS64	/;"	d
BLOCK_SIZE	include/linux/fs.h	/^#define BLOCK_SIZE /;"	d
BLOCK_SIZE_BITS	include/linux/fs.h	/^#define BLOCK_SIZE_BITS /;"	d
BOOTSEG	boot/bootsect.S	/^BOOTSEG  = 0x07c0			! original address of boot-sector$/;"	d
BRKINT	include/termios.h	/^#define BRKINT	/;"	d
BS0	include/termios.h	/^#define   BS0	/;"	d
BS1	include/termios.h	/^#define   BS1	/;"	d
BSDLY	include/termios.h	/^#define BSDLY	/;"	d
BUFFER_END	include/const.h	/^#define BUFFER_END /;"	d
BUSY_STAT	include/linux/hdreg.h	/^#define BUSY_STAT	/;"	d
CBAUD	include/termios.h	/^#define CBAUD	/;"	d
CC	Makefile	/^CC	=gcc $(RAMDISK)$/;"	m
CC	fs/Makefile	/^CC	=gcc$/;"	m
CC	kernel/Makefile	/^CC	=gcc$/;"	m
CC	kernel/blk_drv/Makefile	/^CC	=gcc$/;"	m
CC	kernel/chr_drv/Makefile	/^CC	=gcc$/;"	m
CC	kernel/math/Makefile	/^CC	=gcc$/;"	m
CC	lib/Makefile	/^CC	=gcc$/;"	m
CC	mm/Makefile	/^CC	=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer \\$/;"	m
CFLAGS	fs/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fcombine-regs -fomit-frame-pointer \\$/;"	m
CFLAGS	kernel/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	kernel/blk_drv/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	kernel/chr_drv/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	kernel/math/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	lib/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m
CFLAGS	mm/Makefile	/^CFLAGS	=-O -Wall -fstrength-reduce -fcombine-regs -fomit-frame-pointer \\$/;"	m
CHARS	include/linux/tty.h	/^#define CHARS(/;"	d
CIBAUD	include/termios.h	/^#define CIBAUD	/;"	d
CLEAR_DEVICE_INTR	kernel/blk_drv/blk.h	/^#define CLEAR_DEVICE_INTR /;"	d
CLEAR_DEVICE_INTR	kernel/blk_drv/blk.h	/^#define CLEAR_DEVICE_INTR$/;"	d
CLEAR_DEVICE_TIMEOUT	kernel/blk_drv/blk.h	/^#define CLEAR_DEVICE_TIMEOUT /;"	d
CLEAR_DEVICE_TIMEOUT	kernel/blk_drv/blk.h	/^#define CLEAR_DEVICE_TIMEOUT$/;"	d
CLOCAL	include/termios.h	/^#define CLOCAL	/;"	d
CLOCKS_PER_SEC	include/time.h	/^#define CLOCKS_PER_SEC /;"	d
CMOS_READ	init/main.c	/^#define CMOS_READ(/;"	d	file:
CMOS_READ	kernel/blk_drv/hd.c	/^#define CMOS_READ(/;"	d	file:
CODE_SPACE	mm/memory.c	/^#define CODE_SPACE(/;"	d	file:
CONST1	include/linux/math_emu.h	/^#define CONST1 /;"	d
CONSTL2E	include/linux/math_emu.h	/^#define CONSTL2E /;"	d
CONSTL2T	include/linux/math_emu.h	/^#define CONSTL2T /;"	d
CONSTLG2	include/linux/math_emu.h	/^#define CONSTLG2 /;"	d
CONSTLN2	include/linux/math_emu.h	/^#define CONSTLN2 /;"	d
CONSTPI	include/linux/math_emu.h	/^#define CONSTPI /;"	d
CONSTZ	include/linux/math_emu.h	/^#define CONSTZ /;"	d
CON_COLS	init/main.c	/^#define CON_COLS /;"	d	file:
CON_ROWS	init/main.c	/^#define CON_ROWS /;"	d	file:
COPYBLK	fs/buffer.c	/^#define COPYBLK(/;"	d	file:
CPP	Makefile	/^CPP	=cpp -nostdinc -Iinclude$/;"	m
CPP	fs/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CPP	kernel/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CPP	kernel/blk_drv/Makefile	/^CPP	=gcc -E -nostdinc -I..\/..\/include$/;"	m
CPP	kernel/chr_drv/Makefile	/^CPP	=gcc -E -nostdinc -I..\/..\/include$/;"	m
CPP	kernel/math/Makefile	/^CPP	=gcc -E -nostdinc -I..\/..\/include$/;"	m
CPP	lib/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CPP	mm/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m
CR0	include/termios.h	/^#define   CR0	/;"	d
CR1	include/termios.h	/^#define   CR1	/;"	d
CR2	include/termios.h	/^#define   CR2	/;"	d
CR3	include/termios.h	/^#define   CR3	/;"	d
CRDLY	include/termios.h	/^#define CRDLY	/;"	d
CREAD	include/termios.h	/^#define CREAD	/;"	d
CRTSCTS	include/termios.h	/^#define CRTSCTS	/;"	d
CS	include/linux/math_emu.h	/^#define CS /;"	d
CS	kernel/sys_call.s	/^CS		= 0x24$/;"	d
CS5	include/termios.h	/^#define   CS5	/;"	d
CS6	include/termios.h	/^#define   CS6	/;"	d
CS7	include/termios.h	/^#define   CS7	/;"	d
CS8	include/termios.h	/^#define   CS8	/;"	d
CSIZE	include/termios.h	/^#define CSIZE	/;"	d
CSTOPB	include/termios.h	/^#define CSTOPB	/;"	d
CT_TO_SECS	include/linux/sched.h	/^#define CT_TO_SECS(/;"	d
CT_TO_USECS	include/linux/sched.h	/^#define CT_TO_USECS(/;"	d
CURRENT	kernel/blk_drv/blk.h	/^#define CURRENT /;"	d
CURRENT_DEV	kernel/blk_drv/blk.h	/^#define CURRENT_DEV /;"	d
CURRENT_TIME	include/linux/sched.h	/^#define CURRENT_TIME /;"	d
C_HUP	kernel/chr_drv/tty_io.c	/^#define C_HUP(/;"	d	file:
C_SPEED	kernel/chr_drv/tty_io.c	/^#define C_SPEED(/;"	d	file:
DAY	kernel/mktime.c	/^#define DAY /;"	d	file:
DEBUG_PROC_TREE	kernel/exit.c	/^#define DEBUG_PROC_TREE$/;"	d	file:
DEC	include/linux/tty.h	/^#define DEC(/;"	d
DEFAULT_MAJOR_ROOT	tools/build.c	/^#define DEFAULT_MAJOR_ROOT /;"	d	file:
DEFAULT_MAJOR_SWAP	tools/build.c	/^#define DEFAULT_MAJOR_SWAP /;"	d	file:
DEFAULT_MINOR_ROOT	tools/build.c	/^#define DEFAULT_MINOR_ROOT /;"	d	file:
DEFAULT_MINOR_SWAP	tools/build.c	/^#define DEFAULT_MINOR_SWAP /;"	d	file:
DEF_INITSEG	include/linux/config.h	/^#define DEF_INITSEG	/;"	d
DEF_SETUPSEG	include/linux/config.h	/^#define DEF_SETUPSEG	/;"	d
DEF_SYSSEG	include/linux/config.h	/^#define DEF_SYSSEG	/;"	d
DEF_SYSSIZE	include/linux/config.h	/^#define DEF_SYSSIZE	/;"	d
DEF_TERMIOS	kernel/chr_drv/console.c	/^#define DEF_TERMIOS /;"	d	file:
DEVICE_INTR	kernel/blk_drv/blk.h	/^#define DEVICE_INTR /;"	d
DEVICE_INTR	kernel/blk_drv/blk.h	/^void (*DEVICE_INTR)(void) = NULL;$/;"	v
DEVICE_NAME	kernel/blk_drv/blk.h	/^#define DEVICE_NAME /;"	d
DEVICE_NR	kernel/blk_drv/blk.h	/^#define DEVICE_NR(/;"	d
DEVICE_OFF	kernel/blk_drv/blk.h	/^#define DEVICE_OFF(/;"	d
DEVICE_ON	kernel/blk_drv/blk.h	/^#define DEVICE_ON(/;"	d
DEVICE_REQUEST	kernel/blk_drv/blk.h	/^#define DEVICE_REQUEST /;"	d
DEVICE_TIMEOUT	kernel/blk_drv/blk.h	/^#define DEVICE_TIMEOUT /;"	d
DEVICE_TIMEOUT	kernel/blk_drv/blk.h	/^int DEVICE_TIMEOUT = 0;$/;"	v
DIR_ENTRIES_PER_BLOCK	include/linux/fs.h	/^#define DIR_ENTRIES_PER_BLOCK /;"	d
DIV10	kernel/math/get_put.c	/^#define DIV10(/;"	d	file:
DMA_READ	include/linux/fdreg.h	/^#define DMA_READ	/;"	d
DMA_WRITE	include/linux/fdreg.h	/^#define DMA_WRITE	/;"	d
DRIVE	kernel/blk_drv/floppy.c	/^#define DRIVE(/;"	d	file:
DRIVERS	Makefile	/^DRIVERS =kernel\/blk_drv\/blk_drv.a kernel\/chr_drv\/chr_drv.a$/;"	m
DRIVE_INFO	init/main.c	/^#define DRIVE_INFO /;"	d	file:
DRQ_STAT	include/linux/hdreg.h	/^#define DRQ_STAT	/;"	d
DS	include/linux/math_emu.h	/^#define DS /;"	d
DS	kernel/sys_call.s	/^DS		= 0x1C$/;"	d
DST_AUST	include/sys/time.h	/^#define	DST_AUST	/;"	d
DST_AUSTALT	include/sys/time.h	/^#define	DST_AUSTALT	/;"	d
DST_CAN	include/sys/time.h	/^#define	DST_CAN	/;"	d
DST_EET	include/sys/time.h	/^#define	DST_EET	/;"	d
DST_GB	include/sys/time.h	/^#define	DST_GB	/;"	d
DST_MET	include/sys/time.h	/^#define	DST_MET	/;"	d
DST_NONE	include/sys/time.h	/^#define	DST_NONE	/;"	d
DST_RUM	include/sys/time.h	/^#define	DST_RUM	/;"	d
DST_TUR	include/sys/time.h	/^#define	DST_TUR	/;"	d
DST_USA	include/sys/time.h	/^#define	DST_USA	/;"	d
DST_WET	include/sys/time.h	/^#define	DST_WET	/;"	d
E2BIG	include/errno.h	/^#define E2BIG	/;"	d
EACCES	include/errno.h	/^#define EACCES	/;"	d
EAGAIN	include/errno.h	/^#define EAGAIN	/;"	d
EAX	include/linux/math_emu.h	/^#define EAX /;"	d
EAX	kernel/sys_call.s	/^EAX		= 0x00$/;"	d
EBADF	include/errno.h	/^#define EBADF	/;"	d
EBP	include/linux/math_emu.h	/^#define EBP /;"	d
EBUSY	include/errno.h	/^#define EBUSY	/;"	d
EBX	include/linux/math_emu.h	/^#define EBX /;"	d
EBX	kernel/sys_call.s	/^EBX		= 0x04$/;"	d
ECC_ERR	include/linux/hdreg.h	/^#define ECC_ERR	/;"	d
ECC_STAT	include/linux/hdreg.h	/^#define ECC_STAT	/;"	d
ECHILD	include/errno.h	/^#define ECHILD	/;"	d
ECHO	include/termios.h	/^#define ECHO	/;"	d
ECHOCTL	include/termios.h	/^#define ECHOCTL	/;"	d
ECHOE	include/termios.h	/^#define ECHOE	/;"	d
ECHOK	include/termios.h	/^#define ECHOK	/;"	d
ECHOKE	include/termios.h	/^#define ECHOKE	/;"	d
ECHONL	include/termios.h	/^#define ECHONL	/;"	d
ECHOPRT	include/termios.h	/^#define ECHOPRT	/;"	d
ECX	include/linux/math_emu.h	/^#define ECX /;"	d
ECX	kernel/sys_call.s	/^ECX		= 0x08$/;"	d
EDEADLK	include/errno.h	/^#define EDEADLK	/;"	d
EDI	include/linux/math_emu.h	/^#define EDI /;"	d
EDOM	include/errno.h	/^#define EDOM	/;"	d
EDX	include/linux/math_emu.h	/^#define EDX /;"	d
EDX	kernel/sys_call.s	/^EDX		= 0x0C$/;"	d
EEXIST	include/errno.h	/^#define EEXIST	/;"	d
EFAULT	include/errno.h	/^#define EFAULT	/;"	d
EFBIG	include/errno.h	/^#define EFBIG	/;"	d
EFLAGS	include/linux/math_emu.h	/^#define EFLAGS /;"	d
EFLAGS	kernel/sys_call.s	/^EFLAGS		= 0x28$/;"	d
EINTR	include/errno.h	/^#define EINTR	/;"	d
EINVAL	include/errno.h	/^#define EINVAL	/;"	d
EIO	include/errno.h	/^#define EIO	/;"	d
EIP	include/linux/math_emu.h	/^#define EIP /;"	d
EIP	kernel/sys_call.s	/^EIP		= 0x20$/;"	d
EISDIR	include/errno.h	/^#define EISDIR	/;"	d
EMFILE	include/errno.h	/^#define EMFILE	/;"	d
EMLINK	include/errno.h	/^#define EMLINK	/;"	d
EMPTY	include/linux/tty.h	/^#define EMPTY(/;"	d
ENAMETOOLONG	include/errno.h	/^#define ENAMETOOLONG	/;"	d
ENDSEG	boot/bootsect.S	/^ENDSEG   = SYSSEG + SYSSIZE		! where to stop loading$/;"	d
ENFILE	include/errno.h	/^#define ENFILE	/;"	d
ENODEV	include/errno.h	/^#define ENODEV	/;"	d
ENOENT	include/errno.h	/^#define ENOENT	/;"	d
ENOEXEC	include/errno.h	/^#define ENOEXEC	/;"	d
ENOLCK	include/errno.h	/^#define ENOLCK	/;"	d
ENOMEM	include/errno.h	/^#define ENOMEM	/;"	d
ENOSPC	include/errno.h	/^#define ENOSPC	/;"	d
ENOSYS	include/errno.h	/^#define ENOSYS	/;"	d
ENOSYS	kernel/sys_call.s	/^ENOSYS = 38$/;"	d
ENOTBLK	include/errno.h	/^#define ENOTBLK	/;"	d
ENOTDIR	include/errno.h	/^#define ENOTDIR	/;"	d
ENOTEMPTY	include/errno.h	/^#define ENOTEMPTY	/;"	d
ENOTTY	include/errno.h	/^#define ENOTTY	/;"	d
ENXIO	include/errno.h	/^#define ENXIO	/;"	d
EOF_CHAR	include/linux/tty.h	/^#define EOF_CHAR(/;"	d
EPERM	include/errno.h	/^#define EPERM	/;"	d
EPIPE	include/errno.h	/^#define EPIPE	/;"	d
ERANGE	include/errno.h	/^#define ERANGE	/;"	d
ERASE_CHAR	include/linux/tty.h	/^#define ERASE_CHAR(/;"	d
ERESTARTNOINTR	include/errno.h	/^#define ERESTARTNOINTR	/;"	d
ERESTARTSYS	include/errno.h	/^#define ERESTARTSYS	/;"	d
EROFS	include/errno.h	/^#define EROFS	/;"	d
ERROR	include/errno.h	/^#define ERROR	/;"	d
ERR_STAT	include/linux/hdreg.h	/^#define ERR_STAT	/;"	d
ES	include/linux/math_emu.h	/^#define ES /;"	d
ES	kernel/sys_call.s	/^ES		= 0x18$/;"	d
ESI	include/linux/math_emu.h	/^#define ESI /;"	d
ESP	include/linux/math_emu.h	/^#define ESP /;"	d
ESPIPE	include/errno.h	/^#define ESPIPE	/;"	d
ESRCH	include/errno.h	/^#define ESRCH	/;"	d
ESesc	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	enum:__anon11	file:
ESfunckey	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	enum:__anon11	file:
ESgetpars	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	enum:__anon11	file:
ESgotpars	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	enum:__anon11	file:
ESnormal	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	enum:__anon11	file:
ESsetgraph	kernel/chr_drv/console.c	/^	ESsetterm, ESsetgraph };$/;"	e	enum:__anon11	file:
ESsetterm	kernel/chr_drv/console.c	/^	ESsetterm, ESsetgraph };$/;"	e	enum:__anon11	file:
ESsquare	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	enum:__anon11	file:
ETXTBSY	include/errno.h	/^#define ETXTBSY	/;"	d
EXDEV	include/errno.h	/^#define EXDEV	/;"	d
EXEC_PAGESIZE	include/sys/param.h	/^#define EXEC_PAGESIZE /;"	d
EXTA	include/termios.h	/^#define EXTA /;"	d
EXTB	include/termios.h	/^#define EXTB /;"	d
EXT_MEM_K	init/main.c	/^#define EXT_MEM_K /;"	d	file:
FD_CLOEXEC	include/fcntl.h	/^#define FD_CLOEXEC	/;"	d
FD_CLR	include/sys/time.h	/^#define FD_CLR(/;"	d
FD_DATA	include/linux/fdreg.h	/^#define FD_DATA	/;"	d
FD_DCR	include/linux/fdreg.h	/^#define FD_DCR	/;"	d
FD_DIR	include/linux/fdreg.h	/^#define FD_DIR	/;"	d
FD_DOR	include/linux/fdreg.h	/^#define FD_DOR	/;"	d
FD_ISSET	include/sys/time.h	/^#define FD_ISSET(/;"	d
FD_READ	include/linux/fdreg.h	/^#define FD_READ	/;"	d
FD_RECALIBRATE	include/linux/fdreg.h	/^#define FD_RECALIBRATE	/;"	d
FD_SEEK	include/linux/fdreg.h	/^#define FD_SEEK	/;"	d
FD_SENSEI	include/linux/fdreg.h	/^#define FD_SENSEI	/;"	d
FD_SET	include/sys/time.h	/^#define FD_SET(/;"	d
FD_SPECIFY	include/linux/fdreg.h	/^#define FD_SPECIFY	/;"	d
FD_STATUS	include/linux/fdreg.h	/^#define FD_STATUS	/;"	d
FD_WRITE	include/linux/fdreg.h	/^#define FD_WRITE	/;"	d
FD_ZERO	include/sys/time.h	/^#define FD_ZERO(/;"	d
FF0	include/termios.h	/^#define   FF0	/;"	d
FF1	include/termios.h	/^#define   FF1	/;"	d
FFDLY	include/termios.h	/^#define FFDLY	/;"	d
FIONREAD	include/termios.h	/^#define FIONREAD	/;"	d
FIRST_LDT_ENTRY	include/linux/sched.h	/^#define FIRST_LDT_ENTRY /;"	d
FIRST_TASK	include/linux/sched.h	/^#define FIRST_TASK /;"	d
FIRST_TSS_ENTRY	include/linux/sched.h	/^#define FIRST_TSS_ENTRY /;"	d
FIRST_VM_PAGE	mm/swap.c	/^#define FIRST_VM_PAGE /;"	d	file:
FLUSHO	include/termios.h	/^#define FLUSHO	/;"	d
FS	include/linux/math_emu.h	/^#define FS /;"	d
FS	kernel/sys_call.s	/^FS		= 0x14$/;"	d
FULL	include/linux/tty.h	/^#define FULL(/;"	d
F_DUPFD	include/fcntl.h	/^#define F_DUPFD	/;"	d
F_GETFD	include/fcntl.h	/^#define F_GETFD	/;"	d
F_GETFL	include/fcntl.h	/^#define F_GETFL	/;"	d
F_GETLK	include/fcntl.h	/^#define F_GETLK	/;"	d
F_OK	include/unistd.h	/^#define F_OK	/;"	d
F_RDLCK	include/fcntl.h	/^#define F_RDLCK	/;"	d
F_SETFD	include/fcntl.h	/^#define F_SETFD	/;"	d
F_SETFL	include/fcntl.h	/^#define F_SETFL	/;"	d
F_SETLK	include/fcntl.h	/^#define F_SETLK	/;"	d
F_SETLKW	include/fcntl.h	/^#define F_SETLKW	/;"	d
F_UNLCK	include/fcntl.h	/^#define F_UNLCK	/;"	d
F_WRLCK	include/fcntl.h	/^#define F_WRLCK	/;"	d
GCC_HEADER	tools/build.c	/^#define GCC_HEADER /;"	d	file:
GDT_CODE	include/linux/head.h	/^#define GDT_CODE /;"	d
GDT_DATA	include/linux/head.h	/^#define GDT_DATA /;"	d
GDT_NUL	include/linux/head.h	/^#define GDT_NUL /;"	d
GDT_TMP	include/linux/head.h	/^#define GDT_TMP /;"	d
GETCH	include/linux/tty.h	/^#define GETCH(/;"	d
GRAF_TRANS	kernel/chr_drv/console.c	/^#define GRAF_TRANS /;"	d	file:
HD_CMD	include/linux/hdreg.h	/^#define HD_CMD	/;"	d
HD_COMMAND	include/linux/hdreg.h	/^#define HD_COMMAND /;"	d
HD_CURRENT	include/linux/hdreg.h	/^#define HD_CURRENT	/;"	d
HD_DATA	include/linux/hdreg.h	/^#define HD_DATA	/;"	d
HD_ERROR	include/linux/hdreg.h	/^#define HD_ERROR	/;"	d
HD_HCYL	include/linux/hdreg.h	/^#define HD_HCYL	/;"	d
HD_LCYL	include/linux/hdreg.h	/^#define HD_LCYL	/;"	d
HD_NSECTOR	include/linux/hdreg.h	/^#define HD_NSECTOR	/;"	d
HD_PRECOMP	include/linux/hdreg.h	/^#define HD_PRECOMP /;"	d
HD_SECTOR	include/linux/hdreg.h	/^#define HD_SECTOR	/;"	d
HD_STATUS	include/linux/hdreg.h	/^#define HD_STATUS	/;"	d
HIGH_MEMORY	mm/memory.c	/^unsigned long HIGH_MEMORY = 0;$/;"	v
HOUR	kernel/mktime.c	/^#define HOUR /;"	d	file:
HUPCL	include/termios.h	/^#define HUPCL	/;"	d
HZ	include/linux/sched.h	/^#define HZ /;"	d
HZ	include/sys/param.h	/^#define HZ /;"	d
I387	include/linux/math_emu.h	/^#define I387 /;"	d
ICANON	include/termios.h	/^#define ICANON	/;"	d
ICRNL	include/termios.h	/^#define ICRNL	/;"	d
ID_ERR	include/linux/hdreg.h	/^#define ID_ERR	/;"	d
IEXTEN	include/termios.h	/^#define IEXTEN	/;"	d
IGNBRK	include/termios.h	/^#define IGNBRK	/;"	d
IGNCR	include/termios.h	/^#define IGNCR	/;"	d
IGNPAR	include/termios.h	/^#define IGNPAR	/;"	d
IMAXBEL	include/termios.h	/^#define IMAXBEL	/;"	d
INC	include/linux/tty.h	/^#define INC(/;"	d
INDEX_STAT	include/linux/hdreg.h	/^#define INDEX_STAT	/;"	d
INITSEG	boot/bootsect.S	/^INITSEG  = DEF_INITSEG			! we move boot here - out of the way$/;"	d
INITSEG	boot/setup.S	/^INITSEG  = DEF_INITSEG	! we move boot here - out of the way$/;"	d
INIT_C_CC	include/linux/tty.h	/^#define INIT_C_CC /;"	d
INIT_REQUEST	kernel/blk_drv/blk.h	/^#define INIT_REQUEST /;"	d
INIT_TASK	include/linux/sched.h	/^#define INIT_TASK /;"	d
INLCR	include/termios.h	/^#define INLCR	/;"	d
INODES_PER_BLOCK	include/linux/fs.h	/^#define INODES_PER_BLOCK /;"	d
INPCK	include/termios.h	/^#define INPCK	/;"	d
INTR_CHAR	include/linux/tty.h	/^#define INTR_CHAR(/;"	d
IN_ORDER	kernel/blk_drv/blk.h	/^#define IN_ORDER(/;"	d
ISIG	include/termios.h	/^#define ISIG	/;"	d
ISTRIP	include/termios.h	/^#define ISTRIP	/;"	d
IS_A_CONSOLE	include/linux/tty.h	/^#define IS_A_CONSOLE(/;"	d
IS_A_PTY	include/linux/tty.h	/^#define IS_A_PTY(/;"	d
IS_A_PTY_MASTER	include/linux/tty.h	/^#define IS_A_PTY_MASTER(/;"	d
IS_A_PTY_SLAVE	include/linux/tty.h	/^#define IS_A_PTY_SLAVE(/;"	d
IS_A_SERIAL	include/linux/tty.h	/^#define IS_A_SERIAL(/;"	d
IS_SEEKABLE	include/linux/fs.h	/^#define IS_SEEKABLE(/;"	d
ITIMER_PROF	include/sys/time.h	/^#define	ITIMER_PROF	/;"	d
ITIMER_REAL	include/sys/time.h	/^#define	ITIMER_REAL	/;"	d
ITIMER_VIRTUAL	include/sys/time.h	/^#define	ITIMER_VIRTUAL	/;"	d
IUCLC	include/termios.h	/^#define IUCLC	/;"	d
IXANY	include/termios.h	/^#define IXANY	/;"	d
IXOFF	include/termios.h	/^#define IXOFF	/;"	d
IXON	include/termios.h	/^#define IXON	/;"	d
I_BLOCK_SPECIAL	include/const.h	/^#define I_BLOCK_SPECIAL /;"	d
I_CHAR_SPECIAL	include/const.h	/^#define I_CHAR_SPECIAL /;"	d
I_CRNL	kernel/chr_drv/tty_io.c	/^#define I_CRNL(/;"	d	file:
I_DIRECTORY	include/const.h	/^#define I_DIRECTORY	/;"	d
I_IXON	kernel/chr_drv/tty_io.c	/^#define I_IXON(/;"	d	file:
I_MAP_SLOTS	include/linux/fs.h	/^#define I_MAP_SLOTS /;"	d
I_NAMED_PIPE	include/const.h	/^#define I_NAMED_PIPE	/;"	d
I_NLCR	kernel/chr_drv/tty_io.c	/^#define I_NLCR(/;"	d	file:
I_NOCR	kernel/chr_drv/tty_io.c	/^#define I_NOCR(/;"	d	file:
I_REGULAR	include/const.h	/^#define I_REGULAR /;"	d
I_SET_GID_BIT	include/const.h	/^#define I_SET_GID_BIT /;"	d
I_SET_UID_BIT	include/const.h	/^#define I_SET_UID_BIT /;"	d
I_TYPE	include/const.h	/^#define I_TYPE /;"	d
I_UCLC	kernel/chr_drv/tty_io.c	/^#define I_UCLC(/;"	d	file:
KBD_FINNISH	kernel/chr_drv/keyboard.S	/^#define KBD_FINNISH$/;"	d
KILL_CHAR	include/linux/tty.h	/^#define KILL_CHAR(/;"	d
L6	boot/head.s	/^L6:$/;"	l
L65	init/main.s	/^L65:$/;"	l
L69	init/main.s	/^L69:$/;"	l
L70	init/main.s	/^L70:$/;"	l
L71	init/main.s	/^L71:$/;"	l
L72	init/main.s	/^L72:$/;"	l
L74	init/main.s	/^L74:$/;"	l
L75	init/main.s	/^L75:$/;"	l
L77	init/main.s	/^L77:$/;"	l
L82	init/main.s	/^L82:$/;"	l
L84	init/main.s	/^L84:$/;"	l
L85	init/main.s	/^L85:$/;"	l
L86	init/main.s	/^L86:$/;"	l
L87	init/main.s	/^L87:$/;"	l
L88	init/main.s	/^L88:$/;"	l
L89	init/main.s	/^L89:$/;"	l
L91	init/main.s	/^L91:$/;"	l
L93	init/main.s	/^L93:$/;"	l
L94	init/main.s	/^L94:$/;"	l
L96	init/main.s	/^L96:$/;"	l
L97	init/main.s	/^L97:$/;"	l
LAST	include/linux/tty.h	/^#define LAST(/;"	d
LAST_TASK	include/linux/sched.h	/^#define LAST_TASK /;"	d
LAST_VM_PAGE	mm/swap.c	/^#define LAST_VM_PAGE /;"	d	file:
LATCH	kernel/sched.c	/^#define LATCH /;"	d	file:
LC0	init/main.s	/^LC0:$/;"	l
LC1	init/main.s	/^LC1:$/;"	l
LC10	init/main.s	/^LC10:$/;"	l
LC11	init/main.s	/^LC11:$/;"	l
LC2	init/main.s	/^LC2:$/;"	l
LC3	init/main.s	/^LC3:$/;"	l
LC4	init/main.s	/^LC4:$/;"	l
LC5	init/main.s	/^LC5:$/;"	l
LC6	init/main.s	/^LC6:$/;"	l
LC7	init/main.s	/^LC7:$/;"	l
LC8	init/main.s	/^LC8:$/;"	l
LC9	init/main.s	/^LC9:$/;"	l
LD	Makefile	/^LD	=gld$/;"	m
LD	fs/Makefile	/^LD	=gld$/;"	m
LD	kernel/Makefile	/^LD	=gld$/;"	m
LD	kernel/blk_drv/Makefile	/^LD	=gld$/;"	m
LD	kernel/chr_drv/Makefile	/^LD	=gld$/;"	m
LD	kernel/math/Makefile	/^LD	=gld$/;"	m
LD	lib/Makefile	/^LD	=gld$/;"	m
LD	mm/Makefile	/^LD	=gld$/;"	m
LD86	Makefile	/^LD86	=ld86 -0$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	=-s -x -M$/;"	m
LDFLAGS	kernel/Makefile	/^LDFLAGS	=-s -x$/;"	m
LDFLAGS	kernel/blk_drv/Makefile	/^LDFLAGS	=-s -x$/;"	m
LDFLAGS	kernel/chr_drv/Makefile	/^LDFLAGS	=-s -x$/;"	m
LDFLAGS	kernel/math/Makefile	/^LDFLAGS	=-s -x$/;"	m
LDFLAGS	lib/Makefile	/^LDFLAGS	=-s -x$/;"	m
LDT_CODE	include/linux/head.h	/^#define LDT_CODE /;"	d
LDT_DATA	include/linux/head.h	/^#define LDT_DATA /;"	d
LDT_NUL	include/linux/head.h	/^#define LDT_NUL /;"	d
LEFT	include/linux/tty.h	/^#define LEFT(/;"	d
LEFT	kernel/vsprintf.c	/^#define LEFT	/;"	d	file:
LIBRARY_OFFSET	include/linux/sched.h	/^#define LIBRARY_OFFSET /;"	d
LIBRARY_SIZE	include/linux/sched.h	/^#define LIBRARY_SIZE	/;"	d
LIBS	Makefile	/^LIBS	=lib\/lib.a$/;"	m
LOW_MEM	include/linux/mm.h	/^#define LOW_MEM /;"	d
L_CANON	kernel/chr_drv/tty_io.c	/^#define L_CANON(/;"	d	file:
L_ECHO	kernel/chr_drv/tty_io.c	/^#define L_ECHO(/;"	d	file:
L_ECHOCTL	kernel/chr_drv/tty_io.c	/^#define L_ECHOCTL(/;"	d	file:
L_ECHOE	kernel/chr_drv/tty_io.c	/^#define L_ECHOE(/;"	d	file:
L_ECHOK	kernel/chr_drv/tty_io.c	/^#define L_ECHOK(/;"	d	file:
L_ECHOKE	kernel/chr_drv/tty_io.c	/^#define L_ECHOKE(/;"	d	file:
L_ISIG	kernel/chr_drv/tty_io.c	/^#define L_ISIG(/;"	d	file:
L_TOSTOP	kernel/chr_drv/tty_io.c	/^#define L_TOSTOP(/;"	d	file:
MAJOR	include/linux/fs.h	/^#define MAJOR(/;"	d
MAJOR_NR	kernel/blk_drv/floppy.c	/^#define MAJOR_NR /;"	d	file:
MAJOR_NR	kernel/blk_drv/hd.c	/^#define MAJOR_NR /;"	d	file:
MAJOR_NR	kernel/blk_drv/ramdisk.c	/^#define MAJOR_NR /;"	d	file:
MAP_NR	include/linux/mm.h	/^#define MAP_NR(/;"	d
MARK_ERR	include/linux/hdreg.h	/^#define MARK_ERR	/;"	d
MATH	Makefile	/^MATH	=kernel\/math\/math.a$/;"	m
MAX	fs/file_dev.c	/^#define MAX(/;"	d	file:
MAXHOSTNAMELEN	include/sys/param.h	/^#define MAXHOSTNAMELEN /;"	d
MAX_ARG_PAGES	fs/exec.c	/^#define MAX_ARG_PAGES /;"	d	file:
MAX_CONSOLES	include/linux/tty.h	/^#define MAX_CONSOLES	/;"	d
MAX_ERRORS	kernel/blk_drv/floppy.c	/^#define MAX_ERRORS /;"	d	file:
MAX_ERRORS	kernel/blk_drv/hd.c	/^#define MAX_ERRORS	/;"	d	file:
MAX_HD	kernel/blk_drv/hd.c	/^#define MAX_HD	/;"	d	file:
MAX_REPLIES	kernel/blk_drv/floppy.c	/^#define MAX_REPLIES /;"	d	file:
MAY_EXEC	fs/namei.c	/^#define MAY_EXEC /;"	d	file:
MAY_READ	fs/namei.c	/^#define MAY_READ /;"	d	file:
MAY_WRITE	fs/namei.c	/^#define MAY_WRITE /;"	d	file:
MIN	fs/file_dev.c	/^#define MIN(/;"	d	file:
MIN	kernel/chr_drv/tty_io.c	/^#define MIN(/;"	d	file:
MINIX_HEADER	tools/build.c	/^#define MINIX_HEADER /;"	d	file:
MINOR	include/linux/fs.h	/^#define MINOR(/;"	d
MINUTE	kernel/mktime.c	/^#define MINUTE /;"	d	file:
MUL10	kernel/math/get_put.c	/^#define MUL10(/;"	d	file:
NAME_LEN	include/linux/fs.h	/^#define NAME_LEN /;"	d
NCC	include/termios.h	/^#define NCC /;"	d
NCCS	include/termios.h	/^#define NCCS /;"	d
NEGINT	kernel/math/add.c	/^#define NEGINT(/;"	d	file:
NGROUPS	include/sys/param.h	/^#define NGROUPS	/;"	d
NIL_FILP	include/linux/fs.h	/^#define NIL_FILP	/;"	d
NL0	include/termios.h	/^#define   NL0	/;"	d
NL1	include/termios.h	/^#define   NL1	/;"	d
NLDLY	include/termios.h	/^#define NLDLY	/;"	d
NMAGIC	include/a.out.h	/^#define NMAGIC /;"	d
NOFLSH	include/termios.h	/^#define NOFLSH	/;"	d
NOGROUP	include/sys/param.h	/^#define NOGROUP	/;"	d
NORM_TRANS	kernel/chr_drv/console.c	/^#define NORM_TRANS /;"	d	file:
NPAR	kernel/chr_drv/console.c	/^#define NPAR /;"	d	file:
NRDEVS	fs/char_dev.c	/^#define NRDEVS /;"	d	file:
NRDEVS	fs/ioctl.c	/^#define NRDEVS /;"	d	file:
NR_BLK_DEV	kernel/blk_drv/blk.h	/^#define NR_BLK_DEV	/;"	d
NR_BUFFERS	fs/buffer.c	/^int NR_BUFFERS = 0;$/;"	v
NR_BUFFERS	include/linux/fs.h	/^#define NR_BUFFERS /;"	d
NR_CONSOLES	kernel/chr_drv/console.c	/^int NR_CONSOLES = 0;$/;"	v
NR_FILE	include/linux/fs.h	/^#define NR_FILE /;"	d
NR_HASH	include/linux/fs.h	/^#define NR_HASH /;"	d
NR_HD	kernel/blk_drv/hd.c	/^#define NR_HD /;"	d	file:
NR_HD	kernel/blk_drv/hd.c	/^static int NR_HD = 0;$/;"	v	file:
NR_INODE	include/linux/fs.h	/^#define NR_INODE /;"	d
NR_OPEN	include/linux/fs.h	/^#define NR_OPEN /;"	d
NR_PTYS	include/linux/tty.h	/^#define NR_PTYS	/;"	d
NR_REQUEST	kernel/blk_drv/blk.h	/^#define NR_REQUEST	/;"	d
NR_SERIALS	include/linux/tty.h	/^#define NR_SERIALS	/;"	d
NR_SUPER	include/linux/fs.h	/^#define NR_SUPER /;"	d
NR_TASKS	include/linux/sched.h	/^#define NR_TASKS	/;"	d
NR_syscalls	include/linux/sys.h	/^int NR_syscalls = sizeof(sys_call_table)\/sizeof(fn_ptr);$/;"	v
NSIG	include/signal.h	/^#define NSIG	/;"	d
NULL	include/linux/fs.h	/^#define NULL /;"	d
NULL	include/linux/sched.h	/^#define NULL /;"	d
NULL	include/stddef.h	/^#define NULL /;"	d
NULL	include/stddef.h	/^#undef NULL$/;"	d
NULL	include/string.h	/^#define NULL /;"	d
NULL	include/sys/types.h	/^#define NULL /;"	d
NULL	include/time.h	/^#define NULL /;"	d
NULL	include/unistd.h	/^#define NULL /;"	d
N_ABS	include/a.out.h	/^#define N_ABS /;"	d
N_BADMAG	include/a.out.h	/^#define N_BADMAG(/;"	d
N_BSS	include/a.out.h	/^#define N_BSS /;"	d
N_BSSADDR	include/a.out.h	/^#define N_BSSADDR(/;"	d
N_COMM	include/a.out.h	/^#define N_COMM /;"	d
N_DATA	include/a.out.h	/^#define N_DATA /;"	d
N_DATADDR	include/a.out.h	/^#define N_DATADDR(/;"	d
N_DATOFF	include/a.out.h	/^#define N_DATOFF(/;"	d
N_DRELOFF	include/a.out.h	/^#define N_DRELOFF(/;"	d
N_EXT	include/a.out.h	/^#define N_EXT /;"	d
N_FN	include/a.out.h	/^#define N_FN /;"	d
N_INDR	include/a.out.h	/^#define N_INDR /;"	d
N_MAGIC	include/a.out.h	/^#define N_MAGIC(/;"	d
N_SETA	include/a.out.h	/^#define	N_SETA	/;"	d
N_SETB	include/a.out.h	/^#define	N_SETB	/;"	d
N_SETD	include/a.out.h	/^#define	N_SETD	/;"	d
N_SETT	include/a.out.h	/^#define	N_SETT	/;"	d
N_SETV	include/a.out.h	/^#define N_SETV	/;"	d
N_STAB	include/a.out.h	/^#define N_STAB /;"	d
N_STROFF	include/a.out.h	/^#define N_STROFF(/;"	d
N_SYMOFF	include/a.out.h	/^#define N_SYMOFF(/;"	d
N_TEXT	include/a.out.h	/^#define N_TEXT /;"	d
N_TRELOFF	include/a.out.h	/^#define N_TRELOFF(/;"	d
N_TXTADDR	include/a.out.h	/^#define N_TXTADDR(/;"	d
N_TXTOFF	include/a.out.h	/^#define N_TXTOFF(/;"	d
N_TYPE	include/a.out.h	/^#define N_TYPE /;"	d
N_UNDF	include/a.out.h	/^#define N_UNDF /;"	d
OBJS	fs/Makefile	/^OBJS=	open.o read_write.o inode.o file_table.o buffer.o super.o \\$/;"	m
OBJS	kernel/Makefile	/^OBJS  = sched.o sys_call.o traps.o asm.o fork.o \\$/;"	m
OBJS	kernel/blk_drv/Makefile	/^OBJS  = ll_rw_blk.o floppy.o hd.o ramdisk.o$/;"	m
OBJS	kernel/chr_drv/Makefile	/^OBJS  = tty_io.o console.o keyboard.o serial.o rs_io.o \\$/;"	m
OBJS	kernel/math/Makefile	/^OBJS  = math_emulate.o error.o convert.o ea.o get_put.o \\$/;"	m
OBJS	lib/Makefile	/^OBJS  = ctype.o _exit.o open.o close.o errno.o write.o dup.o setsid.o \\$/;"	m
OBJS	mm/Makefile	/^OBJS	= memory.o swap.o page.o$/;"	m
OCRNL	include/termios.h	/^#define OCRNL	/;"	d
OFDEL	include/termios.h	/^#define OFDEL	/;"	d
OFILL	include/termios.h	/^#define OFILL	/;"	d
OLCUC	include/termios.h	/^#define OLCUC	/;"	d
OLDESP	kernel/sys_call.s	/^OLDESP		= 0x2C$/;"	d
OLDSS	kernel/sys_call.s	/^OLDSS		= 0x30$/;"	d
OMAGIC	include/a.out.h	/^#define OMAGIC /;"	d
ONLCR	include/termios.h	/^#define ONLCR	/;"	d
ONLRET	include/termios.h	/^#define ONLRET	/;"	d
ONOCR	include/termios.h	/^#define ONOCR	/;"	d
OPOST	include/termios.h	/^#define OPOST	/;"	d
ORIG_EAX	kernel/sys_call.s	/^ORIG_EAX	= 0x10$/;"	d
ORIG_EIP	include/linux/math_emu.h	/^#define ORIG_EIP /;"	d
ORIG_ROOT_DEV	init/main.c	/^#define ORIG_ROOT_DEV /;"	d	file:
ORIG_SWAP_DEV	init/main.c	/^#define ORIG_SWAP_DEV /;"	d	file:
ORIG_VIDEO_COLS	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_COLS /;"	d	file:
ORIG_VIDEO_EGA_AX	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_EGA_AX	/;"	d	file:
ORIG_VIDEO_EGA_BX	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_EGA_BX	/;"	d	file:
ORIG_VIDEO_EGA_CX	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_EGA_CX	/;"	d	file:
ORIG_VIDEO_LINES	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_LINES	/;"	d	file:
ORIG_VIDEO_MODE	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_MODE	/;"	d	file:
ORIG_VIDEO_PAGE	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_PAGE	/;"	d	file:
ORIG_X	kernel/chr_drv/console.c	/^#define ORIG_X	/;"	d	file:
ORIG_Y	kernel/chr_drv/console.c	/^#define ORIG_Y	/;"	d	file:
O_ACCMODE	include/fcntl.h	/^#define O_ACCMODE	/;"	d
O_APPEND	include/fcntl.h	/^#define O_APPEND	/;"	d
O_CREAT	include/fcntl.h	/^#define O_CREAT	/;"	d
O_CRNL	kernel/chr_drv/tty_io.c	/^#define O_CRNL(/;"	d	file:
O_EXCL	include/fcntl.h	/^#define O_EXCL	/;"	d
O_LCUC	kernel/chr_drv/tty_io.c	/^#define O_LCUC(/;"	d	file:
O_NDELAY	include/fcntl.h	/^#define O_NDELAY	/;"	d
O_NLCR	kernel/chr_drv/tty_io.c	/^#define O_NLCR(/;"	d	file:
O_NLRET	kernel/chr_drv/tty_io.c	/^#define O_NLRET(/;"	d	file:
O_NOCTTY	include/fcntl.h	/^#define O_NOCTTY	/;"	d
O_NONBLOCK	include/fcntl.h	/^#define O_NONBLOCK	/;"	d
O_POST	kernel/chr_drv/tty_io.c	/^#define O_POST(/;"	d	file:
O_RDONLY	include/fcntl.h	/^#define O_RDONLY	/;"	d
O_RDWR	include/fcntl.h	/^#define O_RDWR	/;"	d
O_TRUNC	include/fcntl.h	/^#define O_TRUNC	/;"	d
O_WRONLY	include/fcntl.h	/^#define O_WRONLY	/;"	d
PAGE_ACCESSED	include/linux/mm.h	/^#define PAGE_ACCESSED	/;"	d
PAGE_DIRTY	include/linux/mm.h	/^#define PAGE_DIRTY	/;"	d
PAGE_PRESENT	include/linux/mm.h	/^#define PAGE_PRESENT	/;"	d
PAGE_RW	include/linux/mm.h	/^#define PAGE_RW	/;"	d
PAGE_SIZE	include/a.out.h	/^#define	PAGE_SIZE	/;"	d
PAGE_SIZE	include/a.out.h	/^#define PAGE_SIZE /;"	d
PAGE_SIZE	include/linux/mm.h	/^#define PAGE_SIZE /;"	d
PAGE_USER	include/linux/mm.h	/^#define PAGE_USER	/;"	d
PAGING_MEMORY	include/linux/mm.h	/^#define PAGING_MEMORY /;"	d
PAGING_PAGES	include/linux/mm.h	/^#define PAGING_PAGES /;"	d
PARENB	include/termios.h	/^#define PARENB	/;"	d
PARMRK	include/termios.h	/^#define PARMRK	/;"	d
PARODD	include/termios.h	/^#define PARODD	/;"	d
PENDIN	include/termios.h	/^#define PENDIN	/;"	d
PF_ALIGNWARN	include/linux/sched.h	/^#define PF_ALIGNWARN	/;"	d
PIPE_EMPTY	include/linux/fs.h	/^#define PIPE_EMPTY(/;"	d
PIPE_FULL	include/linux/fs.h	/^#define PIPE_FULL(/;"	d
PIPE_HEAD	include/linux/fs.h	/^#define PIPE_HEAD(/;"	d
PIPE_READ_WAIT	include/linux/fs.h	/^#define PIPE_READ_WAIT(/;"	d
PIPE_SIZE	include/linux/fs.h	/^#define PIPE_SIZE(/;"	d
PIPE_TAIL	include/linux/fs.h	/^#define PIPE_TAIL(/;"	d
PIPE_WRITE_WAIT	include/linux/fs.h	/^#define PIPE_WRITE_WAIT(/;"	d
PLUS	kernel/vsprintf.c	/^#define PLUS	/;"	d	file:
PRECISION	include/linux/math_emu.h	/^#define PRECISION /;"	d
PST	kernel/math/math_emulate.c	/^#define PST(/;"	d	file:
PTY_OTHER	include/linux/tty.h	/^#define PTY_OTHER(/;"	d
PUTCH	include/linux/tty.h	/^#define PUTCH(/;"	d
QUEUES	kernel/chr_drv/tty_io.c	/^#define QUEUES	/;"	d	file:
QUIT_CHAR	include/linux/tty.h	/^#define QUIT_CHAR(/;"	d
RAMDISK	Makefile	/^RAMDISK = #-DRAMDISK=512$/;"	m
READ	include/linux/fs.h	/^#define READ /;"	d
READA	include/linux/fs.h	/^#define READA /;"	d
READY_STAT	include/linux/hdreg.h	/^#define READY_STAT	/;"	d
REG	kernel/math/ea.c	/^#define REG(/;"	d	file:
RESPONSE	kernel/chr_drv/console.c	/^#define RESPONSE /;"	d	file:
RLIMIT_CORE	include/sys/resource.h	/^#define RLIMIT_CORE	/;"	d
RLIMIT_CPU	include/sys/resource.h	/^#define RLIMIT_CPU	/;"	d
RLIMIT_DATA	include/sys/resource.h	/^#define RLIMIT_DATA	/;"	d
RLIMIT_FSIZE	include/sys/resource.h	/^#define RLIMIT_FSIZE	/;"	d
RLIMIT_MEMLOCK	include/sys/resource.h	/^#define RLIMIT_MEMLOCK	/;"	d
RLIMIT_NPROC	include/sys/resource.h	/^#define RLIMIT_NPROC	/;"	d
RLIMIT_OFILE	include/sys/resource.h	/^#define RLIMIT_OFILE	/;"	d
RLIMIT_RSS	include/sys/resource.h	/^#define RLIMIT_RSS	/;"	d
RLIMIT_STACK	include/sys/resource.h	/^#define RLIMIT_STACK	/;"	d
RLIM_INFINITY	include/sys/resource.h	/^#define RLIM_INFINITY	/;"	d
RLIM_NLIMITS	include/sys/resource.h	/^#define RLIM_NLIMITS	/;"	d
ROOT_DEV	Makefile	/^ROOT_DEV=\/dev\/hd6$/;"	m
ROOT_DEV	boot/bootsect.S	/^ROOT_DEV = 0$/;"	d
ROOT_DEV	fs/super.c	/^int ROOT_DEV = 0;$/;"	v
ROOT_INO	include/linux/fs.h	/^#define ROOT_INO /;"	d
ROUNDING	include/linux/math_emu.h	/^#define ROUNDING /;"	d
ROUND_0	include/linux/math_emu.h	/^#define ROUND_0	/;"	d
ROUND_DOWN	include/linux/math_emu.h	/^#define ROUND_DOWN	/;"	d
ROUND_NEAREST	include/linux/math_emu.h	/^#define ROUND_NEAREST	/;"	d
ROUND_UP	include/linux/math_emu.h	/^#define ROUND_UP	/;"	d
RUSAGE_CHILDREN	include/sys/resource.h	/^#define	RUSAGE_CHILDREN	/;"	d
RUSAGE_SELF	include/sys/resource.h	/^#define	RUSAGE_SELF	/;"	d
R_OK	include/unistd.h	/^#define R_OK	/;"	d
SA_INTERRUPT	include/signal.h	/^#define SA_INTERRUPT	/;"	d
SA_NOCLDSTOP	include/signal.h	/^#define SA_NOCLDSTOP	/;"	d
SA_NOMASK	include/signal.h	/^#define SA_NOMASK	/;"	d
SA_ONESHOT	include/signal.h	/^#define SA_ONESHOT	/;"	d
SEEK_CUR	include/unistd.h	/^#define SEEK_CUR	/;"	d
SEEK_END	include/unistd.h	/^#define SEEK_END	/;"	d
SEEK_SET	include/unistd.h	/^#define SEEK_SET	/;"	d
SEEK_STAT	include/linux/hdreg.h	/^#define SEEK_STAT	/;"	d
SEGMENT_SIZE	include/a.out.h	/^#define	SEGMENT_SIZE	/;"	d
SEGMENT_SIZE	include/a.out.h	/^#define SEGMENT_SIZE /;"	d
SEL_EX	include/linux/fs.h	/^#define SEL_EX	/;"	d
SEL_IN	include/linux/fs.h	/^#define SEL_IN	/;"	d
SEL_OUT	include/linux/fs.h	/^#define SEL_OUT	/;"	d
SETUPLEN	boot/bootsect.S	/^SETUPLEN = 4				! nr of setup-sectors$/;"	d
SETUPSEG	boot/bootsect.S	/^SETUPSEG = DEF_SETUPSEG			! setup starts here$/;"	d
SETUPSEG	boot/setup.S	/^SETUPSEG = DEF_SETUPSEG	! this is the current segment$/;"	d
SETUP_SECTS	tools/build.c	/^#define SETUP_SECTS /;"	d	file:
SET_INTR	kernel/blk_drv/blk.h	/^#define SET_INTR(/;"	d
SIGABRT	include/signal.h	/^#define SIGABRT	/;"	d
SIGALRM	include/signal.h	/^#define SIGALRM	/;"	d
SIGCHLD	include/signal.h	/^#define SIGCHLD	/;"	d
SIGCONT	include/signal.h	/^#define SIGCONT	/;"	d
SIGFPE	include/signal.h	/^#define SIGFPE	/;"	d
SIGHUP	include/signal.h	/^#define SIGHUP	/;"	d
SIGILL	include/signal.h	/^#define SIGILL	/;"	d
SIGINT	include/signal.h	/^#define SIGINT	/;"	d
SIGIOT	include/signal.h	/^#define SIGIOT	/;"	d
SIGKILL	include/signal.h	/^#define SIGKILL	/;"	d
SIGN	kernel/vsprintf.c	/^#define SIGN	/;"	d	file:
SIGPIPE	include/signal.h	/^#define SIGPIPE	/;"	d
SIGQUIT	include/signal.h	/^#define SIGQUIT	/;"	d
SIGSEGV	include/signal.h	/^#define SIGSEGV	/;"	d
SIGSTKFLT	include/signal.h	/^#define SIGSTKFLT	/;"	d
SIGSTOP	include/signal.h	/^#define SIGSTOP	/;"	d
SIGTERM	include/signal.h	/^#define SIGTERM	/;"	d
SIGTRAP	include/signal.h	/^#define SIGTRAP	/;"	d
SIGTSTP	include/signal.h	/^#define SIGTSTP	/;"	d
SIGTTIN	include/signal.h	/^#define SIGTTIN	/;"	d
SIGTTOU	include/signal.h	/^#define SIGTTOU	/;"	d
SIGUNUSED	include/signal.h	/^#define SIGUNUSED	/;"	d
SIGUSR1	include/signal.h	/^#define SIGUSR1	/;"	d
SIGUSR2	include/signal.h	/^#define SIGUSR2	/;"	d
SIG_BLOCK	include/signal.h	/^#define SIG_BLOCK /;"	d
SIG_CHLD	kernel/sys_call.s	/^SIG_CHLD	= 17$/;"	d
SIG_DFL	include/signal.h	/^#define SIG_DFL	/;"	d
SIG_ERR	include/signal.h	/^#define SIG_ERR	/;"	d
SIG_IGN	include/signal.h	/^#define SIG_IGN	/;"	d
SIG_SETMASK	include/signal.h	/^#define SIG_SETMASK /;"	d
SIG_UNBLOCK	include/signal.h	/^#define SIG_UNBLOCK /;"	d
SMALL	kernel/vsprintf.c	/^#define SMALL	/;"	d	file:
SPACE	kernel/vsprintf.c	/^#define SPACE	/;"	d	file:
SPECIAL	kernel/vsprintf.c	/^#define SPECIAL	/;"	d	file:
SS	include/linux/math_emu.h	/^#define SS /;"	d
ST	kernel/math/math_emulate.c	/^#define ST(/;"	d	file:
ST0	kernel/blk_drv/floppy.c	/^#define ST0 /;"	d	file:
ST0_DS	include/linux/fdreg.h	/^#define ST0_DS	/;"	d
ST0_ECE	include/linux/fdreg.h	/^#define ST0_ECE	/;"	d
ST0_HA	include/linux/fdreg.h	/^#define ST0_HA	/;"	d
ST0_INTR	include/linux/fdreg.h	/^#define ST0_INTR	/;"	d
ST0_NR	include/linux/fdreg.h	/^#define ST0_NR	/;"	d
ST0_SE	include/linux/fdreg.h	/^#define ST0_SE	/;"	d
ST1	kernel/blk_drv/floppy.c	/^#define ST1 /;"	d	file:
ST1_CRC	include/linux/fdreg.h	/^#define ST1_CRC	/;"	d
ST1_EOC	include/linux/fdreg.h	/^#define ST1_EOC	/;"	d
ST1_MAM	include/linux/fdreg.h	/^#define ST1_MAM	/;"	d
ST1_ND	include/linux/fdreg.h	/^#define ST1_ND	/;"	d
ST1_OR	include/linux/fdreg.h	/^#define ST1_OR	/;"	d
ST1_WP	include/linux/fdreg.h	/^#define ST1_WP	/;"	d
ST2	kernel/blk_drv/floppy.c	/^#define ST2 /;"	d	file:
ST2_BC	include/linux/fdreg.h	/^#define ST2_BC	/;"	d
ST2_CM	include/linux/fdreg.h	/^#define ST2_CM	/;"	d
ST2_CRC	include/linux/fdreg.h	/^#define ST2_CRC	/;"	d
ST2_MAM	include/linux/fdreg.h	/^#define ST2_MAM	/;"	d
ST2_SEH	include/linux/fdreg.h	/^#define ST2_SEH	/;"	d
ST2_SNS	include/linux/fdreg.h	/^#define ST2_SNS	/;"	d
ST2_WC	include/linux/fdreg.h	/^#define ST2_WC	/;"	d
ST3	kernel/blk_drv/floppy.c	/^#define ST3 /;"	d	file:
ST3_HA	include/linux/fdreg.h	/^#define ST3_HA	/;"	d
ST3_TZ	include/linux/fdreg.h	/^#define ST3_TZ	/;"	d
ST3_WP	include/linux/fdreg.h	/^#define ST3_WP	/;"	d
START_CHAR	include/linux/tty.h	/^#define START_CHAR(/;"	d
STATUS_BUSY	include/linux/fdreg.h	/^#define STATUS_BUSY	/;"	d
STATUS_BUSYMASK	include/linux/fdreg.h	/^#define STATUS_BUSYMASK	/;"	d
STATUS_DIR	include/linux/fdreg.h	/^#define STATUS_DIR	/;"	d
STATUS_DMA	include/linux/fdreg.h	/^#define STATUS_DMA	/;"	d
STATUS_READY	include/linux/fdreg.h	/^#define STATUS_READY	/;"	d
STDERR_FILENO	include/unistd.h	/^#define STDERR_FILENO	/;"	d
STDIN_FILENO	include/unistd.h	/^#define STDIN_FILENO	/;"	d
STDOUT_FILENO	include/unistd.h	/^#define STDOUT_FILENO	/;"	d
STOP_CHAR	include/linux/tty.h	/^#define STOP_CHAR(/;"	d
STRINGIFY	tools/build.c	/^#define STRINGIFY(/;"	d	file:
SUPER_MAGIC	include/linux/fs.h	/^#define SUPER_MAGIC /;"	d
SUSPEND_CHAR	include/linux/tty.h	/^#define SUSPEND_CHAR(/;"	d
SWAP_BITS	mm/swap.c	/^#define SWAP_BITS /;"	d	file:
SWAP_DEV	Makefile	/^SWAP_DEV=\/dev\/hd2$/;"	m
SWAP_DEV	boot/bootsect.S	/^SWAP_DEV = 0$/;"	d
SWAP_DEV	mm/swap.c	/^int SWAP_DEV = 0;$/;"	v
SWD	include/linux/math_emu.h	/^#define SWD /;"	d
SYSSEG	boot/bootsect.S	/^SYSSEG   = DEF_SYSSEG			! system loaded at 0x10000 (65536).$/;"	d
SYSSEG	boot/setup.S	/^SYSSEG   = DEF_SYSSEG	! system loaded at 0x10000 (65536).$/;"	d
SYSSIZE	boot/bootsect.S	/^SYSSIZE = DEF_SYSSIZE$/;"	d
SYS_SIZE	tools/build.c	/^#define SYS_SIZE /;"	d	file:
S_IFBLK	include/sys/stat.h	/^#define S_IFBLK /;"	d
S_IFCHR	include/sys/stat.h	/^#define S_IFCHR /;"	d
S_IFDIR	include/sys/stat.h	/^#define S_IFDIR /;"	d
S_IFIFO	include/sys/stat.h	/^#define S_IFIFO /;"	d
S_IFLNK	include/sys/stat.h	/^#define S_IFLNK	/;"	d
S_IFMT	include/sys/stat.h	/^#define S_IFMT /;"	d
S_IFREG	include/sys/stat.h	/^#define S_IFREG /;"	d
S_IRGRP	include/sys/stat.h	/^#define S_IRGRP /;"	d
S_IROTH	include/sys/stat.h	/^#define S_IROTH /;"	d
S_IRUSR	include/sys/stat.h	/^#define S_IRUSR /;"	d
S_IRWXG	include/sys/stat.h	/^#define S_IRWXG /;"	d
S_IRWXO	include/sys/stat.h	/^#define S_IRWXO /;"	d
S_IRWXU	include/sys/stat.h	/^#define S_IRWXU /;"	d
S_ISBLK	include/sys/stat.h	/^#define S_ISBLK(/;"	d
S_ISCHR	include/sys/stat.h	/^#define S_ISCHR(/;"	d
S_ISDIR	include/sys/stat.h	/^#define S_ISDIR(/;"	d
S_ISFIFO	include/sys/stat.h	/^#define S_ISFIFO(/;"	d
S_ISGID	include/sys/stat.h	/^#define S_ISGID /;"	d
S_ISLNK	include/sys/stat.h	/^#define S_ISLNK(/;"	d
S_ISREG	include/sys/stat.h	/^#define S_ISREG(/;"	d
S_ISUID	include/sys/stat.h	/^#define S_ISUID /;"	d
S_ISVTX	include/sys/stat.h	/^#define S_ISVTX /;"	d
S_IWGRP	include/sys/stat.h	/^#define S_IWGRP /;"	d
S_IWOTH	include/sys/stat.h	/^#define S_IWOTH /;"	d
S_IWUSR	include/sys/stat.h	/^#define S_IWUSR /;"	d
S_IXGRP	include/sys/stat.h	/^#define S_IXGRP /;"	d
S_IXOTH	include/sys/stat.h	/^#define S_IXOTH /;"	d
S_IXUSR	include/sys/stat.h	/^#define S_IXUSR /;"	d
TAB0	include/termios.h	/^#define   TAB0	/;"	d
TAB1	include/termios.h	/^#define   TAB1	/;"	d
TAB2	include/termios.h	/^#define   TAB2	/;"	d
TAB3	include/termios.h	/^#define   TAB3	/;"	d
TABDLY	include/termios.h	/^#define TABDLY	/;"	d
TASK_INTERRUPTIBLE	include/linux/sched.h	/^#define TASK_INTERRUPTIBLE	/;"	d
TASK_RUNNING	include/linux/sched.h	/^#define TASK_RUNNING	/;"	d
TASK_SIZE	include/linux/sched.h	/^#define TASK_SIZE	/;"	d
TASK_STOPPED	include/linux/sched.h	/^#define TASK_STOPPED	/;"	d
TASK_UNINTERRUPTIBLE	include/linux/sched.h	/^#define TASK_UNINTERRUPTIBLE	/;"	d
TASK_ZOMBIE	include/linux/sched.h	/^#define TASK_ZOMBIE	/;"	d
TCFLSH	include/termios.h	/^#define TCFLSH	/;"	d
TCGETA	include/termios.h	/^#define TCGETA	/;"	d
TCGETS	include/termios.h	/^#define TCGETS	/;"	d
TCIFLUSH	include/termios.h	/^#define	TCIFLUSH	/;"	d
TCIOFF	include/termios.h	/^#define	TCIOFF	/;"	d
TCIOFLUSH	include/termios.h	/^#define	TCIOFLUSH	/;"	d
TCION	include/termios.h	/^#define	TCION	/;"	d
TCOFLUSH	include/termios.h	/^#define	TCOFLUSH	/;"	d
TCOOFF	include/termios.h	/^#define	TCOOFF	/;"	d
TCOON	include/termios.h	/^#define	TCOON	/;"	d
TCSADRAIN	include/termios.h	/^#define	TCSADRAIN	/;"	d
TCSAFLUSH	include/termios.h	/^#define	TCSAFLUSH	/;"	d
TCSANOW	include/termios.h	/^#define	TCSANOW	/;"	d
TCSBRK	include/termios.h	/^#define TCSBRK	/;"	d
TCSETA	include/termios.h	/^#define TCSETA	/;"	d
TCSETAF	include/termios.h	/^#define TCSETAF	/;"	d
TCSETAW	include/termios.h	/^#define TCSETAW	/;"	d
TCSETS	include/termios.h	/^#define TCSETS	/;"	d
TCSETSF	include/termios.h	/^#define TCSETSF	/;"	d
TCSETSW	include/termios.h	/^#define TCSETSW	/;"	d
TCXONC	include/termios.h	/^#define TCXONC	/;"	d
TIME_REQUESTS	kernel/sched.c	/^#define TIME_REQUESTS /;"	d	file:
TIOCEXCL	include/termios.h	/^#define TIOCEXCL	/;"	d
TIOCGPGRP	include/termios.h	/^#define TIOCGPGRP	/;"	d
TIOCGSOFTCAR	include/termios.h	/^#define TIOCGSOFTCAR	/;"	d
TIOCGWINSZ	include/termios.h	/^#define TIOCGWINSZ	/;"	d
TIOCINQ	include/termios.h	/^#define TIOCINQ	/;"	d
TIOCMBIC	include/termios.h	/^#define TIOCMBIC	/;"	d
TIOCMBIS	include/termios.h	/^#define TIOCMBIS	/;"	d
TIOCMGET	include/termios.h	/^#define TIOCMGET	/;"	d
TIOCMSET	include/termios.h	/^#define TIOCMSET	/;"	d
TIOCM_CAR	include/termios.h	/^#define TIOCM_CAR	/;"	d
TIOCM_CD	include/termios.h	/^#define TIOCM_CD	/;"	d
TIOCM_CTS	include/termios.h	/^#define TIOCM_CTS	/;"	d
TIOCM_DSR	include/termios.h	/^#define TIOCM_DSR	/;"	d
TIOCM_DTR	include/termios.h	/^#define TIOCM_DTR	/;"	d
TIOCM_LE	include/termios.h	/^#define TIOCM_LE	/;"	d
TIOCM_RI	include/termios.h	/^#define TIOCM_RI	/;"	d
TIOCM_RNG	include/termios.h	/^#define TIOCM_RNG	/;"	d
TIOCM_RTS	include/termios.h	/^#define TIOCM_RTS	/;"	d
TIOCM_SR	include/termios.h	/^#define TIOCM_SR	/;"	d
TIOCM_ST	include/termios.h	/^#define TIOCM_ST	/;"	d
TIOCNXCL	include/termios.h	/^#define TIOCNXCL	/;"	d
TIOCOUTQ	include/termios.h	/^#define TIOCOUTQ	/;"	d
TIOCSCTTY	include/termios.h	/^#define TIOCSCTTY	/;"	d
TIOCSPGRP	include/termios.h	/^#define TIOCSPGRP	/;"	d
TIOCSSOFTCAR	include/termios.h	/^#define TIOCSSOFTCAR	/;"	d
TIOCSTI	include/termios.h	/^#define TIOCSTI	/;"	d
TIOCSWINSZ	include/termios.h	/^#define TIOCSWINSZ	/;"	d
TOSTOP	include/termios.h	/^#define TOSTOP	/;"	d
TRK0_ERR	include/linux/hdreg.h	/^#define TRK0_ERR	/;"	d
TTY_BUF_SIZE	include/linux/tty.h	/^#define TTY_BUF_SIZE /;"	d
TTY_BUF_SIZE	include/termios.h	/^#define TTY_BUF_SIZE /;"	d
TTY_TABLE	include/linux/tty.h	/^#define TTY_TABLE(/;"	d
TYPE	kernel/blk_drv/floppy.c	/^#define TYPE(/;"	d	file:
USED	include/linux/mm.h	/^#define USED /;"	d
UTS_MACHINE	include/linux/config.h	/^#define UTS_MACHINE /;"	d
UTS_NODENAME	include/linux/config.h	/^#define UTS_NODENAME /;"	d
UTS_RELEASE	include/linux/config.h	/^#define UTS_RELEASE /;"	d
UTS_SYSNAME	include/linux/config.h	/^#define UTS_SYSNAME /;"	d
UTS_VERSION	include/linux/config.h	/^#define UTS_VERSION /;"	d
VDISCARD	include/termios.h	/^#define VDISCARD /;"	d
VEOF	include/termios.h	/^#define VEOF /;"	d
VEOL	include/termios.h	/^#define VEOL /;"	d
VEOL2	include/termios.h	/^#define VEOL2 /;"	d
VERASE	include/termios.h	/^#define VERASE /;"	d
VIDEO_TYPE_CGA	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_CGA	/;"	d	file:
VIDEO_TYPE_EGAC	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_EGAC	/;"	d	file:
VIDEO_TYPE_EGAM	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_EGAM	/;"	d	file:
VIDEO_TYPE_MDA	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_MDA	/;"	d	file:
VINTR	include/termios.h	/^#define VINTR /;"	d
VKILL	include/termios.h	/^#define VKILL /;"	d
VLNEXT	include/termios.h	/^#define VLNEXT /;"	d
VMIN	include/termios.h	/^#define VMIN /;"	d
VM_PAGES	mm/swap.c	/^#define VM_PAGES /;"	d	file:
VQUIT	include/termios.h	/^#define VQUIT /;"	d
VREPRINT	include/termios.h	/^#define VREPRINT /;"	d
VSTART	include/termios.h	/^#define VSTART /;"	d
VSTOP	include/termios.h	/^#define VSTOP /;"	d
VSUSP	include/termios.h	/^#define VSUSP /;"	d
VSWTC	include/termios.h	/^#define VSWTC /;"	d
VT0	include/termios.h	/^#define   VT0	/;"	d
VT1	include/termios.h	/^#define   VT1	/;"	d
VTDLY	include/termios.h	/^#define VTDLY	/;"	d
VTIME	include/termios.h	/^#define VTIME /;"	d
VWERASE	include/termios.h	/^#define VWERASE /;"	d
WAKEUP_CHARS	kernel/chr_drv/serial.c	/^#define WAKEUP_CHARS /;"	d	file:
WCOREDUMP	include/sys/wait.h	/^#define WCOREDUMP(/;"	d
WEXITSTATUS	include/sys/wait.h	/^#define WEXITSTATUS(/;"	d
WIFEXITED	include/sys/wait.h	/^#define WIFEXITED(/;"	d
WIFSIGNALED	include/sys/wait.h	/^#define WIFSIGNALED(/;"	d
WIFSTOPPED	include/sys/wait.h	/^#define WIFSTOPPED(/;"	d
WIN_DIAGNOSE	include/linux/hdreg.h	/^#define WIN_DIAGNOSE	/;"	d
WIN_FORMAT	include/linux/hdreg.h	/^#define WIN_FORMAT	/;"	d
WIN_INIT	include/linux/hdreg.h	/^#define WIN_INIT	/;"	d
WIN_READ	include/linux/hdreg.h	/^#define WIN_READ	/;"	d
WIN_RESTORE	include/linux/hdreg.h	/^#define WIN_RESTORE	/;"	d
WIN_SEEK	include/linux/hdreg.h	/^#define WIN_SEEK /;"	d
WIN_SPECIFY	include/linux/hdreg.h	/^#define WIN_SPECIFY	/;"	d
WIN_VERIFY	include/linux/hdreg.h	/^#define WIN_VERIFY	/;"	d
WIN_WRITE	include/linux/hdreg.h	/^#define WIN_WRITE	/;"	d
WNOHANG	include/sys/wait.h	/^#define WNOHANG	/;"	d
WRERR_STAT	include/linux/hdreg.h	/^#define WRERR_STAT	/;"	d
WRITE	include/linux/fs.h	/^#define WRITE /;"	d
WRITEA	include/linux/fs.h	/^#define WRITEA /;"	d
WSTOPSIG	include/sys/wait.h	/^#define WSTOPSIG(/;"	d
WTERMSIG	include/sys/wait.h	/^#define WTERMSIG(/;"	d
WUNTRACED	include/sys/wait.h	/^#define WUNTRACED	/;"	d
W_OK	include/unistd.h	/^#define W_OK	/;"	d
XCASE	include/termios.h	/^#define XCASE	/;"	d
XTABS	include/termios.h	/^#define   XTABS	/;"	d
X_OK	include/unistd.h	/^#define X_OK	/;"	d
YEAR	kernel/mktime.c	/^#define YEAR /;"	d	file:
ZEROPAD	kernel/vsprintf.c	/^#define ZEROPAD	/;"	d	file:
ZMAGIC	include/a.out.h	/^#define ZMAGIC /;"	d
Z_MAP_SLOTS	include/linux/fs.h	/^#define Z_MAP_SLOTS /;"	d
_A_OUT_H	include/a.out.h	/^#define _A_OUT_H$/;"	d
_BLK_H	kernel/blk_drv/blk.h	/^#define _BLK_H$/;"	d
_BLOCKABLE	kernel/sched.c	/^#define _BLOCKABLE /;"	d	file:
_C	include/ctype.h	/^#define _C	/;"	d
_CONFIG_H	include/linux/config.h	/^#define _CONFIG_H$/;"	d
_CONST_H	include/const.h	/^#define _CONST_H$/;"	d
_CTYPE_H	include/ctype.h	/^#define _CTYPE_H$/;"	d
_D	include/ctype.h	/^#define _D	/;"	d
_ERRNO_H	include/errno.h	/^#define _ERRNO_H$/;"	d
_FCNTL_H	include/fcntl.h	/^#define _FCNTL_H$/;"	d
_FDREG_H	include/linux/fdreg.h	/^#define _FDREG_H$/;"	d
_FS_H	include/linux/fs.h	/^#define _FS_H$/;"	d
_HDREG_H	include/linux/hdreg.h	/^#define _HDREG_H$/;"	d
_HEAD_H	include/linux/head.h	/^#define _HEAD_H$/;"	d
_HIGH	include/sys/wait.h	/^#define _HIGH(/;"	d
_I_FLAG	kernel/chr_drv/tty_io.c	/^#define _I_FLAG(/;"	d	file:
_L	include/ctype.h	/^#define _L	/;"	d
_LDT	include/linux/sched.h	/^#define _LDT(/;"	d
_LINUX_MATH_EMU_H	include/linux/math_emu.h	/^#define _LINUX_MATH_EMU_H$/;"	d
_LOW	include/sys/wait.h	/^#define _LOW(/;"	d
_L_FLAG	kernel/chr_drv/tty_io.c	/^#define _L_FLAG(/;"	d	file:
_MM_H	include/linux/mm.h	/^#define _MM_H$/;"	d
_NSIG	include/signal.h	/^#define _NSIG /;"	d
_N_BADMAG	include/a.out.h	/^#define _N_BADMAG(/;"	d
_N_HDROFF	include/a.out.h	/^#define _N_HDROFF(/;"	d
_N_SEGMENT_ROUND	include/a.out.h	/^#define _N_SEGMENT_ROUND(/;"	d
_N_TXTENDADDR	include/a.out.h	/^#define _N_TXTENDADDR(/;"	d
_O_FLAG	kernel/chr_drv/tty_io.c	/^#define _O_FLAG(/;"	d	file:
_P	include/ctype.h	/^#define _P	/;"	d
_PC_CHOWN_RESTRICTED	include/unistd.h	/^#define _PC_CHOWN_RESTRICTED	/;"	d
_PC_LINK_MAX	include/unistd.h	/^#define _PC_LINK_MAX	/;"	d
_PC_MAX_CANON	include/unistd.h	/^#define _PC_MAX_CANON	/;"	d
_PC_MAX_INPUT	include/unistd.h	/^#define _PC_MAX_INPUT	/;"	d
_PC_NAME_MAX	include/unistd.h	/^#define _PC_NAME_MAX	/;"	d
_PC_NO_TRUNC	include/unistd.h	/^#define _PC_NO_TRUNC	/;"	d
_PC_PATH_MAX	include/unistd.h	/^#define _PC_PATH_MAX	/;"	d
_PC_PIPE_BUF	include/unistd.h	/^#define _PC_PIPE_BUF	/;"	d
_PC_VDISABLE	include/unistd.h	/^#define _PC_VDISABLE	/;"	d
_POSIX_CHOWN_RESTRICTED	include/unistd.h	/^#define _POSIX_CHOWN_RESTRICTED	/;"	d
_POSIX_JOB_CONTROL	include/unistd.h	/^#define _POSIX_JOB_CONTROL$/;"	d
_POSIX_NO_TRUNC	include/unistd.h	/^#define _POSIX_NO_TRUNC	/;"	d
_POSIX_SAVED_IDS	include/unistd.h	/^#define _POSIX_SAVED_IDS	/;"	d
_POSIX_VDISABLE	include/unistd.h	/^#define _POSIX_VDISABLE /;"	d
_POSIX_VERSION	include/unistd.h	/^#define _POSIX_VERSION /;"	d
_PTRDIFF_T	include/stddef.h	/^#define _PTRDIFF_T$/;"	d
_PTRDIFF_T	include/sys/types.h	/^#define _PTRDIFF_T$/;"	d
_S	include/ctype.h	/^#define _S	/;"	d
_S	kernel/sched.c	/^#define _S(/;"	d	file:
_SCHED_H	include/linux/sched.h	/^#define _SCHED_H$/;"	d
_SC_ARG_MAX	include/unistd.h	/^#define _SC_ARG_MAX	/;"	d
_SC_CHILD_MAX	include/unistd.h	/^#define _SC_CHILD_MAX	/;"	d
_SC_CLOCKS_PER_SEC	include/unistd.h	/^#define _SC_CLOCKS_PER_SEC	/;"	d
_SC_JOB_CONTROL	include/unistd.h	/^#define _SC_JOB_CONTROL	/;"	d
_SC_NGROUPS_MAX	include/unistd.h	/^#define _SC_NGROUPS_MAX	/;"	d
_SC_OPEN_MAX	include/unistd.h	/^#define _SC_OPEN_MAX	/;"	d
_SC_SAVED_IDS	include/unistd.h	/^#define _SC_SAVED_IDS	/;"	d
_SC_VERSION	include/unistd.h	/^#define _SC_VERSION	/;"	d
_SIGNAL_H	include/signal.h	/^#define _SIGNAL_H$/;"	d
_SIZE_T	include/stddef.h	/^#define _SIZE_T$/;"	d
_SIZE_T	include/string.h	/^#define _SIZE_T$/;"	d
_SIZE_T	include/sys/types.h	/^#define _SIZE_T$/;"	d
_SIZE_T	include/time.h	/^#define _SIZE_T$/;"	d
_SP	include/ctype.h	/^#define _SP	/;"	d
_STDARG_H	include/stdarg.h	/^#define _STDARG_H$/;"	d
_STDDEF_H	include/stddef.h	/^#define _STDDEF_H$/;"	d
_STRING_H_	include/string.h	/^#define _STRING_H_$/;"	d
_SYS_PARAM_H	include/sys/param.h	/^#define _SYS_PARAM_H$/;"	d
_SYS_RESOURCE_H	include/sys/resource.h	/^#define _SYS_RESOURCE_H$/;"	d
_SYS_STAT_H	include/sys/stat.h	/^#define _SYS_STAT_H$/;"	d
_SYS_TIME_H	include/sys/time.h	/^#define _SYS_TIME_H$/;"	d
_SYS_TYPES_H	include/sys/types.h	/^#define _SYS_TYPES_H$/;"	d
_SYS_UTSNAME_H	include/sys/utsname.h	/^#define _SYS_UTSNAME_H$/;"	d
_SYS_WAIT_H	include/sys/wait.h	/^#define _SYS_WAIT_H$/;"	d
_TERMIOS_H	include/termios.h	/^#define _TERMIOS_H$/;"	d
_TIMES_H	include/sys/times.h	/^#define _TIMES_H$/;"	d
_TIME_H	include/time.h	/^#define _TIME_H$/;"	d
_TIME_T	include/sys/types.h	/^#define _TIME_T$/;"	d
_TIME_T	include/time.h	/^#define _TIME_T$/;"	d
_TSS	include/linux/sched.h	/^#define _TSS(/;"	d
_TTY_H	include/linux/tty.h	/^#define _TTY_H$/;"	d
_U	include/ctype.h	/^#define _U	/;"	d
_UNISTD_H	include/unistd.h	/^#define _UNISTD_H$/;"	d
_UTIME_H	include/utime.h	/^#define _UTIME_H$/;"	d
_X	include/ctype.h	/^#define _X	/;"	d
__ALIGNED_TEMP_REAL	kernel/math/math_emulate.c	/^#define __ALIGNED_TEMP_REAL /;"	d	file:
__GNU_EXEC_MACROS__	include/a.out.h	/^#define __GNU_EXEC_MACROS__$/;"	d
__LIBRARY__	init/main.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/_exit.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/close.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/dup.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/execve.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/open.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/setsid.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/string.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/wait.c	/^#define __LIBRARY__$/;"	d	file:
__LIBRARY__	lib/write.c	/^#define __LIBRARY__$/;"	d	file:
__NR_access	include/unistd.h	/^#define __NR_access	/;"	d
__NR_acct	include/unistd.h	/^#define __NR_acct	/;"	d
__NR_alarm	include/unistd.h	/^#define __NR_alarm	/;"	d
__NR_break	include/unistd.h	/^#define __NR_break	/;"	d
__NR_brk	include/unistd.h	/^#define __NR_brk	/;"	d
__NR_chdir	include/unistd.h	/^#define __NR_chdir	/;"	d
__NR_chmod	include/unistd.h	/^#define __NR_chmod	/;"	d
__NR_chown	include/unistd.h	/^#define __NR_chown	/;"	d
__NR_chroot	include/unistd.h	/^#define __NR_chroot	/;"	d
__NR_close	include/unistd.h	/^#define __NR_close	/;"	d
__NR_creat	include/unistd.h	/^#define __NR_creat	/;"	d
__NR_dup	include/unistd.h	/^#define __NR_dup	/;"	d
__NR_dup2	include/unistd.h	/^#define __NR_dup2	/;"	d
__NR_execve	include/unistd.h	/^#define __NR_execve	/;"	d
__NR_exit	include/unistd.h	/^#define __NR_exit	/;"	d
__NR_fcntl	include/unistd.h	/^#define __NR_fcntl	/;"	d
__NR_fork	include/unistd.h	/^#define __NR_fork	/;"	d
__NR_fstat	include/unistd.h	/^#define __NR_fstat	/;"	d
__NR_ftime	include/unistd.h	/^#define __NR_ftime	/;"	d
__NR_getegid	include/unistd.h	/^#define __NR_getegid	/;"	d
__NR_geteuid	include/unistd.h	/^#define __NR_geteuid	/;"	d
__NR_getgid	include/unistd.h	/^#define __NR_getgid	/;"	d
__NR_getgroups	include/unistd.h	/^#define __NR_getgroups	/;"	d
__NR_getpgrp	include/unistd.h	/^#define __NR_getpgrp	/;"	d
__NR_getpid	include/unistd.h	/^#define __NR_getpid	/;"	d
__NR_getppid	include/unistd.h	/^#define __NR_getppid	/;"	d
__NR_getrlimit	include/unistd.h	/^#define __NR_getrlimit	/;"	d
__NR_getrusage	include/unistd.h	/^#define __NR_getrusage	/;"	d
__NR_gettimeofday	include/unistd.h	/^#define __NR_gettimeofday /;"	d
__NR_getuid	include/unistd.h	/^#define __NR_getuid	/;"	d
__NR_gtty	include/unistd.h	/^#define __NR_gtty	/;"	d
__NR_ioctl	include/unistd.h	/^#define __NR_ioctl	/;"	d
__NR_kill	include/unistd.h	/^#define __NR_kill	/;"	d
__NR_link	include/unistd.h	/^#define __NR_link	/;"	d
__NR_lock	include/unistd.h	/^#define __NR_lock	/;"	d
__NR_lseek	include/unistd.h	/^#define __NR_lseek	/;"	d
__NR_lstat	include/unistd.h	/^#define __NR_lstat	/;"	d
__NR_mkdir	include/unistd.h	/^#define __NR_mkdir	/;"	d
__NR_mknod	include/unistd.h	/^#define __NR_mknod	/;"	d
__NR_mount	include/unistd.h	/^#define __NR_mount	/;"	d
__NR_mpx	include/unistd.h	/^#define __NR_mpx	/;"	d
__NR_nice	include/unistd.h	/^#define __NR_nice	/;"	d
__NR_open	include/unistd.h	/^#define __NR_open	/;"	d
__NR_pause	include/unistd.h	/^#define __NR_pause	/;"	d
__NR_phys	include/unistd.h	/^#define __NR_phys	/;"	d
__NR_pipe	include/unistd.h	/^#define __NR_pipe	/;"	d
__NR_prof	include/unistd.h	/^#define __NR_prof	/;"	d
__NR_ptrace	include/unistd.h	/^#define __NR_ptrace	/;"	d
__NR_read	include/unistd.h	/^#define __NR_read	/;"	d
__NR_readlink	include/unistd.h	/^#define __NR_readlink	/;"	d
__NR_rename	include/unistd.h	/^#define __NR_rename	/;"	d
__NR_rmdir	include/unistd.h	/^#define __NR_rmdir	/;"	d
__NR_select	include/unistd.h	/^#define __NR_select	/;"	d
__NR_setgid	include/unistd.h	/^#define __NR_setgid	/;"	d
__NR_setgroups	include/unistd.h	/^#define __NR_setgroups	/;"	d
__NR_sethostname	include/unistd.h	/^#define __NR_sethostname /;"	d
__NR_setpgid	include/unistd.h	/^#define __NR_setpgid	/;"	d
__NR_setregid	include/unistd.h	/^#define __NR_setregid	/;"	d
__NR_setreuid	include/unistd.h	/^#define __NR_setreuid	/;"	d
__NR_setrlimit	include/unistd.h	/^#define __NR_setrlimit	/;"	d
__NR_setsid	include/unistd.h	/^#define __NR_setsid	/;"	d
__NR_settimeofday	include/unistd.h	/^#define __NR_settimeofday /;"	d
__NR_setuid	include/unistd.h	/^#define __NR_setuid	/;"	d
__NR_setup	include/unistd.h	/^#define __NR_setup	/;"	d
__NR_sgetmask	include/unistd.h	/^#define __NR_sgetmask	/;"	d
__NR_sigaction	include/unistd.h	/^#define __NR_sigaction	/;"	d
__NR_signal	include/unistd.h	/^#define __NR_signal	/;"	d
__NR_sigpending	include/unistd.h	/^#define __NR_sigpending /;"	d
__NR_sigsuspend	include/unistd.h	/^#define __NR_sigsuspend	/;"	d
__NR_ssetmask	include/unistd.h	/^#define __NR_ssetmask	/;"	d
__NR_stat	include/unistd.h	/^#define __NR_stat	/;"	d
__NR_stime	include/unistd.h	/^#define __NR_stime	/;"	d
__NR_stty	include/unistd.h	/^#define __NR_stty	/;"	d
__NR_symlink	include/unistd.h	/^#define __NR_symlink	/;"	d
__NR_sync	include/unistd.h	/^#define __NR_sync	/;"	d
__NR_time	include/unistd.h	/^#define __NR_time	/;"	d
__NR_times	include/unistd.h	/^#define __NR_times	/;"	d
__NR_ulimit	include/unistd.h	/^#define __NR_ulimit	/;"	d
__NR_umask	include/unistd.h	/^#define __NR_umask	/;"	d
__NR_umount	include/unistd.h	/^#define __NR_umount	/;"	d
__NR_uname	include/unistd.h	/^#define __NR_uname	/;"	d
__NR_unlink	include/unistd.h	/^#define __NR_unlink	/;"	d
__NR_uselib	include/unistd.h	/^#define __NR_uselib	/;"	d
__NR_ustat	include/unistd.h	/^#define __NR_ustat	/;"	d
__NR_utime	include/unistd.h	/^#define __NR_utime	/;"	d
__NR_waitpid	include/unistd.h	/^#define __NR_waitpid	/;"	d
__NR_write	include/unistd.h	/^#define __NR_write	/;"	d
___cs	include/linux/math_emu.h	/^	long ___cs;$/;"	m	struct:info
___ds	include/linux/math_emu.h	/^	long ___ds;$/;"	m	struct:info
___eax	include/linux/math_emu.h	/^	long ___eax;$/;"	m	struct:info
___ebp	include/linux/math_emu.h	/^	long ___ebp;$/;"	m	struct:info
___ebx	include/linux/math_emu.h	/^	long ___ebx;$/;"	m	struct:info
___ecx	include/linux/math_emu.h	/^	long ___ecx;$/;"	m	struct:info
___edi	include/linux/math_emu.h	/^	long ___edi;$/;"	m	struct:info
___edx	include/linux/math_emu.h	/^	long ___edx;$/;"	m	struct:info
___eflags	include/linux/math_emu.h	/^	long ___eflags;$/;"	m	struct:info
___eip	include/linux/math_emu.h	/^	long ___eip;$/;"	m	struct:info
___es	include/linux/math_emu.h	/^	long ___es;$/;"	m	struct:info
___esi	include/linux/math_emu.h	/^	long ___esi;$/;"	m	struct:info
___esp	include/linux/math_emu.h	/^	long ___esp;$/;"	m	struct:info
___fs	include/linux/math_emu.h	/^	long ___fs;$/;"	m	struct:info
___math_ret	include/linux/math_emu.h	/^	long ___math_ret;$/;"	m	struct:info
___orig_eax	include/linux/math_emu.h	/^	long ___orig_eax;$/;"	m	struct:info
___orig_eip	include/linux/math_emu.h	/^	long ___orig_eip;$/;"	m	struct:info
___ss	include/linux/math_emu.h	/^	long ___ss;$/;"	m	struct:info
___sys_call_ret	include/linux/math_emu.h	/^	long ___sys_call_ret;$/;"	m	struct:info
__isleap	include/time.h	/^#define	__isleap(/;"	d
__math_abort	kernel/math/math_emulate.c	/^void __math_abort(struct info * info, unsigned int signal)$/;"	f
__regoffset	kernel/math/ea.c	/^static int __regoffset[] = {$/;"	v	file:
__sleep_on	kernel/sched.c	/^static inline void __sleep_on(struct task_struct **p, int state)$/;"	f	file:
__st	kernel/math/math_emulate.c	/^static temp_real_unaligned * __st(int i)$/;"	f	file:
__va_rounded_size	include/stdarg.h	/^#define __va_rounded_size(/;"	d
_alignment_check	kernel/asm.s	/^_alignment_check:$/;"	l
_argv	init/main.s	/^_argv:$/;"	l
_argv_rc	init/main.s	/^_argv_rc:$/;"	l
_bmap	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	f	file:
_bounds	kernel/asm.s	/^_bounds:$/;"	l
_bucket_dir	lib/malloc.c	/^struct _bucket_dir {	\/* 8 bytes *\/$/;"	s	file:
_buffer_memory_end	init/main.s	/^_buffer_memory_end:$/;"	l
_coprocessor_error	kernel/sys_call.s	/^_coprocessor_error:$/;"	l
_coprocessor_segment_overrun	kernel/asm.s	/^_coprocessor_segment_overrun:$/;"	l
_ctmp	lib/ctype.c	/^char _ctmp;$/;"	v
_ctype	lib/ctype.c	/^unsigned char _ctype[] = {0x00,			\/* EOF *\/$/;"	v
_debug	kernel/asm.s	/^_debug:$/;"	l
_device_not_available	kernel/sys_call.s	/^_device_not_available:$/;"	l
_divide_error	kernel/asm.s	/^_divide_error:$/;"	l
_double_fault	kernel/asm.s	/^_double_fault:$/;"	l
_envp	init/main.s	/^_envp:$/;"	l
_envp_rc	init/main.s	/^_envp_rc:$/;"	l
_exit	lib/_exit.c	/^volatile void _exit(int exit_code)$/;"	f
_floppy_interrupt	kernel/sys_call.s	/^_floppy_interrupt:$/;"	l
_fs	kernel/traps.c	/^#define _fs(/;"	d	file:
_gdt	boot/head.s	/^_gdt:	.quad 0x0000000000000000	\/* NULL descriptor *\/$/;"	l
_general_protection	kernel/asm.s	/^_general_protection:$/;"	l
_hashfn	fs/buffer.c	/^#define _hashfn(/;"	d	file:
_hd_interrupt	kernel/sys_call.s	/^_hd_interrupt:$/;"	l
_idt	boot/head.s	/^_idt:	.fill 256,8,0		# idt is uninitialized$/;"	l
_init	init/main.s	/^_init:$/;"	l
_int3	kernel/asm.s	/^_int3:$/;"	l
_invalid_TSS	kernel/asm.s	/^_invalid_TSS:$/;"	l
_invalid_op	kernel/asm.s	/^_invalid_op:$/;"	l
_irq13	kernel/asm.s	/^_irq13:$/;"	l
_keyboard_interrupt	kernel/chr_drv/keyboard.S	/^_keyboard_interrupt:$/;"	l
_main	init/main.s	/^_main:$/;"	l
_main_memory_start	init/main.s	/^_main_memory_start:$/;"	l
_memory_end	init/main.s	/^_memory_end:$/;"	l
_namei	fs/namei.c	/^struct m_inode * _namei(const char * pathname, struct m_inode * base,$/;"	f
_nmi	kernel/asm.s	/^_nmi:$/;"	l
_overflow	kernel/asm.s	/^_overflow:$/;"	l
_page_fault	mm/page.s	/^_page_fault:$/;"	l
_parallel_interrupt	kernel/sys_call.s	/^_parallel_interrupt:$/;"	l
_pg_dir	boot/head.s	/^_pg_dir:$/;"	l
_printf	init/main.s	/^_printf:$/;"	l
_reserved	kernel/asm.s	/^_reserved:$/;"	l
_rs1_interrupt	kernel/chr_drv/rs_io.s	/^_rs1_interrupt:$/;"	l
_rs2_interrupt	kernel/chr_drv/rs_io.s	/^_rs2_interrupt:$/;"	l
_segment_not_present	kernel/asm.s	/^_segment_not_present:$/;"	l
_set_gate	include/asm/system.h	/^#define _set_gate(/;"	d
_set_seg_desc	include/asm/system.h	/^#define _set_seg_desc(/;"	d
_set_tssldt_desc	include/asm/system.h	/^#define _set_tssldt_desc(/;"	d
_sprintf	init/main.s	/^_sprintf:$/;"	l
_stack_segment	kernel/asm.s	/^_stack_segment:$/;"	l
_sys_execve	kernel/sys_call.s	/^_sys_execve:$/;"	l
_sys_fork	kernel/sys_call.s	/^_sys_fork:$/;"	l
_syscall0	include/unistd.h	/^#define _syscall0(/;"	d
_syscall1	include/unistd.h	/^#define _syscall1(/;"	d
_syscall2	include/unistd.h	/^#define _syscall2(/;"	d
_syscall3	include/unistd.h	/^#define _syscall3(/;"	d
_system_call	kernel/sys_call.s	/^_system_call:$/;"	l
_time_init	init/main.s	/^_time_init:$/;"	l
_timer_interrupt	kernel/sys_call.s	/^_timer_interrupt:$/;"	l
_tmp_floppy_area	boot/head.s	/^_tmp_floppy_area:$/;"	l
a	include/linux/head.h	/^	unsigned long a,b;$/;"	m	struct:desc_struct
a	include/linux/math_emu.h	/^	long a,b;$/;"	m	struct:__anon4
a	include/linux/math_emu.h	/^	long a,b;$/;"	m	struct:__anon6
a	include/linux/math_emu.h	/^	long a,b;$/;"	m	struct:__anon7
a	kernel/sched.c	/^	long * a;$/;"	m	struct:__anon12	file:
a_bss	include/a.out.h	/^  unsigned a_bss;		\/* length of uninitialized data area for file, in bytes *\/$/;"	m	struct:exec
a_data	include/a.out.h	/^  unsigned a_data;		\/* length of data, in bytes *\/   \/\/程序数据段$/;"	m	struct:exec
a_drsize	include/a.out.h	/^  unsigned a_drsize;		\/* length of relocation info for data, in bytes *\/$/;"	m	struct:exec
a_entry	include/a.out.h	/^  unsigned a_entry;		\/* start address *\/$/;"	m	struct:exec
a_magic	include/a.out.h	/^  unsigned long a_magic;	\/* Use macros N_MAGIC, etc for access *\/$/;"	m	struct:exec
a_syms	include/a.out.h	/^  unsigned a_syms;		\/* length of symbol table data in file, in bytes *\/$/;"	m	struct:exec
a_text	include/a.out.h	/^  unsigned a_text;		\/* length of text, in bytes *\/   \/\/程序代码段$/;"	m	struct:exec
a_trsize	include/a.out.h	/^  unsigned a_trsize;		\/* length of relocation info for text, in bytes *\/$/;"	m	struct:exec
actime	include/utime.h	/^	time_t actime;$/;"	m	struct:utimbuf
add_entry	fs/namei.c	/^static struct buffer_head * add_entry(struct m_inode * dir,$/;"	f	file:
add_request	kernel/blk_drv/ll_rw_blk.c	/^static void add_request(struct blk_dev_struct * dev, struct request * req)$/;"	f	file:
add_timer	kernel/sched.c	/^void add_timer(long jiffies, void (*fn)(void))$/;"	f
add_wait	fs/select.c	/^static void add_wait(struct task_struct ** wait_address, select_table * p)$/;"	f	file:
addr	include/asm/system.h	/^	::"a" (addr), "m" (*(n)), "m" (*(n+2)), "m" (*(n+4)), \\$/;"	m	class:type
adjust_clock	kernel/sys.c	/^void adjust_clock()$/;"	f
after_page_tables	boot/head.s	/^after_page_tables:$/;"	l
alarm	include/linux/sched.h	/^	unsigned long timeout,alarm;$/;"	m	struct:task_struct
alt	kernel/chr_drv/keyboard.S	/^alt:	movb $0x10,%al$/;"	l
alt_func	kernel/chr_drv/keyboard.S	/^alt_func:$/;"	l
alt_map	kernel/chr_drv/keyboard.S	/^alt_map:$/;"	l
argv	init/main.c	/^static char * argv[] = { "-\/bin\/sh",NULL };$/;"	v	file:
argv_rc	init/main.c	/^static char * argv_rc[] = { "\/bin\/sh", NULL };$/;"	v	file:
attr	kernel/chr_drv/console.c	/^#define attr	/;"	d	file:
audit_ptree	kernel/exit.c	/^void audit_ptree()$/;"	f
b	include/linux/head.h	/^	unsigned long a,b;$/;"	m	struct:desc_struct
b	include/linux/math_emu.h	/^	int b:1;$/;"	m	struct:swd
b	include/linux/math_emu.h	/^	long a,b;$/;"	m	struct:__anon4
b	include/linux/math_emu.h	/^	long a,b;$/;"	m	struct:__anon6
b	include/linux/math_emu.h	/^	long a,b;$/;"	m	struct:__anon7
b	kernel/sched.c	/^	short b;$/;"	m	struct:__anon12	file:
b_blocknr	include/linux/fs.h	/^	unsigned long b_blocknr;	\/* block number *\/   \/\/块编号$/;"	m	struct:buffer_head
b_count	include/linux/fs.h	/^	unsigned char b_count;		\/* users using this block *\/$/;"	m	struct:buffer_head
b_data	include/linux/fs.h	/^	char * b_data;			\/* pointer to data block (1024 bytes) *\/$/;"	m	struct:buffer_head
b_dev	include/linux/fs.h	/^	unsigned short b_dev;		\/* device (0 = free) *\/$/;"	m	struct:buffer_head
b_dirt	include/linux/fs.h	/^	unsigned char b_dirt;		\/* 0-clean,1-dirty *\/$/;"	m	struct:buffer_head
b_lock	include/linux/fs.h	/^	unsigned char b_lock;		\/* 0 - ok, 1 -locked *\/$/;"	m	struct:buffer_head
b_next	include/linux/fs.h	/^	struct buffer_head * b_next; \/\/用在hash queue中$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_next_free	include/linux/fs.h	/^	struct buffer_head * b_next_free; \/\/用在free_list queue中$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_prev	include/linux/fs.h	/^	struct buffer_head * b_prev; \/\/用在hash queue中$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_prev_free	include/linux/fs.h	/^	struct buffer_head * b_prev_free; \/\/用在free_list queue中$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_uptodate	include/linux/fs.h	/^	unsigned char b_uptodate;   \/* 0-not uptodate 1-uptodata *\/$/;"	m	struct:buffer_head
b_wait	include/linux/fs.h	/^	struct task_struct * b_wait; \/\/等待的任务$/;"	m	struct:buffer_head	typeref:struct:buffer_head::task_struct
back_link	include/linux/sched.h	/^	long	back_link;	\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
bad_flp_intr	kernel/blk_drv/floppy.c	/^static void bad_flp_intr(void)$/;"	f	file:
bad_rt	boot/bootsect.S	/^bad_rt:	push	ax				! save error code$/;"	l
bad_rw_intr	kernel/blk_drv/hd.c	/^static void bad_rw_intr(void)$/;"	f	file:
bad_sys_call	kernel/sys_call.s	/^bad_sys_call:$/;"	l
bad_task_ptr	kernel/exit.c	/^int bad_task_ptr(struct task_struct *p)$/;"	f
beepcount	kernel/chr_drv/console.c	/^int beepcount = 0;$/;"	v
begbss	boot/bootsect.S	/^begbss:$/;"	l
begbss	boot/setup.S	/^begbss:$/;"	l
begdata	boot/bootsect.S	/^begdata:$/;"	l
begdata	boot/setup.S	/^begdata:$/;"	l
begtext	boot/bootsect.S	/^begtext:$/;"	l
begtext	boot/setup.S	/^begtext:$/;"	l
bh	kernel/blk_drv/blk.h	/^	struct buffer_head * bh;$/;"	m	struct:request	typeref:struct:request::buffer_head
bitop	mm/swap.c	/^#define bitop(/;"	d	file:
blank_screen	kernel/chr_drv/console.c	/^void blank_screen()$/;"	f
blankcount	kernel/chr_drv/console.c	/^int blankcount = 0;$/;"	v
blankinterval	kernel/chr_drv/console.c	/^int blankinterval = 0;$/;"	v
blk_dev	kernel/blk_drv/ll_rw_blk.c	/^struct blk_dev_struct blk_dev[NR_BLK_DEV] = {$/;"	v	typeref:struct:blk_dev_struct
blk_dev_init	kernel/blk_drv/ll_rw_blk.c	/^void blk_dev_init(void)$/;"	f
blk_dev_struct	kernel/blk_drv/blk.h	/^struct blk_dev_struct {$/;"	s
blk_size	kernel/blk_drv/ll_rw_blk.c	/^int * blk_size[NR_BLK_DEV] = { NULL, NULL, };$/;"	v
block_read	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	f
block_write	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	f
blocked	include/linux/sched.h	/^	long blocked;	\/* bitmap of masked signals *\/$/;"	m	struct:task_struct
blocked	kernel/sys_call.s	/^blocked = (33*16)$/;"	d
bmap	fs/inode.c	/^int bmap(struct m_inode * inode,int block)$/;"	f
boot_flag	boot/bootsect.S	/^boot_flag:$/;"	l
boot_ind	include/linux/hdreg.h	/^	unsigned char boot_ind;		\/* 0x80 - active (unused) *\/$/;"	m	struct:partition
bottom	kernel/chr_drv/console.c	/^#define bottom	/;"	d	file:
bread	fs/buffer.c	/^struct buffer_head * bread(int dev,int block)$/;"	f
bread_page	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	f
breada	fs/buffer.c	/^struct buffer_head * breada(int dev,int first, ...)$/;"	f
brelse	fs/buffer.c	/^void brelse(struct buffer_head * buf)$/;"	f
brk	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
bswapw	kernel/math/math_emulate.c	/^#define bswapw(/;"	d	file:
bucket_desc	lib/malloc.c	/^struct bucket_desc {	\/* 16 bytes *\/$/;"	s	file:
bucket_dir	lib/malloc.c	/^struct _bucket_dir bucket_dir[] = {$/;"	v	typeref:struct:_bucket_dir
bucket_size	lib/malloc.c	/^	unsigned short		bucket_size;  \/\/bucket的大小$/;"	m	struct:bucket_desc	file:
buf	include/linux/tty.h	/^	char buf[TTY_BUF_SIZE];$/;"	m	struct:tty_queue
buf	kernel/chr_drv/keyboard.S	/^buf = 16$/;"	d
buf	kernel/chr_drv/rs_io.s	/^buf = 16$/;"	d
buf	kernel/printk.c	/^static char buf[1024];$/;"	v	file:
buffer	kernel/blk_drv/blk.h	/^	char * buffer;$/;"	m	struct:request
buffer_block	include/linux/fs.h	/^typedef char buffer_block[BLOCK_SIZE];$/;"	t
buffer_head	include/linux/fs.h	/^struct buffer_head {$/;"	s
buffer_init	fs/buffer.c	/^void buffer_init(long buffer_end)$/;"	f
buffer_memory_end	init/main.c	/^static long buffer_memory_end = 0;$/;"	v	file:
buffer_wait	fs/buffer.c	/^static struct task_struct * buffer_wait = NULL;$/;"	v	typeref:struct:task_struct	file:
c0	include/linux/math_emu.h	/^	int c0:1;$/;"	m	struct:swd
c1	include/linux/math_emu.h	/^	int c1:1;$/;"	m	struct:swd
c2	include/linux/math_emu.h	/^	int c2:1;$/;"	m	struct:swd
c3	include/linux/math_emu.h	/^	int c3:1;$/;"	m	struct:swd
c_cc	include/termios.h	/^	cc_t c_cc[NCCS];		\/* control characters *\/$/;"	m	struct:termios
c_cc	include/termios.h	/^	unsigned char c_cc[NCC];	\/* control characters *\/$/;"	m	struct:termio
c_cflag	include/termios.h	/^	tcflag_t c_cflag;		\/* control mode flags *\/$/;"	m	struct:termios
c_cflag	include/termios.h	/^	unsigned short c_cflag;		\/* control mode flags *\/$/;"	m	struct:termio
c_iflag	include/termios.h	/^	tcflag_t c_iflag;		\/* input mode flags *\/$/;"	m	struct:termios
c_iflag	include/termios.h	/^	unsigned short c_iflag;		\/* input mode flags *\/$/;"	m	struct:termio
c_lflag	include/termios.h	/^	tcflag_t c_lflag;		\/* local mode flags *\/$/;"	m	struct:termios
c_lflag	include/termios.h	/^	unsigned short c_lflag;		\/* local mode flags *\/$/;"	m	struct:termio
c_line	include/termios.h	/^	cc_t c_line;			\/* line discipline *\/$/;"	m	struct:termios
c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	struct:termio
c_oflag	include/termios.h	/^	tcflag_t c_oflag;		\/* output mode flags *\/$/;"	m	struct:termios
c_oflag	include/termios.h	/^	unsigned short c_oflag;		\/* output mode flags *\/$/;"	m	struct:termio
can_do_colour	kernel/chr_drv/console.c	/^static int can_do_colour = 0;$/;"	v	file:
caps	kernel/chr_drv/keyboard.S	/^caps:	testb $0x80,mode$/;"	l
cc_t	include/sys/types.h	/^typedef unsigned char cc_t;$/;"	t
chain	lib/malloc.c	/^	struct bucket_desc	*chain;  \/\/该大小bucket的链表$/;"	m	struct:_bucket_dir	typeref:struct:_bucket_dir::bucket_desc	file:
change_console	kernel/chr_drv/tty_io.c	/^void change_console(unsigned int new_console)$/;"	f
change_ldt	fs/exec.c	/^static unsigned long change_ldt(unsigned long text_size,unsigned long * page)$/;"	f	file:
change_speed	kernel/chr_drv/tty_ioctl.c	/^static void change_speed(struct tty_struct * tty)$/;"	f	file:
check_char_dev	fs/open.c	/^static int check_char_dev(struct m_inode * inode, int dev, int flag)$/;"	f	file:
check_disk_change	fs/buffer.c	/^void check_disk_change(int dev)$/;"	f
check_ex	fs/select.c	/^static int check_ex(select_table * wait, struct m_inode * inode)$/;"	f	file:
check_in	fs/select.c	/^static int check_in(select_table * wait, struct m_inode * inode)$/;"	f	file:
check_out	fs/select.c	/^static int check_out(select_table * wait, struct m_inode * inode)$/;"	f	file:
check_x87	boot/head.s	/^check_x87:$/;"	l
checkin	kernel/chr_drv/console.c	/^#define checkin	/;"	d	file:
chr_dev_init	kernel/chr_drv/tty_io.c	/^void chr_dev_init(void)$/;"	f
chsvga	boot/setup.S	/^chsvga:	cld$/;"	l
clear_Cx	kernel/math/compare.c	/^#define clear_Cx(/;"	d	file:
clear_bit	fs/bitmap.c	/^#define clear_bit(/;"	d	file:
clear_block	fs/bitmap.c	/^#define clear_block(/;"	d	file:
cli	include/asm/system.h	/^#define cli(/;"	d
clock_t	include/time.h	/^typedef long clock_t;$/;"	t
close_on_exec	include/linux/sched.h	/^	unsigned long close_on_exec;$/;"	m	struct:task_struct
clrb2	boot/setup.S	/^clrb2:	out	dx,al$/;"	l
cmd	kernel/blk_drv/blk.h	/^	int cmd;		\/* READ or WRITE *\/$/;"	m	struct:request
command	kernel/blk_drv/floppy.c	/^static unsigned char command = 0;$/;"	v	file:
con_init	kernel/chr_drv/console.c	/^void con_init(void)$/;"	f
con_queues	kernel/chr_drv/tty_io.c	/^#define con_queues /;"	d	file:
con_table	kernel/chr_drv/tty_io.c	/^#define con_table /;"	d	file:
con_write	kernel/chr_drv/console.c	/^void con_write(struct tty_struct * tty)$/;"	f
console_print	kernel/chr_drv/console.c	/^void console_print(const char * b)$/;"	f
controller_ready	kernel/blk_drv/hd.c	/^static int controller_ready(void)$/;"	f	file:
copy_buffer	kernel/blk_drv/floppy.c	/^#define copy_buffer(/;"	d	file:
copy_mem	kernel/fork.c	/^int copy_mem(int nr,struct task_struct * p)$/;"	f
copy_page	mm/memory.c	/^#define copy_page(/;"	d	file:
copy_page_tables	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	f
copy_process	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	f
copy_strings	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	f	file:
copy_to_cooked	kernel/chr_drv/tty_io.c	/^void copy_to_cooked(struct tty_struct * tty)$/;"	f
core_dump	kernel/signal.c	/^int core_dump(long signr)$/;"	f
count	fs/exec.c	/^static int count(char ** argv)$/;"	f	file:
counter	include/linux/sched.h	/^	long counter;$/;"	m	struct:task_struct
counter	kernel/sys_call.s	/^counter	= 4$/;"	d
cp_stat	fs/stat.c	/^static void cp_stat(struct m_inode * inode, struct stat * statbuf)$/;"	f	file:
cr	kernel/chr_drv/console.c	/^static void cr(int currcons)$/;"	f	file:
cr3	include/linux/sched.h	/^	long	cr3;$/;"	m	struct:tss_struct
create_block	fs/inode.c	/^int create_block(struct m_inode * inode, int block)$/;"	f
create_tables	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	f	file:
crw_ptr	fs/char_dev.c	/^typedef (*crw_ptr)(int rw,unsigned minor,char * buf,int count,off_t * pos);$/;"	t	file:
crw_table	fs/char_dev.c	/^static crw_ptr crw_table[]={$/;"	v	file:
cs	include/linux/sched.h	/^	long	cs;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
csi_J	kernel/chr_drv/console.c	/^static void csi_J(int currcons, int vpar)$/;"	f	file:
csi_K	kernel/chr_drv/console.c	/^static void csi_K(int currcons, int vpar)$/;"	f	file:
csi_L	kernel/chr_drv/console.c	/^static void csi_L(int currcons, unsigned int nr)$/;"	f	file:
csi_M	kernel/chr_drv/console.c	/^static void csi_M(int currcons, unsigned int nr)$/;"	f	file:
csi_P	kernel/chr_drv/console.c	/^static void csi_P(int currcons, unsigned int nr)$/;"	f	file:
csi_at	kernel/chr_drv/console.c	/^static void csi_at(int currcons, unsigned int nr)$/;"	f	file:
csi_m	kernel/chr_drv/console.c	/^void csi_m(int currcons )$/;"	f
cstime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
ctl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	struct:hd_i_struct	file:
ctrl	kernel/chr_drv/keyboard.S	/^ctrl:	movb $0x04,%al$/;"	l
cur	kernel/chr_drv/keyboard.S	/^cur:	movb cur_table(%eax),%al$/;"	l
cur2	kernel/chr_drv/keyboard.S	/^cur2:	cmpb $0x01,e0		\/* e0 forces cursor movement *\/$/;"	l
cur_rate	kernel/blk_drv/floppy.c	/^static int cur_rate = -1;$/;"	v	file:
cur_spec1	kernel/blk_drv/floppy.c	/^static int cur_spec1 = -1;$/;"	v	file:
cur_table	kernel/chr_drv/keyboard.S	/^cur_table:$/;"	l
current	kernel/sched.c	/^struct task_struct *current = &(init_task.task);$/;"	v	typeref:struct:task_struct
current_DOR	kernel/sched.c	/^unsigned char current_DOR = 0x0C;$/;"	v
current_drive	kernel/blk_drv/floppy.c	/^static unsigned char current_drive = 0;$/;"	v	file:
current_request	kernel/blk_drv/blk.h	/^	struct request * current_request;\/\/链表，所有该设备的设备I\/O请求$/;"	m	struct:blk_dev_struct	typeref:struct:blk_dev_struct::request
current_track	kernel/blk_drv/floppy.c	/^static unsigned char current_track = 255;$/;"	v	file:
cursor	kernel/chr_drv/keyboard.S	/^cursor:$/;"	l
cutime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
cwd	include/linux/sched.h	/^	long	cwd;$/;"	m	struct:i387_struct
cyl	include/linux/hdreg.h	/^	unsigned char cyl;		\/* ? *\/$/;"	m	struct:partition
cyl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	struct:hd_i_struct	file:
d_inode	include/linux/fs.h	/^struct d_inode {$/;"	s
d_super_block	include/linux/fs.h	/^struct d_super_block {$/;"	s
daddr_t	include/sys/types.h	/^typedef int daddr_t;$/;"	t
data	include/linux/tty.h	/^	unsigned long data;$/;"	m	struct:tty_queue
de	include/linux/math_emu.h	/^	int de:1;$/;"	m	struct:swd
dec	boot/setup.S	/^	dec	di$/;"	d
dec	boot/setup.S	/^	dec	dx$/;"	d
def_attr	kernel/chr_drv/console.c	/^#define def_attr	/;"	d	file:
del	kernel/chr_drv/console.c	/^static void del(int currcons)$/;"	f	file:
delete_char	kernel/chr_drv/console.c	/^static void delete_char(int currcons)$/;"	f	file:
delete_line	kernel/chr_drv/console.c	/^static void delete_line(int currcons)$/;"	f	file:
desc_struct	include/linux/head.h	/^typedef struct desc_struct {$/;"	s
desc_table	include/linux/head.h	/^} desc_table[256];$/;"	t	typeref:struct:desc_struct
dev	kernel/blk_drv/blk.h	/^	int dev;		\/* -1 if no request *\/$/;"	m	struct:request
dev_t	include/sys/types.h	/^typedef unsigned short dev_t;$/;"	t
die	boot/bootsect.S	/^die:	jne die			! es must be at 64kB boundary$/;"	l
die	kernel/chr_drv/keyboard.S	/^die:	jmp die$/;"	l
die	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	f	file:
die	tools/build.c	/^void die(char * str)$/;"	f
dir_entry	include/linux/fs.h	/^struct dir_entry {$/;"	s
dir_namei	fs/namei.c	/^static struct m_inode * dir_namei(const char * pathname,$/;"	f	file:
div64	kernel/math/div.c	/^static void div64(int * a, int * b, int * c)$/;"	f	file:
div_t	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	t	typeref:struct:__anon8
do_alignment_check	kernel/traps.c	/^void do_alignment_check(long esp, long error_code)$/;"	f
do_bounds	kernel/traps.c	/^void do_bounds(long esp, long error_code)$/;"	f
do_coprocessor_error	kernel/traps.c	/^void do_coprocessor_error(long esp, long error_code)$/;"	f
do_coprocessor_segment_overrun	kernel/traps.c	/^void do_coprocessor_segment_overrun(long esp, long error_code)$/;"	f
do_debug	kernel/traps.c	/^void do_debug(long esp, long error_code)$/;"	f
do_device_not_available	kernel/traps.c	/^void do_device_not_available(long esp, long error_code)$/;"	f
do_div	kernel/vsprintf.c	/^#define do_div(/;"	d	file:
do_divide_error	kernel/traps.c	/^void do_divide_error(long esp, long error_code)$/;"	f
do_double_fault	kernel/traps.c	/^void do_double_fault(long esp, long error_code)$/;"	f
do_emu	kernel/math/math_emulate.c	/^static void do_emu(struct info * info)$/;"	f	file:
do_execve	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	f
do_exit	kernel/exit.c	/^volatile void do_exit(long code)$/;"	f
do_fd_request	kernel/blk_drv/floppy.c	/^void do_fd_request(void)$/;"	f
do_floppy_timer	kernel/sched.c	/^void do_floppy_timer(void)$/;"	f
do_general_protection	kernel/traps.c	/^void do_general_protection(long esp, long error_code)$/;"	f
do_hd_request	kernel/blk_drv/hd.c	/^void do_hd_request(void)$/;"	f
do_int3	kernel/traps.c	/^void do_int3(long * esp, long error_code,$/;"	f
do_invalid_TSS	kernel/traps.c	/^void do_invalid_TSS(long esp,long error_code)$/;"	f
do_invalid_op	kernel/traps.c	/^void do_invalid_op(long esp, long error_code)$/;"	f
do_move	boot/setup.S	/^do_move:$/;"	l
do_nmi	kernel/traps.c	/^void do_nmi(long esp, long error_code)$/;"	f
do_no_page	mm/memory.c	/^void do_no_page(unsigned long error_code,unsigned long address)$/;"	f
do_overflow	kernel/traps.c	/^void do_overflow(long esp, long error_code)$/;"	f
do_rd_request	kernel/blk_drv/ramdisk.c	/^void do_rd_request(void)$/;"	f
do_reserved	kernel/traps.c	/^void do_reserved(long esp, long error_code)$/;"	f
do_screendump	kernel/chr_drv/console.c	/^int do_screendump(int arg)$/;"	f
do_segment_not_present	kernel/traps.c	/^void do_segment_not_present(long esp,long error_code)$/;"	f
do_select	fs/select.c	/^int do_select(fd_set in, fd_set out, fd_set ex,$/;"	f
do_self	kernel/chr_drv/keyboard.S	/^do_self:$/;"	l
do_signal	kernel/signal.c	/^int do_signal(long signr,long eax,long ebx, long ecx, long edx, long orig_eax,$/;"	f
do_stack_segment	kernel/traps.c	/^void do_stack_segment(long esp,long error_code)$/;"	f
do_timer	kernel/sched.c	/^void do_timer(long cpl)$/;"	f
do_tty_interrupt	kernel/chr_drv/tty_io.c	/^void do_tty_interrupt(int tty)$/;"	f
do_wp_page	mm/memory.c	/^void do_wp_page(unsigned long error_code,unsigned long address)$/;"	f
docr	boot/setup.S	/^docr:	push	ax$/;"	l
dprnt	boot/setup.S	/^dprnt:	push	ax$/;"	l
drive_busy	kernel/blk_drv/hd.c	/^static int drive_busy(void)$/;"	f	file:
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	s	file:
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	v	typeref:struct:drive_info
ds	include/linux/sched.h	/^	long	ds;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
dscahead	boot/setup.S	/^dscahead:	.word	0x842c, 0x8419, 0x841c, 0xa032, 0x5042$/;"	l
dscati	boot/setup.S	/^dscati:		.word	0x8419, 0x842c$/;"	l
dsccandt	boot/setup.S	/^dsccandt:	.word	0x8419, 0x8432$/;"	l
dsccirrus	boot/setup.S	/^dsccirrus:	.word	0x8419, 0x842c, 0x841e, 0x6425$/;"	l
dsceverex	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	l
dscgenoa	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	l
dscparadise	boot/setup.S	/^dscparadise:	.word	0x8419, 0x842b$/;"	l
dsctrident	boot/setup.S	/^dsctrident:	.word 	0x501e, 0x502b, 0x503c, 0x8419, 0x841e, 0x842b, 0x843c$/;"	l
dsctseng	boot/setup.S	/^dsctseng:	.word	0x503c, 0x6428, 0x8419, 0x841c, 0x842c$/;"	l
dscvideo7	boot/setup.S	/^dscvideo7:	.word	0x502b, 0x503c, 0x643c, 0x8419, 0x842c, 0x841c$/;"	l
dummy	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	m	struct:drive_info	file:
dupfd	fs/fcntl.c	/^static int dupfd(unsigned int fd, unsigned int arg)$/;"	f	file:
e0	kernel/chr_drv/keyboard.S	/^e0:	.byte 0$/;"	l
e0_e1	kernel/chr_drv/keyboard.S	/^e0_e1:	inb $0x61,%al$/;"	l
ea	kernel/math/ea.c	/^char * ea(struct info * info, unsigned short code)$/;"	f
eax	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
ebp	include/linux/sched.h	/^	long	ebp;$/;"	m	struct:tss_struct
ebx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
ecx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
edi	include/linux/sched.h	/^	long	edi;$/;"	m	struct:tss_struct
edx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
eflags	include/linux/sched.h	/^	long	eflags;$/;"	m	struct:tss_struct
egid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	struct:task_struct
eip	include/linux/sched.h	/^	long	eip;$/;"	m	struct:tss_struct
empty_8042	boot/setup.S	/^empty_8042:$/;"	l
empty_dir	fs/namei.c	/^static int empty_dir(struct m_inode * inode)$/;"	f	file:
end_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
end_cyl	include/linux/hdreg.h	/^	unsigned char end_cyl;		\/* ? *\/$/;"	m	struct:partition
end_data	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
end_func	kernel/chr_drv/keyboard.S	/^end_func:$/;"	l
end_head	include/linux/hdreg.h	/^	unsigned char end_head;		\/* ? *\/$/;"	m	struct:partition
end_move	boot/setup.S	/^end_move:$/;"	l
end_request	kernel/blk_drv/blk.h	/^extern inline void end_request(int uptodate)$/;"	f
end_sector	include/linux/hdreg.h	/^	unsigned char end_sector;	\/* ? *\/$/;"	m	struct:partition
endbss	boot/bootsect.S	/^endbss:$/;"	l
endbss	boot/setup.S	/^endbss:$/;"	l
enddata	boot/bootsect.S	/^enddata:$/;"	l
enddata	boot/setup.S	/^enddata:$/;"	l
endtext	boot/bootsect.S	/^endtext:$/;"	l
endtext	boot/setup.S	/^endtext:$/;"	l
entry	boot/bootsect.S	/^entry start$/;"	l
entry	boot/setup.S	/^entry start$/;"	l
entry	fs/select.c	/^	wait_entry entry[NR_OPEN*3];$/;"	m	struct:__anon2	file:
envp	init/main.c	/^static char * envp[] = { "HOME=\/usr\/root", NULL, NULL };$/;"	v	file:
envp_rc	init/main.c	/^static char * envp_rc[] = { "HOME=\/", NULL ,NULL };$/;"	v	file:
errno	lib/errno.c	/^int errno;$/;"	v
error_code	kernel/asm.s	/^error_code:$/;"	l
errors	kernel/blk_drv/blk.h	/^	int errors;$/;"	m	struct:request
es	include/linux/sched.h	/^	long	es;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
esi	include/linux/sched.h	/^	long	esi;$/;"	m	struct:tss_struct
esp	include/linux/sched.h	/^	long	esp;$/;"	m	struct:tss_struct
esp0	include/linux/sched.h	/^	long	esp0;$/;"	m	struct:tss_struct
esp1	include/linux/sched.h	/^	long	esp1;$/;"	m	struct:tss_struct
esp2	include/linux/sched.h	/^	long	esp2;$/;"	m	struct:tss_struct
euid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	struct:task_struct
ev2tri	boot/setup.S	/^ev2tri:	lea	si,dsctrident$/;"	l
even7	boot/setup.S	/^even7:	mov	al,#0x0c$/;"	l
exec	include/a.out.h	/^struct exec {$/;"	s
executable	include/linux/sched.h	/^	struct m_inode * executable;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
exit_code	include/linux/sched.h	/^	int exit_code;$/;"	m	struct:task_struct
exponent	include/linux/math_emu.h	/^	short exponent;$/;"	m	struct:__anon4
exponent	include/linux/math_emu.h	/^	short exponent;$/;"	m	struct:__anon5
extern	lib/string.c	/^#define extern$/;"	d	file:
f_count	include/linux/fs.h	/^	unsigned short f_count;$/;"	m	struct:file
f_flags	include/linux/fs.h	/^	unsigned short f_flags;\/\/READ_ONLY READ_WRITE etc$/;"	m	struct:file
f_fname	include/sys/types.h	/^	char f_fname[6];$/;"	m	struct:ustat
f_fpack	include/sys/types.h	/^	char f_fpack[6];$/;"	m	struct:ustat
f_inode	include/linux/fs.h	/^	struct m_inode * f_inode; \/\/指向的inode$/;"	m	struct:file	typeref:struct:file::m_inode
f_mode	include/linux/fs.h	/^	unsigned short f_mode;$/;"	m	struct:file
f_pos	include/linux/fs.h	/^	off_t f_pos; \/\/位置$/;"	m	struct:file
f_tfree	include/sys/types.h	/^	daddr_t f_tfree;$/;"	m	struct:ustat
f_tinode	include/sys/types.h	/^	ino_t f_tinode;$/;"	m	struct:ustat
fadd	kernel/math/add.c	/^void fadd(const temp_real * src1, const temp_real * src2, temp_real * result)$/;"	f
fcom	kernel/math/compare.c	/^void fcom(const temp_real * src1, const temp_real * src2)$/;"	f
fcs	include/linux/sched.h	/^	long	fcs;$/;"	m	struct:i387_struct
fd_set	include/sys/types.h	/^typedef unsigned long fd_set;$/;"	t
fdiv	kernel/math/div.c	/^void fdiv(const temp_real * src1, const temp_real * src2, temp_real * result)$/;"	f
fg_console	kernel/chr_drv/tty_io.c	/^int fg_console = 0;$/;"	v
file	include/linux/fs.h	/^struct file {$/;"	s
file_read	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f
file_table	fs/file_table.c	/^struct file file_table[NR_FILE];$/;"	v	typeref:struct:file
file_write	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f
filp	include/linux/sched.h	/^	struct file * filp[NR_OPEN];$/;"	m	struct:task_struct	typeref:struct:task_struct::file
fin	boot/setup.S	/^fin:	ret$/;"	l
find_buffer	fs/buffer.c	/^static struct buffer_head * find_buffer(int dev, int block)$/;"	f	file:
find_empty_process	kernel/fork.c	/^int find_empty_process(void)$/;"	f
find_entry	fs/namei.c	/^static struct buffer_head * find_entry(struct m_inode ** dir,$/;"	f	file:
find_first_zero	fs/bitmap.c	/^#define find_first_zero(/;"	d	file:
fip	include/linux/sched.h	/^	long	fip;$/;"	m	struct:i387_struct
flags	include/linux/sched.h	/^	unsigned int flags;	\/* per process flags, defined below *\/$/;"	m	struct:task_struct
flock	include/fcntl.h	/^struct flock {$/;"	s
floppy	kernel/blk_drv/floppy.c	/^static struct floppy_struct * floppy = floppy_type;$/;"	v	typeref:struct:floppy_struct	file:
floppy_change	kernel/blk_drv/floppy.c	/^int floppy_change(unsigned int nr)$/;"	f
floppy_deselect	kernel/blk_drv/floppy.c	/^void floppy_deselect(unsigned int nr)$/;"	f
floppy_init	kernel/blk_drv/floppy.c	/^void floppy_init(void)$/;"	f
floppy_off	kernel/sched.c	/^void floppy_off(unsigned int nr)$/;"	f
floppy_on	kernel/sched.c	/^void floppy_on(unsigned int nr)$/;"	f
floppy_on_interrupt	kernel/blk_drv/floppy.c	/^static void floppy_on_interrupt(void)$/;"	f	file:
floppy_sizes	kernel/blk_drv/floppy.c	/^static int floppy_sizes[] ={$/;"	v	file:
floppy_struct	kernel/blk_drv/floppy.c	/^static struct floppy_struct {$/;"	s	file:
floppy_type	kernel/blk_drv/floppy.c	/^} floppy_type[] = {$/;"	v	typeref:struct:floppy_struct	file:
flush	kernel/chr_drv/tty_ioctl.c	/^static void flush(struct tty_queue * queue)$/;"	f	file:
fmul	kernel/math/mul.c	/^void fmul(const temp_real * src1, const temp_real * src2, temp_real * result)$/;"	f
fn	kernel/sched.c	/^	void (*fn)();$/;"	m	struct:timer_list	file:
fn_ptr	include/linux/sched.h	/^typedef int (*fn_ptr)();$/;"	t
follow_link	fs/namei.c	/^static struct m_inode * follow_link(struct m_inode * dir, struct m_inode * inode)$/;"	f	file:
foo	include/linux/sched.h	/^	long	foo;$/;"	m	struct:i387_struct
fos	include/linux/sched.h	/^	long	fos;$/;"	m	struct:i387_struct
fpop	kernel/math/math_emulate.c	/^static void fpop(void)$/;"	f	file:
fpush	kernel/math/math_emulate.c	/^static void fpush(void)$/;"	f	file:
free	include/linux/kernel.h	/^#define free(/;"	d
free_bucket_desc	lib/malloc.c	/^struct bucket_desc *free_bucket_desc = (struct bucket_desc *) 0;$/;"	v	typeref:struct:bucket_desc
free_dind	fs/truncate.c	/^static int free_dind(int dev,int block)$/;"	f	file:
free_ind	fs/truncate.c	/^static int free_ind(int dev,int block)$/;"	f	file:
free_list	fs/buffer.c	/^static struct buffer_head * free_list;$/;"	v	typeref:struct:buffer_head	file:
free_page	mm/memory.c	/^void free_page(unsigned long addr)$/;"	f
free_page_tables	mm/memory.c	/^int free_page_tables(unsigned long from,unsigned long size)$/;"	f
free_s	lib/malloc.c	/^void free_s(void *obj, int size)$/;"	f
free_super	fs/super.c	/^static void free_super(struct super_block * sb)$/;"	f	file:
free_wait	fs/select.c	/^static void free_wait(select_table * p)$/;"	f	file:
freeptr	lib/malloc.c	/^	void			*freeptr;     \/\/当前可用页的线性地址(0表示无可用)$/;"	m	struct:bucket_desc	file:
fs	include/linux/sched.h	/^	long	fs;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ftst	kernel/math/compare.c	/^void ftst(const temp_real * a)$/;"	f
fucom	kernel/math/compare.c	/^void fucom(const temp_real * src1, const temp_real * src2)$/;"	f
func	kernel/chr_drv/keyboard.S	/^func:$/;"	l
func_table	kernel/chr_drv/keyboard.S	/^func_table:$/;"	l
fxchg	kernel/math/math_emulate.c	/^static void fxchg(temp_real_unaligned * a, temp_real_unaligned * b)$/;"	f	file:
gap	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	struct:floppy_struct	file:
gdt	boot/setup.S	/^gdt:$/;"	l
gdt_48	boot/setup.S	/^gdt_48:$/;"	l
gdt_descr	boot/head.s	/^gdt_descr:$/;"	l
get_BCD	kernel/math/get_put.c	/^void get_BCD(temp_real * tmp, struct info * info, unsigned short code)$/;"	f
get_dir	fs/namei.c	/^static struct m_inode * get_dir(const char * pathname, struct m_inode * inode)$/;"	f	file:
get_ds	include/asm/segment.h	/^extern inline unsigned long get_ds() $/;"	f
get_empty_inode	fs/inode.c	/^struct m_inode * get_empty_inode(void)$/;"	f
get_empty_page	mm/memory.c	/^void get_empty_page(unsigned long address)$/;"	f
get_free_page	mm/swap.c	/^unsigned long get_free_page(void)$/;"	f
get_fs	include/asm/segment.h	/^extern inline unsigned long get_fs() $/;"	f
get_fs_byte	include/asm/segment.h	/^extern inline unsigned char get_fs_byte(const char * addr)$/;"	f
get_fs_long	include/asm/segment.h	/^extern inline unsigned long get_fs_long(const unsigned long *addr)$/;"	f
get_fs_word	include/asm/segment.h	/^extern inline unsigned short get_fs_word(const unsigned short *addr)$/;"	f
get_hash_table	fs/buffer.c	/^struct buffer_head * get_hash_table(int dev, int block)$/;"	f
get_long_int	kernel/math/get_put.c	/^void get_long_int(temp_real * tmp,$/;"	f
get_long_real	kernel/math/get_put.c	/^void get_long_real(temp_real * tmp,$/;"	f
get_longlong_int	kernel/math/get_put.c	/^void get_longlong_int(temp_real * tmp,$/;"	f
get_new	kernel/signal.c	/^static inline void get_new(char * from,char * to)$/;"	f	file:
get_pipe_inode	fs/inode.c	/^struct m_inode * get_pipe_inode(void)$/;"	f
get_seg_byte	kernel/traps.c	/^#define get_seg_byte(/;"	d	file:
get_seg_long	kernel/traps.c	/^#define get_seg_long(/;"	d	file:
get_short_int	kernel/math/get_put.c	/^void get_short_int(temp_real * tmp,$/;"	f
get_short_real	kernel/math/get_put.c	/^void get_short_real(temp_real * tmp,$/;"	f
get_super	fs/super.c	/^struct super_block * get_super(int dev)$/;"	f
get_swap_page	mm/swap.c	/^static int get_swap_page(void)$/;"	f	file:
get_temp_real	kernel/math/get_put.c	/^void get_temp_real(temp_real * tmp,$/;"	f
get_termio	kernel/chr_drv/tty_ioctl.c	/^static int get_termio(struct tty_struct * tty, struct termio * termio)$/;"	f	file:
get_termios	kernel/chr_drv/tty_ioctl.c	/^static int get_termios(struct tty_struct * tty, struct termios * termios)$/;"	f	file:
get_tty	fs/select.c	/^static struct tty_struct * get_tty(struct m_inode * inode)$/;"	f	file:
getblk	fs/buffer.c	/^struct buffer_head * getblk(int dev,int block)$/;"	f
gid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	struct:task_struct
gid_t	include/sys/types.h	/^typedef unsigned short gid_t;$/;"	t
go	boot/bootsect.S	/^go:	mov	ax,cs		$/;"	l
good_digit	boot/bootsect.S	/^good_digit:$/;"	l
gotoxy	kernel/chr_drv/console.c	/^static inline void gotoxy(int currcons, int new_x,unsigned int new_y)$/;"	f	file:
groups	include/linux/sched.h	/^	int	groups[NGROUPS];$/;"	m	struct:task_struct
gs	include/linux/sched.h	/^	long	gs;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
has_stopped_jobs	kernel/exit.c	/^static int has_stopped_jobs(int pgrp)$/;"	f	file:
hash	fs/buffer.c	/^#define hash(/;"	d	file:
hash_table	fs/buffer.c	/^struct buffer_head * hash_table[NR_HASH];$/;"	v	typeref:struct:buffer_head
hd	kernel/blk_drv/hd.c	/^} hd[5*MAX_HD]={{0,0},};$/;"	v	typeref:struct:hd_struct	file:
hd_i_struct	kernel/blk_drv/hd.c	/^struct hd_i_struct {$/;"	s	file:
hd_info	kernel/blk_drv/hd.c	/^struct hd_i_struct hd_info[] = { HD_TYPE };$/;"	v	typeref:struct:hd_i_struct
hd_info	kernel/blk_drv/hd.c	/^struct hd_i_struct hd_info[] = { {0,0,0,0,0,0},{0,0,0,0,0,0} };$/;"	v	typeref:struct:hd_i_struct
hd_init	kernel/blk_drv/hd.c	/^void hd_init(void)$/;"	f
hd_out	kernel/blk_drv/hd.c	/^static void hd_out(unsigned int drive,unsigned int nsect,unsigned int sect,$/;"	f	file:
hd_sizes	kernel/blk_drv/hd.c	/^static int hd_sizes[5*MAX_HD] = {0, };$/;"	v	file:
hd_struct	kernel/blk_drv/hd.c	/^static struct hd_struct {$/;"	s	file:
hd_times_out	kernel/blk_drv/hd.c	/^void hd_times_out(void)$/;"	f
head	boot/bootsect.S	/^head:	.word 0			! current head$/;"	l
head	include/linux/hdreg.h	/^	unsigned char head;		\/* ? *\/$/;"	m	struct:partition
head	include/linux/tty.h	/^	unsigned long head;$/;"	m	struct:tty_queue
head	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	struct:floppy_struct	file:
head	kernel/blk_drv/floppy.c	/^static unsigned char head = 0;$/;"	v	file:
head	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	struct:hd_i_struct	file:
head	kernel/chr_drv/keyboard.S	/^head = 4$/;"	d
head	kernel/chr_drv/rs_io.s	/^head = 4$/;"	d
hide_cursor	kernel/chr_drv/console.c	/^static inline void hide_cursor(int currcons)$/;"	f	file:
i387	include/linux/sched.h	/^	struct i387_struct i387;$/;"	m	struct:tss_struct	typeref:struct:tss_struct::i387_struct
i387_struct	include/linux/sched.h	/^struct i387_struct {$/;"	s
i_atime	include/linux/fs.h	/^	unsigned long i_atime;$/;"	m	struct:m_inode
i_count	include/linux/fs.h	/^	unsigned short i_count;$/;"	m	struct:m_inode
i_ctime	include/linux/fs.h	/^	unsigned long i_ctime;$/;"	m	struct:m_inode
i_dev	include/linux/fs.h	/^	unsigned short i_dev;$/;"	m	struct:m_inode
i_dirt	include/linux/fs.h	/^	unsigned char i_dirt;$/;"	m	struct:m_inode
i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	struct:d_inode
i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	struct:m_inode
i_lock	include/linux/fs.h	/^	unsigned char i_lock;$/;"	m	struct:m_inode
i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	struct:d_inode
i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	struct:m_inode
i_mount	include/linux/fs.h	/^	unsigned char i_mount;$/;"	m	struct:m_inode
i_mtime	include/linux/fs.h	/^	unsigned long i_mtime;$/;"	m	struct:m_inode
i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	struct:d_inode
i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	struct:m_inode
i_num	include/linux/fs.h	/^	unsigned short i_num;\/\/inode序号，用来和inode_map做映射,值从1开始，到8*8192结束$/;"	m	struct:m_inode
i_pipe	include/linux/fs.h	/^	unsigned char i_pipe;$/;"	m	struct:m_inode
i_seek	include/linux/fs.h	/^	unsigned char i_seek;$/;"	m	struct:m_inode
i_size	include/linux/fs.h	/^	unsigned long i_size;  \/\/记录该节点包含的儿子节点个数（该节点是一个dir节点)$/;"	m	struct:m_inode
i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	struct:d_inode
i_time	include/linux/fs.h	/^	unsigned long i_time;$/;"	m	struct:d_inode
i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	struct:d_inode
i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	struct:m_inode
i_update	include/linux/fs.h	/^	unsigned char i_update;$/;"	m	struct:m_inode
i_wait	include/linux/fs.h	/^	struct task_struct * i_wait;$/;"	m	struct:m_inode	typeref:struct:m_inode::task_struct
i_wait2	include/linux/fs.h	/^	struct task_struct * i_wait2;	\/* for pipes *\/$/;"	m	struct:m_inode	typeref:struct:m_inode::task_struct
i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];  \/\/实际数据所在的block逻辑号。如果是<7则用直接块号，否则使用间接，二次间接块号$/;"	m	struct:m_inode
i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	struct:d_inode
idati	boot/setup.S	/^idati:		.ascii	"761295520"$/;"	l
idcandt	boot/setup.S	/^idcandt:	.byte	0xa5$/;"	l
idgenoa	boot/setup.S	/^idgenoa:	.byte	0x77, 0x00, 0x66, 0x99$/;"	l
idparadise	boot/setup.S	/^idparadise:	.ascii	"VGA="$/;"	l
idt_48	boot/setup.S	/^idt_48:$/;"	l
idt_descr	boot/head.s	/^idt_descr:$/;"	l
ie	include/linux/math_emu.h	/^	int ie:1;$/;"	m	struct:swd
iget	fs/inode.c	/^struct m_inode * iget(int dev,int nr)$/;"	f
ignore_int	boot/head.s	/^ignore_int:$/;"	l
immoutb_p	kernel/blk_drv/floppy.c	/^#define immoutb_p(/;"	d	file:
in_group_p	kernel/sys.c	/^int in_group_p(gid_t grp)$/;"	f
inb	include/asm/io.h	/^#define inb(/;"	d
inb_p	include/asm/io.h	/^#define inb_p(/;"	d
inc	boot/setup.S	/^	inc	di$/;"	d
inc	boot/setup.S	/^	inc	dx$/;"	d
info	include/linux/math_emu.h	/^struct info {$/;"	s
init	init/main.c	/^void init(void)$/;"	f
init	kernel/chr_drv/serial.c	/^static void init(int port)$/;"	f	file:
init_bucket_desc	lib/malloc.c	/^static inline void init_bucket_desc()$/;"	f	file:
init_swapping	mm/swap.c	/^void init_swapping(void)$/;"	f
init_task	kernel/sched.c	/^static union task_union init_task = {INIT_TASK,};$/;"	v	typeref:union:task_union	file:
inline	lib/string.c	/^#define inline$/;"	d	file:
ino_t	include/sys/types.h	/^typedef unsigned short ino_t;$/;"	t
inode	include/linux/fs.h	/^	unsigned short inode;$/;"	m	struct:dir_entry
inode_table	fs/inode.c	/^struct m_inode inode_table[NR_INODE]={{0,},};$/;"	v	typeref:struct:m_inode
insert_char	kernel/chr_drv/console.c	/^static void insert_char(int currcons)$/;"	f	file:
insert_into_queues	fs/buffer.c	/^static inline void insert_into_queues(struct buffer_head * bh)$/;"	f	file:
insert_line	kernel/chr_drv/console.c	/^static void insert_line(int currcons)$/;"	f	file:
int_msg	boot/head.s	/^int_msg:$/;"	l
int_to_real	kernel/math/convert.c	/^void int_to_real(const temp_int * a, temp_real * b)$/;"	f
interruptible_sleep_on	kernel/sched.c	/^void interruptible_sleep_on(struct task_struct **p)$/;"	f
invalidate	include/linux/mm.h	/^#define invalidate(/;"	d
invalidate_buffers	fs/buffer.c	/^void inline invalidate_buffers(int dev)$/;"	f
invalidate_inodes	fs/inode.c	/^void invalidate_inodes(int dev)$/;"	f
ioctl_ptr	fs/ioctl.c	/^typedef int (*ioctl_ptr)(int dev,int cmd,int arg);$/;"	t	file:
ioctl_table	fs/ioctl.c	/^static ioctl_ptr ioctl_table[]={$/;"	v	file:
iput	fs/inode.c	/^void iput(struct m_inode * inode)$/;"	f
ir	include/linux/math_emu.h	/^	int ir:1;$/;"	m	struct:swd
iret	include/asm/system.h	/^#define iret(/;"	d
is_digit	kernel/vsprintf.c	/^#define is_digit(/;"	d	file:
is_disk1	boot/setup.S	/^is_disk1:$/;"	l
is_orphaned_pgrp	kernel/exit.c	/^int is_orphaned_pgrp(int pgrp)$/;"	f
isahed	boot/setup.S	/^isahed:	lea	si,dscahead$/;"	l
isalnum	include/ctype.h	/^#define isalnum(/;"	d
isalpha	include/ctype.h	/^#define isalpha(/;"	d
isascii	include/ctype.h	/^#define isascii(/;"	d
iscntrl	include/ctype.h	/^#define iscntrl(/;"	d
iscolor	kernel/chr_drv/console.c	/^#define iscolor	/;"	d	file:
isdigit	include/ctype.h	/^#define isdigit(/;"	d
isgraph	include/ctype.h	/^#define isgraph(/;"	d
islower	include/ctype.h	/^#define islower(/;"	d
isprint	include/ctype.h	/^#define isprint(/;"	d
ispunct	include/ctype.h	/^#define ispunct(/;"	d
isspace	include/ctype.h	/^#define isspace(/;"	d
istrid	boot/setup.S	/^istrid:	lea	cx,ev2tri$/;"	l
isupper	include/ctype.h	/^#define isupper(/;"	d
isxdigit	include/ctype.h	/^#define isxdigit(/;"	d
it_interval	include/sys/time.h	/^	struct	timeval it_interval;	\/* timer interval *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval
it_value	include/sys/time.h	/^	struct	timeval it_value;	\/* current value *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval
itimerval	include/sys/time.h	/^struct	itimerval {$/;"	s
jiffies	kernel/sched.c	/^	long jiffies;$/;"	m	struct:timer_list	file:
jiffies	kernel/sched.c	/^unsigned long volatile jiffies=0;$/;"	v
jiffies_offset	kernel/sched.c	/^int jiffies_offset = 0;		\/* # clock ticks to add to get "true$/;"	v
jmp_table	kernel/chr_drv/rs_io.s	/^jmp_table:$/;"	l
kb_wait	kernel/chr_drv/keyboard.S	/^kb_wait:$/;"	l
kernel_mktime	kernel/mktime.c	/^long kernel_mktime(struct tm * tm)$/;"	f
key_map	kernel/chr_drv/keyboard.S	/^key_map:$/;"	l
key_table	kernel/chr_drv/keyboard.S	/^key_table:$/;"	l
kill_motor	boot/bootsect.S	/^kill_motor:$/;"	l
kill_pg	kernel/exit.c	/^int kill_pg(int pgrp, int sig, int priv)$/;"	f
kill_proc	kernel/exit.c	/^int kill_proc(int pid, int sig, int priv)$/;"	f
l1	boot/setup.S	/^l1:	inc	si$/;"	l
l_len	include/fcntl.h	/^	off_t l_len;$/;"	m	struct:flock
l_pid	include/fcntl.h	/^	pid_t l_pid;$/;"	m	struct:flock
l_start	include/fcntl.h	/^	off_t l_start;$/;"	m	struct:flock
l_type	include/fcntl.h	/^	short l_type;$/;"	m	struct:flock
l_whence	include/fcntl.h	/^	short l_whence;$/;"	m	struct:flock
last_pid	kernel/fork.c	/^long last_pid=0;$/;"	v
last_task_used_math	kernel/sched.c	/^struct task_struct *last_task_used_math = NULL;$/;"	v	typeref:struct:task_struct
ldiv_t	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	t	typeref:struct:__anon9
ldt	include/linux/sched.h	/^	long	ldt;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ldt	include/linux/sched.h	/^	struct desc_struct ldt[3];$/;"	m	struct:task_struct	typeref:struct:task_struct::desc_struct
leader	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	struct:task_struct
leds	kernel/chr_drv/keyboard.S	/^leds:	.byte 2		\/* num-lock, caps, scroll-lock mode (nom-lock on) *\/$/;"	l
lf	kernel/chr_drv/console.c	/^static void lf(int currcons)$/;"	f	file:
library	include/linux/sched.h	/^	struct m_inode * library;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
line_status	kernel/chr_drv/rs_io.s	/^line_status:$/;"	l
ll_rw_block	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_block(int rw, struct buffer_head * bh)$/;"	f
ll_rw_page	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_page(int rw, int dev, int page, char * buffer)$/;"	f
lldt	include/linux/sched.h	/^#define lldt(/;"	d
lnamei	fs/namei.c	/^struct m_inode * lnamei(const char * pathname)$/;"	f
load_setup	boot/bootsect.S	/^load_setup:$/;"	l
lock_buffer	kernel/blk_drv/ll_rw_blk.c	/^static inline void lock_buffer(struct buffer_head * bh)$/;"	f	file:
lock_inode	fs/inode.c	/^static inline void lock_inode(struct m_inode * inode)$/;"	f	file:
lock_super	fs/super.c	/^static void lock_super(struct super_block * sb)$/;"	f	file:
long_real	include/linux/math_emu.h	/^} long_real;$/;"	t	typeref:struct:__anon6
long_to_temp	kernel/math/convert.c	/^void long_to_temp(const long_real * a, temp_real * b)$/;"	f
lshift	kernel/chr_drv/keyboard.S	/^lshift:$/;"	l
lt100	boot/setup.S	/^lt100:	add	al,#0x30$/;"	l
ltr	include/linux/sched.h	/^#define ltr(/;"	d
lzone	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	struct:hd_i_struct	file:
m0	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	struct:__anon5
m1	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	struct:__anon5
m2	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	struct:__anon5
m3	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	struct:__anon5
m_inode	include/linux/fs.h	/^struct m_inode {$/;"	s
machine	include/sys/utsname.h	/^	char machine[9];$/;"	m	struct:utsname
main	init/main.c	/^void main(void)		\/* This really IS void, no error here. *\/$/;"	f
main	tools/build.c	/^int main(int argc, char ** argv)$/;"	f
main_memory_start	init/main.c	/^static long main_memory_start = 0;$/;"	v	file:
make_request	kernel/blk_drv/ll_rw_blk.c	/^static void make_request(int major,int rw, struct buffer_head * bh)$/;"	f	file:
malloc	lib/malloc.c	/^void *malloc(unsigned int len)$/;"	f
match	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	f	file:
math_abort	include/linux/math_emu.h	/^#define math_abort(/;"	d
math_emulate	kernel/math/math_emulate.c	/^void math_emulate(long ___false)$/;"	f
math_error	kernel/math/error.c	/^void math_error(void)$/;"	f
math_state_restore	kernel/sched.c	/^void math_state_restore()$/;"	f
mem_init	mm/memory.c	/^void mem_init(long start_mem, long end_mem)$/;"	f
mem_map	mm/memory.c	/^unsigned char mem_map [ PAGING_PAGES ] = {0,};$/;"	v
memchr	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	f
memcmp	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	f
memcpy	include/asm/memory.h	/^#define memcpy(/;"	d
memcpy	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	f
memmove	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	f
memory_end	init/main.c	/^static long memory_end = 0;$/;"	v	file:
memset	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	f
minus	kernel/chr_drv/keyboard.S	/^minus:	cmpb $1,e0$/;"	l
moahead	boot/setup.S	/^moahead:	.byte	0x05,	0x22, 0x23, 0x24, 0x2f, 0x34$/;"	l
moati	boot/setup.S	/^moati:		.byte	0x02,	0x23, 0x33 $/;"	l
mocandt	boot/setup.S	/^mocandt:	.byte	0x02,	0x60, 0x61$/;"	l
mocirrus	boot/setup.S	/^mocirrus:	.byte	0x04,	0x1f, 0x20, 0x22, 0x31$/;"	l
mode	kernel/chr_drv/keyboard.S	/^mode:	.byte 0		\/* caps, alt, ctrl and shift mode *\/$/;"	l
mode_t	include/sys/types.h	/^typedef unsigned short mode_t;$/;"	t
modem_status	kernel/chr_drv/rs_io.s	/^modem_status:$/;"	l
modtime	include/utime.h	/^	time_t modtime;$/;"	m	struct:utimbuf
moeverex	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	l
moff_timer	kernel/sched.c	/^static int moff_timer[4]={0,0,0,0};$/;"	v	file:
mogenoa	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	l
mon_timer	kernel/sched.c	/^static int  mon_timer[4]={0,0,0,0};$/;"	v	file:
month	kernel/mktime.c	/^static int month[12] = {$/;"	v	file:
moparadise	boot/setup.S	/^moparadise:	.byte	0x02,	0x55, 0x54$/;"	l
motrident	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	l
motseng	boot/setup.S	/^motseng:	.byte	0x05,	0x26, 0x2a, 0x23, 0x24, 0x22$/;"	l
mount_root	fs/super.c	/^void mount_root(void)$/;"	f
move_to_user_mode	include/asm/system.h	/^#define move_to_user_mode(/;"	d
movideo7	boot/setup.S	/^movideo7:	.byte	0x06,	0x40, 0x43, 0x44, 0x41, 0x42, 0x45$/;"	l
mpty_queues	kernel/chr_drv/tty_io.c	/^#define mpty_queues /;"	d	file:
mpty_table	kernel/chr_drv/tty_io.c	/^#define mpty_table /;"	d	file:
mpty_write	kernel/chr_drv/pty.c	/^void mpty_write(struct tty_struct * tty)$/;"	f
msg1	boot/bootsect.S	/^msg1:$/;"	l
msg1	boot/setup.S	/^msg1:		.ascii	"Press <RETURN> to see SVGA-modes available or any other key to continue."$/;"	l
msg2	boot/setup.S	/^msg2:		.ascii	"Mode:  COLSxROWS:"$/;"	l
msg3	boot/setup.S	/^msg3:		.ascii	"Choose mode by pressing the corresponding number."$/;"	l
mul64	kernel/math/mul.c	/^static void mul64(const temp_real * a, const temp_real * b, int * c)$/;"	f	file:
n	include/asm/system.h	/^	 "m" (*(n+5)), "m" (*(n+6)), "m" (*(n+7)) \\$/;"	v
n	include/asm/system.h	/^	::"a" (addr), "m" (*(n)), "m" (*(n+2)), "m" (*(n+4)), \\$/;"	v
n_desc	include/a.out.h	/^  short n_desc;$/;"	m	struct:nlist
n_name	include/a.out.h	/^    char *n_name;$/;"	m	union:nlist::__anon3
n_next	include/a.out.h	/^    struct nlist *n_next;$/;"	m	union:nlist::__anon3	typeref:struct:nlist::__anon3::nlist
n_other	include/a.out.h	/^  char n_other;$/;"	m	struct:nlist
n_strx	include/a.out.h	/^    long n_strx;$/;"	m	union:nlist::__anon3
n_type	include/a.out.h	/^  unsigned char n_type;$/;"	m	struct:nlist
n_un	include/a.out.h	/^  } n_un;$/;"	m	struct:nlist	typeref:union:nlist::__anon3
n_value	include/a.out.h	/^  unsigned long n_value;$/;"	m	struct:nlist
name	include/linux/fs.h	/^	char name[NAME_LEN];$/;"	m	struct:dir_entry
namei	fs/namei.c	/^struct m_inode * namei(const char * pathname)$/;"	f
next	kernel/blk_drv/blk.h	/^	struct request * next;$/;"	m	struct:request	typeref:struct:request::request
next	kernel/sched.c	/^	struct timer_list * next;$/;"	m	struct:timer_list	typeref:struct:timer_list::timer_list	file:
next	lib/malloc.c	/^	struct bucket_desc	*next;    \/\/用来将一页数据链接起来$/;"	m	struct:bucket_desc	typeref:struct:bucket_desc::bucket_desc	file:
next_timer	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	typeref:struct:timer_list	file:
nlink_t	include/sys/types.h	/^typedef unsigned char nlink_t;$/;"	t
nlist	include/a.out.h	/^struct nlist {$/;"	s
no_disk1	boot/setup.S	/^no_disk1:$/;"	l
no_error_code	kernel/asm.s	/^no_error_code:$/;"	l
no_reg	boot/bootsect.S	/^no_reg:$/;"	l
noahed	boot/setup.S	/^noahed:	mov	dx,#0x3c3		! Check Chips & Tech. 'clues'$/;"	l
noati	boot/setup.S	/^noati:	mov	ax,#0x200f		! Check Ahead 'clues'$/;"	l
nocant	boot/setup.S	/^nocant:	mov	dx,#0x3d4		! Check Cirrus 'clues'$/;"	l
nocirr	boot/setup.S	/^nocirr:	call	rst3d4			! Check Everex 'clues'$/;"	l
nodename	include/sys/utsname.h	/^	char nodename[MAXHOSTNAMELEN+1];$/;"	m	struct:utsname
noevrx	boot/setup.S	/^noevrx:	lea	si,idgenoa		! Check Genoa 'clues'$/;"	l
nogen	boot/setup.S	/^nogen:	lea	si,idparadise		! Check Paradise 'clues'$/;"	l
nokey	boot/setup.S	/^nokey:	in	al,#0x60$/;"	l
none	kernel/chr_drv/keyboard.S	/^none:	ret$/;"	l
nonum	boot/setup.S	/^nonum:	in	al,#0x60	! Quick and dirty...$/;"	l
nop	include/asm/system.h	/^#define nop(/;"	d
nopara	boot/setup.S	/^nopara:	mov	dx,#0x3c4		! Check Trident 'clues'$/;"	l
normalize	kernel/math/compare.c	/^static void normalize(temp_real * a)$/;"	f	file:
notrid	boot/setup.S	/^notrid:	mov	dx,#0x3cd		! Check Tseng 'clues'$/;"	l
notsen	boot/setup.S	/^notsen:	mov	dx,#0x3cc		! Check Video7 'clues'$/;"	l
novga	boot/setup.S	/^novga:	mov	[14],ax$/;"	l
novid7	boot/setup.S	/^novid7:	pop	ds	! Here could be code to support standard 80x50,80x30$/;"	l
nozero	boot/setup.S	/^nozero:	sub	al,#0x80$/;"	l
npar	kernel/chr_drv/console.c	/^#define npar	/;"	d	file:
nr	fs/select.c	/^	int nr;$/;"	m	struct:__anon2	file:
nr_sectors	kernel/blk_drv/blk.h	/^	unsigned long nr_sectors;$/;"	m	struct:request
nr_sects	include/linux/hdreg.h	/^	unsigned int nr_sects;		\/* nr of sectors in partition *\/$/;"	m	struct:partition
nr_sects	kernel/blk_drv/hd.c	/^	long nr_sects;$/;"	m	struct:hd_struct	file:
nr_system_calls	kernel/sys_call.s	/^nr_system_calls = 82$/;"	d
num	kernel/chr_drv/keyboard.S	/^num:	xorb $2,leds$/;"	l
num_table	kernel/chr_drv/keyboard.S	/^num_table:$/;"	l
number	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	f	file:
oe	include/linux/math_emu.h	/^	int oe:1;$/;"	m	struct:swd
off_t	include/sys/types.h	/^typedef long off_t;$/;"	t
offsetof	include/stddef.h	/^#define offsetof(/;"	d
ok1_read	boot/bootsect.S	/^ok1_read:$/;"	l
ok2_read	boot/bootsect.S	/^ok2_read:$/;"	l
ok3_read	boot/bootsect.S	/^ok3_read:$/;"	l
ok4_read	boot/bootsect.S	/^ok4_read:$/;"	l
ok_cur	kernel/chr_drv/keyboard.S	/^ok_cur:	shll $16,%eax$/;"	l
ok_func	kernel/chr_drv/keyboard.S	/^ok_func:$/;"	l
ok_load_setup	boot/bootsect.S	/^ok_load_setup:$/;"	l
old_task	fs/select.c	/^	struct task_struct * old_task;$/;"	m	struct:__anon1	typeref:struct:__anon1::task_struct	file:
oom	include/linux/mm.h	/^extern inline volatile void oom(void)$/;"	f
open	lib/open.c	/^int open(const char * filename, int flag, ...)$/;"	f
open_namei	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	f
origin	kernel/chr_drv/console.c	/^#define origin	/;"	d	file:
outb	include/asm/io.h	/^#define outb(/;"	d
outb_p	include/asm/io.h	/^#define outb_p(/;"	d
output_byte	kernel/blk_drv/floppy.c	/^static void output_byte(char byte)$/;"	f	file:
p_cptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	struct:task_struct	typeref:struct:task_struct::
p_osptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	struct:task_struct	typeref:struct:task_struct::
p_pptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	struct:task_struct	typeref:struct:task_struct::task_struct
p_ysptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	struct:task_struct	typeref:struct:task_struct::
page	lib/malloc.c	/^	void			*page;        \/\/页基线性地址$/;"	m	struct:bucket_desc	file:
panic	kernel/panic.c	/^volatile void panic(const char * s)$/;"	f
par	kernel/chr_drv/console.c	/^#define par	/;"	d	file:
partition	include/linux/hdreg.h	/^struct partition {$/;"	s
pe	include/linux/math_emu.h	/^	int pe:1;$/;"	m	struct:swd
permission	fs/namei.c	/^static int permission(struct m_inode * inode,int mask)$/;"	f	file:
pg0	boot/head.s	/^pg0:$/;"	l
pg1	boot/head.s	/^pg1:$/;"	l
pg2	boot/head.s	/^pg2:$/;"	l
pg3	boot/head.s	/^pg3:$/;"	l
pgrp	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	struct:task_struct
pgrp	include/linux/tty.h	/^	int pgrp;$/;"	m	struct:tty_struct
pid	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	struct:task_struct
pid_t	include/sys/types.h	/^typedef int pid_t;$/;"	t
pipe_ioctl	fs/pipe.c	/^int pipe_ioctl(struct m_inode *pino, int cmd, int arg)$/;"	f
pop	boot/bootsect.S	/^	pop dx$/;"	d
pop	boot/setup.S	/^	pop	ds$/;"	d
port_read	kernel/blk_drv/hd.c	/^#define port_read(/;"	d	file:
port_write	kernel/blk_drv/hd.c	/^#define port_write(/;"	d	file:
pos	kernel/chr_drv/console.c	/^#define pos	/;"	d	file:
print_all	boot/bootsect.S	/^print_all:$/;"	l
print_digit	boot/bootsect.S	/^print_digit:$/;"	l
print_hex	boot/bootsect.S	/^print_hex:$/;"	l
print_loop	boot/bootsect.S	/^print_loop:$/;"	l
print_nl	boot/bootsect.S	/^print_nl:$/;"	l
printbuf	init/main.c	/^static char printbuf[1024];$/;"	v	file:
printf	init/main.c	/^static int printf(const char *fmt, ...)$/;"	f	file:
printk	kernel/printk.c	/^int printk(const char *fmt, ...)$/;"	f
priority	include/linux/sched.h	/^	long priority;$/;"	m	struct:task_struct
priority	kernel/sys_call.s	/^priority = 8$/;"	d
prnt1	boot/setup.S	/^prnt1:	push	ax$/;"	l
proc_list	include/linux/tty.h	/^	struct task_struct * proc_list;$/;"	m	struct:tty_queue	typeref:struct:tty_queue::task_struct
proc_list	kernel/chr_drv/keyboard.S	/^proc_list = 12$/;"	d
proc_list	kernel/chr_drv/rs_io.s	/^proc_list = 12$/;"	d
prtstr	boot/setup.S	/^prtstr:	lodsb$/;"	l
ptrdiff_t	include/stddef.h	/^typedef long ptrdiff_t;$/;"	t
ptrdiff_t	include/sys/types.h	/^typedef long ptrdiff_t;$/;"	t
pty_copy	kernel/chr_drv/pty.c	/^static inline void pty_copy(struct tty_struct * from, struct tty_struct * to)$/;"	f	file:
push	boot/bootsect.S	/^	push	dx				! save for error dump$/;"	d
push	boot/bootsect.S	/^	push dx$/;"	d
push	boot/setup.S	/^	push	ds$/;"	d
put_BCD	kernel/math/get_put.c	/^void put_BCD(const temp_real * tmp,struct info * info, unsigned short code)$/;"	f
put_dirty_page	mm/memory.c	/^unsigned long put_dirty_page(unsigned long page, unsigned long address)$/;"	f
put_fs_byte	include/asm/segment.h	/^extern inline void put_fs_byte(char val,char *addr)$/;"	f
put_fs_long	include/asm/segment.h	/^extern inline void put_fs_long(unsigned long val,unsigned long * addr)$/;"	f
put_fs_word	include/asm/segment.h	/^extern inline void put_fs_word(short val,short * addr)$/;"	f
put_long_int	kernel/math/get_put.c	/^void put_long_int(const temp_real * tmp,$/;"	f
put_long_real	kernel/math/get_put.c	/^void put_long_real(const temp_real * tmp,$/;"	f
put_longlong_int	kernel/math/get_put.c	/^void put_longlong_int(const temp_real * tmp,$/;"	f
put_page	mm/memory.c	/^static unsigned long put_page(unsigned long page,unsigned long address)$/;"	f	file:
put_queue	kernel/chr_drv/keyboard.S	/^put_queue:$/;"	l
put_short_int	kernel/math/get_put.c	/^void put_short_int(const temp_real * tmp,$/;"	f
put_short_real	kernel/math/get_put.c	/^void put_short_real(const temp_real * tmp,$/;"	f
put_super	fs/super.c	/^void put_super(int dev)$/;"	f
put_temp_real	kernel/math/get_put.c	/^void put_temp_real(const temp_real * tmp,$/;"	f
pwd	include/linux/sched.h	/^	struct m_inode * pwd;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
ques	kernel/chr_drv/console.c	/^#define ques	/;"	d	file:
quot	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	struct:__anon8
quot	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	struct:__anon9
quotient	kernel/chr_drv/tty_ioctl.c	/^static unsigned short quotient[] = {$/;"	v	file:
r_address	include/a.out.h	/^  int r_address;$/;"	m	struct:relocation_info
r_extern	include/a.out.h	/^  unsigned int r_extern:1;$/;"	m	struct:relocation_info
r_length	include/a.out.h	/^  unsigned int r_length:2;$/;"	m	struct:relocation_info
r_pad	include/a.out.h	/^  unsigned int r_pad:4;$/;"	m	struct:relocation_info
r_pcrel	include/a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	struct:relocation_info
r_symbolnum	include/a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	struct:relocation_info
rate	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	struct:floppy_struct	file:
rd_init	kernel/blk_drv/ramdisk.c	/^long rd_init(long mem_start, int length)$/;"	f
rd_length	kernel/blk_drv/ramdisk.c	/^int	rd_length = 0;$/;"	v
rd_load	kernel/blk_drv/ramdisk.c	/^void rd_load(void)$/;"	f
rd_start	kernel/blk_drv/ramdisk.c	/^char	*rd_start;$/;"	v
read_char	kernel/chr_drv/rs_io.s	/^read_char:$/;"	l
read_inode	fs/inode.c	/^static void read_inode(struct m_inode * inode)$/;"	f	file:
read_intr	kernel/blk_drv/hd.c	/^static void read_intr(void)$/;"	f	file:
read_it	boot/bootsect.S	/^read_it:$/;"	l
read_pipe	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	f
read_q	include/linux/tty.h	/^	struct tty_queue *read_q;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::tty_queue
read_super	fs/super.c	/^static struct super_block * read_super(int dev)$/;"	f	file:
read_swap_page	include/linux/mm.h	/^#define read_swap_page(/;"	d
read_track	boot/bootsect.S	/^read_track:$/;"	l
real_to_int	kernel/math/convert.c	/^void real_to_int(const temp_real * a, temp_int * b)$/;"	f
real_to_real	include/linux/math_emu.h	/^#define real_to_real(/;"	d
reboot	kernel/chr_drv/keyboard.S	/^reboot:$/;"	l
recal_interrupt	kernel/blk_drv/floppy.c	/^static void recal_interrupt(void)$/;"	f	file:
recal_intr	kernel/blk_drv/hd.c	/^static void recal_intr(void)$/;"	f	file:
recalibrate	kernel/blk_drv/floppy.c	/^static int recalibrate = 0;$/;"	v	file:
recalibrate	kernel/blk_drv/hd.c	/^static int recalibrate = 0;$/;"	v	file:
recalibrate_floppy	kernel/blk_drv/floppy.c	/^static void recalibrate_floppy(void)$/;"	f	file:
refcnt	lib/malloc.c	/^	unsigned short		refcnt;   \/\/当前页的bucket个数$/;"	m	struct:bucket_desc	file:
release	include/sys/utsname.h	/^	char release[9];$/;"	m	struct:utsname
release	kernel/exit.c	/^void release(struct task_struct * p)$/;"	f
relocation_info	include/a.out.h	/^struct relocation_info$/;"	s
rem	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	struct:__anon8
rem	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	struct:__anon9
remove_from_queues	fs/buffer.c	/^static inline void remove_from_queues(struct buffer_head * bh)$/;"	f	file:
rep_int	kernel/chr_drv/rs_io.s	/^rep_int:$/;"	l
reply_buffer	kernel/blk_drv/floppy.c	/^static unsigned char reply_buffer[MAX_REPLIES];$/;"	v	file:
request	kernel/blk_drv/blk.h	/^struct request {$/;"	s
request	kernel/blk_drv/ll_rw_blk.c	/^struct request request[NR_REQUEST];$/;"	v	typeref:struct:request
request_fn	kernel/blk_drv/blk.h	/^	void (*request_fn)(void); \/\/I\/O请求处理函数$/;"	m	struct:blk_dev_struct
reschedule	kernel/sys_call.s	/^reschedule:$/;"	l
reset	kernel/blk_drv/floppy.c	/^static int reset = 0;$/;"	v	file:
reset	kernel/blk_drv/hd.c	/^static int reset = 0;$/;"	v	file:
reset_controller	kernel/blk_drv/hd.c	/^static void reset_controller(void)$/;"	f	file:
reset_floppy	kernel/blk_drv/floppy.c	/^static void reset_floppy(void)$/;"	f	file:
reset_hd	kernel/blk_drv/hd.c	/^static void reset_hd(void)$/;"	f	file:
reset_interrupt	kernel/blk_drv/floppy.c	/^static void reset_interrupt(void)$/;"	f	file:
respond	kernel/chr_drv/console.c	/^static void respond(int currcons, struct tty_struct * tty)$/;"	f	file:
restate	kernel/chr_drv/console.c	/^#define restate	/;"	d	file:
restore_cur	kernel/chr_drv/console.c	/^static void restore_cur(int currcons)$/;"	f	file:
result	kernel/blk_drv/floppy.c	/^static int result(void)$/;"	f	file:
ret_from_sys_call	kernel/sys_call.s	/^ret_from_sys_call:$/;"	l
ri	kernel/chr_drv/console.c	/^static void ri(int currcons)$/;"	f	file:
rlim	include/linux/sched.h	/^	struct rlimit rlim[RLIM_NLIMITS]; $/;"	m	struct:task_struct	typeref:struct:task_struct::rlimit
rlim_cur	include/sys/resource.h	/^	int	rlim_cur;$/;"	m	struct:rlimit
rlim_max	include/sys/resource.h	/^	int	rlim_max;$/;"	m	struct:rlimit
rlimit	include/sys/resource.h	/^struct rlimit {$/;"	s
root	include/linux/sched.h	/^	struct m_inode * root;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
root_defined	boot/bootsect.S	/^root_defined:$/;"	l
root_dev	boot/bootsect.S	/^root_dev:$/;"	l
rp_read	boot/bootsect.S	/^rp_read:$/;"	l
rp_sidt	boot/head.s	/^rp_sidt:$/;"	l
rs_addr	kernel/chr_drv/rs_io.s	/^rs_addr = 0$/;"	d
rs_init	kernel/chr_drv/serial.c	/^void rs_init(void)$/;"	f
rs_int	kernel/chr_drv/rs_io.s	/^rs_int:$/;"	l
rs_queues	kernel/chr_drv/tty_io.c	/^#define rs_queues /;"	d	file:
rs_table	kernel/chr_drv/tty_io.c	/^#define rs_table /;"	d	file:
rs_write	kernel/chr_drv/serial.c	/^void rs_write(struct tty_struct * tty)$/;"	f
rshift	kernel/chr_drv/keyboard.S	/^rshift:$/;"	l
rst3d4	boot/setup.S	/^rst3d4:	mov	dx,#0x3d4$/;"	l
ru_idrss	include/sys/resource.h	/^	long	ru_idrss;		\/* integral unshared data size *\/$/;"	m	struct:rusage
ru_inblock	include/sys/resource.h	/^	long	ru_inblock;		\/* block input operations *\/$/;"	m	struct:rusage
ru_isrss	include/sys/resource.h	/^	long	ru_isrss;		\/* integral unshared stack size *\/$/;"	m	struct:rusage
ru_ixrss	include/sys/resource.h	/^	long	ru_ixrss;		\/* integral shared memory size *\/$/;"	m	struct:rusage
ru_majflt	include/sys/resource.h	/^	long	ru_majflt;		\/* page faults *\/$/;"	m	struct:rusage
ru_maxrss	include/sys/resource.h	/^	long	ru_maxrss;		\/* maximum resident set size *\/$/;"	m	struct:rusage
ru_minflt	include/sys/resource.h	/^	long	ru_minflt;		\/* page reclaims *\/$/;"	m	struct:rusage
ru_msgrcv	include/sys/resource.h	/^	long	ru_msgrcv;		\/* messages received *\/$/;"	m	struct:rusage
ru_msgsnd	include/sys/resource.h	/^	long	ru_msgsnd;		\/* messages sent *\/$/;"	m	struct:rusage
ru_nivcsw	include/sys/resource.h	/^	long	ru_nivcsw;		\/* involuntary " *\/$/;"	m	struct:rusage
ru_nsignals	include/sys/resource.h	/^	long	ru_nsignals;		\/* signals received *\/$/;"	m	struct:rusage
ru_nswap	include/sys/resource.h	/^	long	ru_nswap;		\/* swaps *\/$/;"	m	struct:rusage
ru_nvcsw	include/sys/resource.h	/^	long	ru_nvcsw;		\/* voluntary context switches *\/$/;"	m	struct:rusage
ru_oublock	include/sys/resource.h	/^	long	ru_oublock;		\/* block output operations *\/$/;"	m	struct:rusage
ru_stime	include/sys/resource.h	/^	struct timeval ru_stime;	\/* system time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval
ru_utime	include/sys/resource.h	/^	struct timeval ru_utime;	\/* user time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval
rusage	include/sys/resource.h	/^struct	rusage {$/;"	s
rw_char	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	f
rw_interrupt	kernel/blk_drv/floppy.c	/^static void rw_interrupt(void)$/;"	f	file:
rw_kmem	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	f	file:
rw_mem	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	f	file:
rw_memory	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	f	file:
rw_port	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	f	file:
rw_ram	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	f	file:
rw_tty	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	f	file:
rw_ttyx	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	f	file:
s	Makefile	/^	dd bs=8192 if=Image of=\/dev\/PS0$/;"	m
s_dev	include/linux/fs.h	/^	unsigned short s_dev;$/;"	m	struct:super_block
s_dirt	include/linux/fs.h	/^	unsigned char s_dirt;$/;"	m	struct:super_block
s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone; \/\/数据块1的起始编号$/;"	m	struct:super_block
s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	struct:d_super_block
s_imap	include/linux/fs.h	/^	struct buffer_head * s_imap[8];$/;"	m	struct:super_block	typeref:struct:super_block::buffer_head
s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks; \/\/imap数据块个数$/;"	m	struct:super_block
s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	struct:d_super_block
s_imount	include/linux/fs.h	/^	struct m_inode * s_imount;$/;"	m	struct:super_block	typeref:struct:super_block::m_inode
s_isup	include/linux/fs.h	/^	struct m_inode * s_isup;$/;"	m	struct:super_block	typeref:struct:super_block::m_inode
s_lock	include/linux/fs.h	/^	unsigned char s_lock;$/;"	m	struct:super_block
s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;  \/\/逻辑块和物理块的比率$/;"	m	struct:super_block
s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	struct:d_super_block
s_magic	include/linux/fs.h	/^	unsigned short s_magic;  \/\/魔术数$/;"	m	struct:super_block
s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	struct:d_super_block
s_max_size	include/linux/fs.h	/^	unsigned long s_max_size; \/\/文件最大大小$/;"	m	struct:super_block
s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	struct:d_super_block
s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes; \/\/inode总数$/;"	m	struct:super_block
s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	struct:d_super_block
s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;  \/\/zone总数$/;"	m	struct:super_block
s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	struct:d_super_block
s_rd_only	include/linux/fs.h	/^	unsigned char s_rd_only;$/;"	m	struct:super_block
s_time	include/linux/fs.h	/^	unsigned long s_time;$/;"	m	struct:super_block
s_wait	include/linux/fs.h	/^	struct task_struct * s_wait;$/;"	m	struct:super_block	typeref:struct:super_block::task_struct
s_zmap	include/linux/fs.h	/^	struct buffer_head * s_zmap[8];$/;"	m	struct:super_block	typeref:struct:super_block::buffer_head
s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;  \/\/zmap数据块个数$/;"	m	struct:super_block
s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	struct:d_super_block
sa_flags	include/signal.h	/^	int sa_flags;\/\/16 bits?$/;"	m	struct:sigaction
sa_flags	kernel/sys_call.s	/^sa_flags = 8$/;"	d
sa_handler	include/signal.h	/^	void (*sa_handler)(int);\/\/signal handler$/;"	m	struct:sigaction
sa_handler	kernel/sys_call.s	/^sa_handler = 0$/;"	d
sa_mask	include/signal.h	/^	sigset_t sa_mask;\/\/32 bits$/;"	m	struct:sigaction
sa_mask	kernel/sys_call.s	/^sa_mask = 4$/;"	d
sa_restorer	include/signal.h	/^	void (*sa_restorer)(void);\/\/FIXME:$/;"	m	struct:sigaction
sa_restorer	kernel/sys_call.s	/^sa_restorer = 12$/;"	d
save_cur	kernel/chr_drv/console.c	/^static void save_cur(int currcons)$/;"	f	file:
save_old	kernel/signal.c	/^static inline void save_old(char * from,char * to)$/;"	f	file:
saved_x	kernel/chr_drv/console.c	/^#define saved_x	/;"	d	file:
saved_y	kernel/chr_drv/console.c	/^#define saved_y	/;"	d	file:
sched_init	kernel/sched.c	/^void sched_init(void)$/;"	f
schedule	kernel/sched.c	/^void schedule(void)$/;"	f
scr_end	kernel/chr_drv/console.c	/^#define scr_end	/;"	d	file:
scrdown	kernel/chr_drv/console.c	/^static void scrdown(int currcons)$/;"	f	file:
scroll	kernel/chr_drv/keyboard.S	/^scroll:$/;"	l
scrup	kernel/chr_drv/console.c	/^static void scrup(int currcons)$/;"	f	file:
secondary	include/linux/tty.h	/^	struct tty_queue *secondary;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::tty_queue
sect	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	struct:floppy_struct	file:
sect	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	struct:hd_i_struct	file:
sector	include/linux/hdreg.h	/^	unsigned char sector;		\/* ? *\/$/;"	m	struct:partition
sector	kernel/blk_drv/blk.h	/^	unsigned long sector;$/;"	m	struct:request
sector	kernel/blk_drv/floppy.c	/^static unsigned char sector = 0;$/;"	v	file:
sectors	boot/bootsect.S	/^sectors:$/;"	l
seek	kernel/blk_drv/floppy.c	/^static int seek = 0;$/;"	v	file:
seek_interrupt	kernel/blk_drv/floppy.c	/^static void seek_interrupt(void)$/;"	f	file:
seek_track	kernel/blk_drv/floppy.c	/^static unsigned char seek_track = 0;$/;"	v	file:
select_table	fs/select.c	/^} select_table;$/;"	t	typeref:struct:__anon2	file:
selected	kernel/blk_drv/floppy.c	/^unsigned char selected = 0;$/;"	v
selmod	boot/setup.S	/^selmod:	push	si$/;"	l
send_break	kernel/chr_drv/tty_ioctl.c	/^static void send_break(struct tty_struct * tty)$/;"	f	file:
send_sig	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	f	file:
session	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	struct:task_struct
session	include/linux/tty.h	/^	int session;$/;"	m	struct:tty_struct
session_of_pgrp	kernel/exit.c	/^int session_of_pgrp(int pgrp)$/;"	f
set_C0	include/linux/math_emu.h	/^#define set_C0(/;"	d
set_C1	include/linux/math_emu.h	/^#define set_C1(/;"	d
set_C2	include/linux/math_emu.h	/^#define set_C2(/;"	d
set_C3	include/linux/math_emu.h	/^#define set_C3(/;"	d
set_DE	include/linux/math_emu.h	/^#define set_DE(/;"	d
set_IE	include/linux/math_emu.h	/^#define set_IE(/;"	d
set_OE	include/linux/math_emu.h	/^#define set_OE(/;"	d
set_PE	include/linux/math_emu.h	/^#define set_PE(/;"	d
set_UE	include/linux/math_emu.h	/^#define set_UE(/;"	d
set_ZE	include/linux/math_emu.h	/^#define set_ZE(/;"	d
set_bit	fs/bitmap.c	/^#define set_bit(/;"	d	file:
set_bit	fs/super.c	/^#define set_bit(/;"	d	file:
set_cursor	kernel/chr_drv/console.c	/^static inline void set_cursor(int currcons)$/;"	f	file:
set_e0	kernel/chr_drv/keyboard.S	/^set_e0:	movb $1,e0$/;"	l
set_e1	kernel/chr_drv/keyboard.S	/^set_e1:	movb $2,e0$/;"	l
set_fs	include/asm/segment.h	/^extern inline void set_fs(unsigned long val)$/;"	f
set_intr_gate	include/asm/system.h	/^#define set_intr_gate(/;"	d
set_ldt_desc	include/asm/system.h	/^#define set_ldt_desc(/;"	d
set_leds	kernel/chr_drv/keyboard.S	/^set_leds:$/;"	l
set_origin	kernel/chr_drv/console.c	/^static inline void set_origin(int currcons)$/;"	f	file:
set_system_gate	include/asm/system.h	/^#define set_system_gate(/;"	d
set_termio	kernel/chr_drv/tty_ioctl.c	/^static int set_termio(struct tty_struct * tty, struct termio * termio,$/;"	f	file:
set_termios	kernel/chr_drv/tty_ioctl.c	/^static int set_termios(struct tty_struct * tty, struct termios * termios,$/;"	f	file:
set_trap_gate	include/asm/system.h	/^#define set_trap_gate(/;"	d
set_tss_desc	include/asm/system.h	/^#define set_tss_desc(/;"	d
setb2	boot/setup.S	/^setb2:	or	al,#0x02	!$/;"	l
setup_DMA	kernel/blk_drv/floppy.c	/^static void setup_DMA(void)$/;"	f	file:
setup_gdt	boot/head.s	/^setup_gdt:$/;"	l
setup_idt	boot/head.s	/^setup_idt:$/;"	l
setup_paging	boot/head.s	/^setup_paging:$/;"	l
setup_rw_floppy	kernel/blk_drv/floppy.c	/^inline void setup_rw_floppy(void)$/;"	f
sf	include/linux/math_emu.h	/^	int sf:1;$/;"	m	struct:swd
sgid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	struct:task_struct
share_page	mm/memory.c	/^static int share_page(struct m_inode * inode, unsigned long address)$/;"	f	file:
shift	kernel/math/mul.c	/^static void shift(int * c)$/;"	f	file:
shift_left	kernel/math/div.c	/^static void shift_left(int * c)$/;"	f	file:
shift_map	kernel/chr_drv/keyboard.S	/^shift_map:$/;"	l
shift_right	kernel/math/div.c	/^static void shift_right(int * c)$/;"	f	file:
short_real	include/linux/math_emu.h	/^typedef long short_real;$/;"	t
short_to_temp	kernel/math/convert.c	/^void short_to_temp(const short_real * a, temp_real * b)$/;"	f
show_mem	mm/memory.c	/^void show_mem(void)$/;"	f
show_state	kernel/sched.c	/^void show_state(void)$/;"	f
show_task	kernel/sched.c	/^void show_task(int nr,struct task_struct * p)$/;"	f
sib	kernel/math/ea.c	/^static char * sib(struct info * info, int mod)$/;"	f	file:
sig_atomic_t	include/signal.h	/^typedef int sig_atomic_t;$/;"	t
sigaction	include/linux/sched.h	/^	struct sigaction sigaction[32];$/;"	m	struct:task_struct	typeref:struct:task_struct::sigaction
sigaction	include/signal.h	/^struct sigaction {$/;"	s
sigaction	kernel/sys_call.s	/^sigaction = 16		# MUST be 16 (=len of sigaction)$/;"	d
sigemptyset	include/signal.h	/^#define sigemptyset(/;"	d
sigfillset	include/signal.h	/^#define sigfillset(/;"	d
sign	include/linux/math_emu.h	/^	short sign;$/;"	m	struct:__anon7
signal	include/linux/sched.h	/^	long signal;$/;"	m	struct:task_struct
signal	kernel/sys_call.s	/^signal	= 12$/;"	d
signify	kernel/math/add.c	/^static void signify(temp_real * a)$/;"	f	file:
sigset_t	include/signal.h	/^typedef unsigned int sigset_t;		\/* 32 bits *\/$/;"	t
size	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	struct:floppy_struct	file:
size	kernel/chr_drv/keyboard.S	/^size	= 1024		\/* must be a power of two ! And MUST be the same$/;"	d
size	kernel/chr_drv/rs_io.s	/^size	= 1024				\/* must be power of two !$/;"	d
size	lib/malloc.c	/^	int			size;   \/\/可以分配的内存大小, 16,32...4096$/;"	m	struct:_bucket_dir	file:
size_t	include/stddef.h	/^typedef unsigned long size_t;$/;"	t
size_t	include/string.h	/^typedef unsigned int size_t;$/;"	t
size_t	include/sys/types.h	/^typedef unsigned int size_t;$/;"	t
size_t	include/time.h	/^typedef unsigned int size_t;$/;"	t
skip10	boot/setup.S	/^skip10:	mov	al,ah$/;"	l
skip_atoi	kernel/vsprintf.c	/^static int skip_atoi(const char **s)$/;"	f	file:
sleep_if_empty	kernel/chr_drv/tty_io.c	/^static void sleep_if_empty(struct tty_queue * queue)$/;"	f	file:
sleep_if_full	kernel/chr_drv/tty_io.c	/^static void sleep_if_full(struct tty_queue * queue)$/;"	f	file:
sleep_on	kernel/sched.c	/^void sleep_on(struct task_struct **p)$/;"	f
spcing	boot/setup.S	/^spcing:	mov	al,#0x2e$/;"	l
spec1	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	struct:floppy_struct	file:
speed_t	include/sys/types.h	/^typedef unsigned int speed_t;$/;"	t
sprintf	init/main.c	/^static int sprintf(char * str, const char *fmt, ...)$/;"	f	file:
spty_queues	kernel/chr_drv/tty_io.c	/^#define spty_queues /;"	d	file:
spty_table	kernel/chr_drv/tty_io.c	/^#define spty_table /;"	d	file:
spty_write	kernel/chr_drv/pty.c	/^void spty_write(struct tty_struct * tty)$/;"	f
sread	boot/bootsect.S	/^sread:	.word 1+SETUPLEN	! sectors read of current track$/;"	l
ss	include/linux/sched.h	/^	long	ss;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ss0	include/linux/sched.h	/^	long	ss0;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ss1	include/linux/sched.h	/^	long	ss1;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ss2	include/linux/sched.h	/^	long	ss2;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
st_atime	include/sys/stat.h	/^	time_t	st_atime;$/;"	m	struct:stat
st_ctime	include/sys/stat.h	/^	time_t	st_ctime;$/;"	m	struct:stat
st_dev	include/sys/stat.h	/^	dev_t	st_dev;$/;"	m	struct:stat
st_gid	include/sys/stat.h	/^	gid_t	st_gid;$/;"	m	struct:stat
st_ino	include/sys/stat.h	/^	ino_t	st_ino;$/;"	m	struct:stat
st_mode	include/sys/stat.h	/^	umode_t	st_mode;$/;"	m	struct:stat
st_mtime	include/sys/stat.h	/^	time_t	st_mtime;$/;"	m	struct:stat
st_nlink	include/sys/stat.h	/^	nlink_t	st_nlink;$/;"	m	struct:stat
st_rdev	include/sys/stat.h	/^	dev_t	st_rdev;$/;"	m	struct:stat
st_size	include/sys/stat.h	/^	off_t	st_size;$/;"	m	struct:stat
st_space	include/linux/sched.h	/^	long	st_space[20];	\/* 8*10 bytes for each FP-reg = 80 bytes *\/$/;"	m	struct:i387_struct
st_uid	include/sys/stat.h	/^	uid_t	st_uid;$/;"	m	struct:stat
stack	kernel/sched.c	/^	char stack[PAGE_SIZE];$/;"	m	union:task_union	file:
stack_start	kernel/sched.c	/^	} stack_start = { & user_stack [PAGE_SIZE>>2] , 0x10 };$/;"	v	typeref:struct:__anon12
start	boot/bootsect.S	/^start:$/;"	l
start	boot/setup.S	/^start:$/;"	l
start_buffer	fs/buffer.c	/^struct buffer_head * start_buffer = (struct buffer_head *) &end;$/;"	v	typeref:struct:buffer_head
start_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
start_sect	include/linux/hdreg.h	/^	unsigned int start_sect;	\/* starting sector counting from 0 *\/$/;"	m	struct:partition
start_sect	kernel/blk_drv/hd.c	/^	long start_sect;$/;"	m	struct:hd_struct	file:
start_stack	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
start_time	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
startup	kernel/chr_drv/rs_io.s	/^startup	= 256		\/* chars left in write queue when we restart it *\/$/;"	d
startup_32	boot/head.s	/^startup_32:$/;"	l
startup_time	kernel/sched.c	/^unsigned long startup_time=0;$/;"	v
stat	include/sys/stat.h	/^struct stat {$/;"	s
state	include/linux/sched.h	/^	long state;	\/* -1 unrunnable, 0 runnable, >0 stopped *\/$/;"	m	struct:task_struct
state	kernel/chr_drv/console.c	/^#define state	/;"	d	file:
state	kernel/sys_call.s	/^state	= 0		# these are offsets into the task-struct.$/;"	d
sti	include/asm/system.h	/^#define sti(/;"	d
stime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
stopped	include/linux/tty.h	/^	int stopped;$/;"	m	struct:tty_struct
str	include/linux/sched.h	/^#define str(/;"	d
strcat	include/string.h	/^extern inline char * strcat(char * dest,const char * src)$/;"	f
strchr	include/string.h	/^extern inline char * strchr(const char * s,char c)$/;"	f
strcmp	include/string.h	/^extern inline int strcmp(const char * cs,const char * ct)$/;"	f
strcpy	include/string.h	/^extern inline char * strcpy(char * dest,const char *src)$/;"	f
strcspn	include/string.h	/^extern inline int strcspn(const char * cs, const char * ct)$/;"	f
stretch	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	struct:floppy_struct	file:
strlen	include/string.h	/^extern inline int strlen(const char * s)$/;"	f
strncat	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	f
strncmp	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	f
strncpy	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	f
strpbrk	include/string.h	/^extern inline char * strpbrk(const char * cs,const char * ct)$/;"	f
strrchr	include/string.h	/^extern inline char * strrchr(const char * s,char c)$/;"	f
strspn	include/string.h	/^extern inline int strspn(const char * cs, const char * ct)$/;"	f
strstr	include/string.h	/^extern inline char * strstr(const char * cs,const char * ct)$/;"	f
strtok	include/string.h	/^extern inline char * strtok(char * s,const char * ct)$/;"	f
suid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	struct:task_struct
super_block	fs/super.c	/^struct super_block super_block[NR_SUPER];$/;"	v	typeref:struct:super_block
super_block	include/linux/fs.h	/^struct super_block {$/;"	s
suser	include/linux/kernel.h	/^#define suser(/;"	d
svga	boot/setup.S	/^svga:	lea 	si,idati		! Check ATI 'clues'$/;"	l
swap_bitmap	mm/swap.c	/^static char * swap_bitmap = NULL;$/;"	v	file:
swap_dev	boot/bootsect.S	/^swap_dev:$/;"	l
swap_free	mm/swap.c	/^void swap_free(int swap_nr)$/;"	f
swap_in	mm/swap.c	/^void swap_in(unsigned long *table_ptr)$/;"	f
swap_out	mm/swap.c	/^int swap_out(void)$/;"	f
swd	include/linux/math_emu.h	/^struct swd {$/;"	s
swd	include/linux/sched.h	/^	long	swd;$/;"	m	struct:i387_struct
switch_to	include/linux/sched.h	/^#define switch_to(/;"	d
sync_dev	fs/buffer.c	/^int sync_dev(int dev)$/;"	f
sync_inodes	fs/inode.c	/^void sync_inodes(void)$/;"	f
sys_access	fs/open.c	/^int sys_access(const char * filename,int mode)$/;"	f
sys_acct	kernel/sys.c	/^int sys_acct()$/;"	f
sys_alarm	kernel/sched.c	/^int sys_alarm(long seconds)$/;"	f
sys_break	kernel/sys.c	/^int sys_break()$/;"	f
sys_brk	kernel/sys.c	/^int sys_brk(unsigned long end_data_seg)$/;"	f
sys_call_table	include/linux/sys.h	/^fn_ptr sys_call_table[] = { sys_setup, sys_exit, sys_fork, sys_read,$/;"	v
sys_chdir	fs/open.c	/^int sys_chdir(const char * filename)$/;"	f
sys_chmod	fs/open.c	/^int sys_chmod(const char * filename,int mode)$/;"	f
sys_chown	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	f
sys_chroot	fs/open.c	/^int sys_chroot(const char * filename)$/;"	f
sys_close	fs/open.c	/^int sys_close(unsigned int fd)$/;"	f
sys_creat	fs/open.c	/^int sys_creat(const char * pathname, int mode)$/;"	f
sys_dup	fs/fcntl.c	/^int sys_dup(unsigned int fildes)$/;"	f
sys_dup2	fs/fcntl.c	/^int sys_dup2(unsigned int oldfd, unsigned int newfd)$/;"	f
sys_exit	kernel/exit.c	/^int sys_exit(int error_code)$/;"	f
sys_fcntl	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f
sys_fstat	fs/stat.c	/^int sys_fstat(unsigned int fd, struct stat * statbuf)$/;"	f
sys_ftime	kernel/sys.c	/^int sys_ftime()$/;"	f
sys_getegid	kernel/sched.c	/^int sys_getegid(void)$/;"	f
sys_geteuid	kernel/sched.c	/^int sys_geteuid(void)$/;"	f
sys_getgid	kernel/sched.c	/^int sys_getgid(void)$/;"	f
sys_getgroups	kernel/sys.c	/^int sys_getgroups(int gidsetsize, gid_t *grouplist)$/;"	f
sys_getpgrp	kernel/sys.c	/^int sys_getpgrp(void)$/;"	f
sys_getpid	kernel/sched.c	/^int sys_getpid(void)$/;"	f
sys_getppid	kernel/sched.c	/^int sys_getppid(void)$/;"	f
sys_getrlimit	kernel/sys.c	/^int sys_getrlimit(int resource, struct rlimit *rlim)$/;"	f
sys_getrusage	kernel/sys.c	/^int sys_getrusage(int who, struct rusage *ru)$/;"	f
sys_gettimeofday	kernel/sys.c	/^int sys_gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f
sys_getuid	kernel/sched.c	/^int sys_getuid(void)$/;"	f
sys_gtty	kernel/sys.c	/^int sys_gtty()$/;"	f
sys_ind	include/linux/hdreg.h	/^	unsigned char sys_ind;		\/* ? *\/$/;"	m	struct:partition
sys_ioctl	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f
sys_kill	kernel/exit.c	/^int sys_kill(int pid,int sig)$/;"	f
sys_link	fs/namei.c	/^int sys_link(const char * oldname, const char * newname)$/;"	f
sys_lock	kernel/sys.c	/^int sys_lock()$/;"	f
sys_lseek	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	f
sys_lstat	fs/stat.c	/^int sys_lstat(char * filename, struct stat * statbuf)$/;"	f
sys_mkdir	fs/namei.c	/^int sys_mkdir(const char * pathname, int mode)$/;"	f
sys_mknod	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	f
sys_mount	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	f
sys_mpx	kernel/sys.c	/^int sys_mpx()$/;"	f
sys_nice	kernel/sched.c	/^int sys_nice(long increment)$/;"	f
sys_open	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	f
sys_pause	kernel/sched.c	/^int sys_pause(void)$/;"	f
sys_phys	kernel/sys.c	/^int sys_phys()$/;"	f
sys_pipe	fs/pipe.c	/^int sys_pipe(unsigned long * fildes)$/;"	f
sys_prof	kernel/sys.c	/^int sys_prof()$/;"	f
sys_ptrace	kernel/sys.c	/^int sys_ptrace()$/;"	f
sys_read	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	f
sys_readlink	fs/stat.c	/^int sys_readlink(const char * path, char * buf, int bufsiz)$/;"	f
sys_rename	kernel/sys.c	/^int sys_rename()$/;"	f
sys_rmdir	fs/namei.c	/^int sys_rmdir(const char * name)$/;"	f
sys_select	fs/select.c	/^int sys_select( unsigned long *buffer )$/;"	f
sys_setgid	kernel/sys.c	/^int sys_setgid(int gid)$/;"	f
sys_setgroups	kernel/sys.c	/^int sys_setgroups(int gidsetsize, gid_t *grouplist)$/;"	f
sys_sethostname	kernel/sys.c	/^int sys_sethostname(char *name, int len)$/;"	f
sys_setpgid	kernel/sys.c	/^int sys_setpgid(int pid, int pgid)$/;"	f
sys_setregid	kernel/sys.c	/^int sys_setregid(int rgid, int egid)$/;"	f
sys_setreuid	kernel/sys.c	/^int sys_setreuid(int ruid, int euid)$/;"	f
sys_setrlimit	kernel/sys.c	/^int sys_setrlimit(int resource, struct rlimit *rlim)$/;"	f
sys_setsid	kernel/sys.c	/^int sys_setsid(void)$/;"	f
sys_settimeofday	kernel/sys.c	/^int sys_settimeofday(struct timeval *tv, struct timezone *tz)$/;"	f
sys_setuid	kernel/sys.c	/^int sys_setuid(int uid)$/;"	f
sys_setup	kernel/blk_drv/hd.c	/^int sys_setup(void * BIOS)$/;"	f
sys_sgetmask	kernel/signal.c	/^int sys_sgetmask()$/;"	f
sys_sigaction	kernel/signal.c	/^int sys_sigaction(int signum, const struct sigaction * action,$/;"	f
sys_signal	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	f
sys_sigpending	kernel/signal.c	/^int sys_sigpending(sigset_t *set)$/;"	f
sys_sigsuspend	kernel/signal.c	/^int sys_sigsuspend(int restart, unsigned long old_mask, unsigned long set)$/;"	f
sys_ssetmask	kernel/signal.c	/^int sys_ssetmask(int newmask)$/;"	f
sys_stat	fs/stat.c	/^int sys_stat(char * filename, struct stat * statbuf)$/;"	f
sys_stime	kernel/sys.c	/^int sys_stime(long * tptr)$/;"	f
sys_stty	kernel/sys.c	/^int sys_stty()$/;"	f
sys_symlink	fs/namei.c	/^int sys_symlink(const char * oldname, const char * newname)$/;"	f
sys_sync	fs/buffer.c	/^int sys_sync(void)$/;"	f
sys_time	kernel/sys.c	/^int sys_time(long * tloc)$/;"	f
sys_times	kernel/sys.c	/^int sys_times(struct tms * tbuf)$/;"	f
sys_tz	kernel/sys.c	/^struct timezone sys_tz = { 0, 0};$/;"	v	typeref:struct:timezone
sys_ulimit	kernel/sys.c	/^int sys_ulimit()$/;"	f
sys_umask	kernel/sys.c	/^int sys_umask(int mask)$/;"	f
sys_umount	fs/super.c	/^int sys_umount(char * dev_name)$/;"	f
sys_uname	kernel/sys.c	/^int sys_uname(struct utsname * name)$/;"	f
sys_unlink	fs/namei.c	/^int sys_unlink(const char * name)$/;"	f
sys_uselib	fs/exec.c	/^int sys_uselib(const char * library)$/;"	f
sys_ustat	fs/open.c	/^int sys_ustat(int dev, struct ustat * ubuf)$/;"	f
sys_utime	fs/open.c	/^int sys_utime(char * filename, struct utimbuf * times)$/;"	f
sys_waitpid	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	f
sys_write	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	f
sysbeep	kernel/chr_drv/console.c	/^static void sysbeep(void)$/;"	f	file:
sysbeepstop	kernel/chr_drv/console.c	/^void sysbeepstop(void)$/;"	f
sysname	include/sys/utsname.h	/^	char sysname[9];$/;"	m	struct:utsname
table_list	kernel/chr_drv/tty_io.c	/^struct tty_queue * table_list[]={$/;"	v	typeref:struct:tty_queue
tail	include/linux/tty.h	/^	unsigned long tail;$/;"	m	struct:tty_queue
tail	kernel/chr_drv/keyboard.S	/^tail = 8$/;"	d
tail	kernel/chr_drv/rs_io.s	/^tail = 8$/;"	d
task	kernel/sched.c	/^	struct task_struct task;$/;"	m	union:task_union	typeref:struct:task_union::task_struct	file:
task	kernel/sched.c	/^struct task_struct * task[NR_TASKS] = {&(init_task.task), };$/;"	v	typeref:struct:task_struct
task_struct	include/linux/sched.h	/^struct task_struct {$/;"	s
task_union	kernel/sched.c	/^union task_union {$/;"	u	file:
tbl	boot/setup.S	/^tbl:	pop	bx$/;"	l
tcflag_t	include/sys/types.h	/^typedef unsigned long tcflag_t;$/;"	t
temp_int	include/linux/math_emu.h	/^} temp_int;$/;"	t	typeref:struct:__anon7
temp_real	include/linux/math_emu.h	/^} temp_real;$/;"	t	typeref:struct:__anon4
temp_real_unaligned	include/linux/math_emu.h	/^} temp_real_unaligned;$/;"	t	typeref:struct:__anon5
temp_to_long	kernel/math/convert.c	/^void temp_to_long(const temp_real * a, long_real * b)$/;"	f
temp_to_short	kernel/math/convert.c	/^void temp_to_short(const temp_real * a, short_real * b)$/;"	f
term	init/main.c	/^static char term[32];$/;"	v	file:
termio	include/termios.h	/^struct termio {$/;"	s
termios	include/linux/tty.h	/^	struct termios termios;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::termios
termios	include/termios.h	/^struct termios {$/;"	s
thisname	kernel/sys.c	/^static struct utsname thisname = {$/;"	v	typeref:struct:utsname	file:
ticks_to_floppy_on	kernel/sched.c	/^int ticks_to_floppy_on(unsigned int nr)$/;"	f
time_init	init/main.c	/^static void time_init(void)$/;"	f	file:
time_t	include/sys/types.h	/^typedef long time_t;$/;"	t
time_t	include/time.h	/^typedef long time_t;$/;"	t
timeout	include/linux/sched.h	/^	unsigned long timeout,alarm;$/;"	m	struct:task_struct
timer_list	kernel/sched.c	/^static struct timer_list {$/;"	s	file:
timer_list	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	typeref:struct:timer_list	file:
timerclear	include/sys/time.h	/^#define	timerclear(/;"	d
timercmp	include/sys/time.h	/^#define	timercmp(/;"	d
timerisset	include/sys/time.h	/^#define	timerisset(/;"	d
timeval	include/sys/time.h	/^struct timeval {$/;"	s
timezone	include/sys/time.h	/^struct timezone {$/;"	s
tm	include/time.h	/^struct tm {$/;"	s
tm_hour	include/time.h	/^	int tm_hour;$/;"	m	struct:tm
tm_isdst	include/time.h	/^	int tm_isdst;$/;"	m	struct:tm
tm_mday	include/time.h	/^	int tm_mday;$/;"	m	struct:tm
tm_min	include/time.h	/^	int tm_min;$/;"	m	struct:tm
tm_mon	include/time.h	/^	int tm_mon;$/;"	m	struct:tm
tm_sec	include/time.h	/^	int tm_sec;$/;"	m	struct:tm
tm_wday	include/time.h	/^	int tm_wday;$/;"	m	struct:tm
tm_yday	include/time.h	/^	int tm_yday;$/;"	m	struct:tm
tm_year	include/time.h	/^	int tm_year;$/;"	m	struct:tm
tms	include/sys/times.h	/^struct tms {$/;"	s
tms_cstime	include/sys/times.h	/^	time_t tms_cstime;$/;"	m	struct:tms
tms_cutime	include/sys/times.h	/^	time_t tms_cutime;$/;"	m	struct:tms
tms_stime	include/sys/times.h	/^	time_t tms_stime;$/;"	m	struct:tms
tms_utime	include/sys/times.h	/^	time_t tms_utime;$/;"	m	struct:tms
toascii	include/ctype.h	/^#define toascii(/;"	d
tolower	include/ctype.h	/^#define tolower(/;"	d
top	include/linux/math_emu.h	/^	int top:3;$/;"	m	struct:swd
top	kernel/chr_drv/console.c	/^#define top	/;"	d	file:
toupper	include/ctype.h	/^#define toupper(/;"	d
trace_bitmap	include/linux/sched.h	/^	long	trace_bitmap;	\/* bits: trace 0, bitmap 16-31 *\/$/;"	m	struct:tss_struct
track	boot/bootsect.S	/^track:	.word 0			! current track$/;"	l
track	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	struct:floppy_struct	file:
track	kernel/blk_drv/floppy.c	/^static unsigned char track = 0;$/;"	v	file:
transfer	kernel/blk_drv/floppy.c	/^static void transfer(void)$/;"	f	file:
translate	kernel/chr_drv/console.c	/^#define translate	/;"	d	file:
translations	kernel/chr_drv/console.c	/^static char * translations[] = {$/;"	v	file:
trap_init	kernel/traps.c	/^void trap_init(void)$/;"	f
truncate	fs/truncate.c	/^void truncate(struct m_inode * inode)$/;"	f
try_sub	kernel/math/div.c	/^static int try_sub(int * a, int * b)$/;"	f	file:
try_to_share	mm/memory.c	/^static int try_to_share(unsigned long address, struct task_struct * p)$/;"	f	file:
try_to_swap_out	mm/swap.c	/^int try_to_swap_out(unsigned long * table_ptr)$/;"	f
tss	include/linux/sched.h	/^	struct tss_struct tss;$/;"	m	struct:task_struct	typeref:struct:task_struct::tss_struct
tss_struct	include/linux/sched.h	/^struct tss_struct {$/;"	s
tty	include/linux/sched.h	/^	int tty;		\/* -1 if no tty, so it must be signed *\/$/;"	m	struct:task_struct
tty_init	kernel/chr_drv/tty_io.c	/^void tty_init(void)$/;"	f
tty_ioctl	kernel/chr_drv/tty_ioctl.c	/^int tty_ioctl(int dev, int cmd, int arg)$/;"	f
tty_queue	include/linux/tty.h	/^struct tty_queue {$/;"	s
tty_queues	kernel/chr_drv/tty_io.c	/^static struct tty_queue tty_queues[QUEUES];$/;"	v	typeref:struct:tty_queue	file:
tty_read	kernel/chr_drv/tty_io.c	/^int tty_read(unsigned channel, char * buf, int nr)$/;"	f
tty_signal	kernel/chr_drv/tty_io.c	/^int tty_signal(int sig, struct tty_struct *tty)$/;"	f
tty_struct	include/linux/tty.h	/^struct tty_struct {$/;"	s
tty_table	kernel/chr_drv/tty_io.c	/^struct tty_struct tty_table[256];$/;"	v	typeref:struct:tty_struct
tty_write	kernel/chr_drv/tty_io.c	/^int tty_write(unsigned channel, char * buf, int nr)$/;"	f
tv_sec	include/sys/time.h	/^	long	tv_sec;		\/* seconds *\/$/;"	m	struct:timeval
tv_usec	include/sys/time.h	/^	long	tv_usec;	\/* microseconds *\/$/;"	m	struct:timeval
twd	include/linux/sched.h	/^	long	twd;$/;"	m	struct:i387_struct
tz_dsttime	include/sys/time.h	/^	int	tz_dsttime;	\/* type of dst correction *\/$/;"	m	struct:timezone
tz_minuteswest	include/sys/time.h	/^	int	tz_minuteswest;	\/* minutes west of Greenwich *\/$/;"	m	struct:timezone
u_char	include/sys/types.h	/^typedef unsigned char u_char;$/;"	t
ue	include/linux/math_emu.h	/^	int ue:1;$/;"	m	struct:swd
uid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	struct:task_struct
uid_t	include/sys/types.h	/^typedef unsigned short uid_t;$/;"	t
umask	include/linux/sched.h	/^	unsigned short umask;$/;"	m	struct:task_struct
umode_t	include/sys/types.h	/^typedef unsigned short umode_t;$/;"	t
un_wp_page	mm/memory.c	/^void un_wp_page(unsigned long * table_entry)$/;"	f
unalt	kernel/chr_drv/keyboard.S	/^unalt:	movb $0x10,%al$/;"	l
unblank_screen	kernel/chr_drv/console.c	/^void unblank_screen()$/;"	f
uncaps	kernel/chr_drv/keyboard.S	/^uncaps:	andb $0x7f,mode$/;"	l
unctrl	kernel/chr_drv/keyboard.S	/^unctrl:	movb $0x04,%al$/;"	l
undef_root	boot/bootsect.S	/^undef_root:$/;"	l
unexpected_floppy_interrupt	kernel/blk_drv/floppy.c	/^void unexpected_floppy_interrupt(void)$/;"	f
unexpected_hd_interrupt	kernel/blk_drv/hd.c	/^void unexpected_hd_interrupt(void)$/;"	f
unlock_buffer	kernel/blk_drv/blk.h	/^extern inline void unlock_buffer(struct buffer_head * bh)$/;"	f
unlock_buffer	kernel/blk_drv/ll_rw_blk.c	/^static inline void unlock_buffer(struct buffer_head * bh)$/;"	f	file:
unlock_inode	fs/inode.c	/^static inline void unlock_inode(struct m_inode * inode)$/;"	f	file:
unlshift	kernel/chr_drv/keyboard.S	/^unlshift:$/;"	l
unrshift	kernel/chr_drv/keyboard.S	/^unrshift:$/;"	l
unsignify	kernel/math/add.c	/^static void unsignify(temp_real * a)$/;"	f	file:
update_screen	kernel/chr_drv/console.c	/^void update_screen(void)$/;"	f
usage	tools/build.c	/^void usage(void)$/;"	f
used_math	include/linux/sched.h	/^	unsigned short used_math;$/;"	m	struct:task_struct
user_stack	kernel/sched.c	/^long user_stack [ PAGE_SIZE>>2 ] ;$/;"	v
ushort	include/sys/types.h	/^typedef unsigned short ushort;$/;"	t
ustat	include/sys/types.h	/^struct ustat {$/;"	s
utimbuf	include/utime.h	/^struct utimbuf {$/;"	s
utime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
utsname	include/sys/utsname.h	/^struct utsname {$/;"	s
va_arg	include/stdarg.h	/^#define va_arg(/;"	d
va_end	include/stdarg.h	/^#define va_end(/;"	d
va_list	include/stdarg.h	/^typedef char *va_list;$/;"	t
va_start	include/stdarg.h	/^#define va_start(/;"	d
vc_attr	kernel/chr_drv/console.c	/^	unsigned char	vc_attr;$/;"	m	struct:__anon10	file:
vc_bold_attr	kernel/chr_drv/console.c	/^	int		vc_bold_attr;$/;"	m	struct:__anon10	file:
vc_bottom	kernel/chr_drv/console.c	/^	unsigned long	vc_top,vc_bottom;$/;"	m	struct:__anon10	file:
vc_checkin	kernel/chr_drv/console.c	/^	unsigned long	vc_checkin;$/;"	m	struct:__anon10	file:
vc_cons	kernel/chr_drv/console.c	/^} vc_cons [MAX_CONSOLES];$/;"	v	typeref:struct:__anon10	file:
vc_def_attr	kernel/chr_drv/console.c	/^	unsigned char	vc_def_attr;$/;"	m	struct:__anon10	file:
vc_iscolor	kernel/chr_drv/console.c	/^	unsigned int	vc_iscolor;$/;"	m	struct:__anon10	file:
vc_npar	kernel/chr_drv/console.c	/^	unsigned long	vc_npar,vc_par[NPAR];$/;"	m	struct:__anon10	file:
vc_origin	kernel/chr_drv/console.c	/^	unsigned long	vc_origin;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	m	struct:__anon10	file:
vc_par	kernel/chr_drv/console.c	/^	unsigned long	vc_npar,vc_par[NPAR];$/;"	m	struct:__anon10	file:
vc_pos	kernel/chr_drv/console.c	/^	unsigned long	vc_pos;$/;"	m	struct:__anon10	file:
vc_ques	kernel/chr_drv/console.c	/^	unsigned long	vc_ques;$/;"	m	struct:__anon10	file:
vc_restate	kernel/chr_drv/console.c	/^	unsigned long	vc_restate;$/;"	m	struct:__anon10	file:
vc_saved_x	kernel/chr_drv/console.c	/^	unsigned int	vc_saved_x;$/;"	m	struct:__anon10	file:
vc_saved_y	kernel/chr_drv/console.c	/^	unsigned int	vc_saved_y;$/;"	m	struct:__anon10	file:
vc_scr_end	kernel/chr_drv/console.c	/^	unsigned long	vc_scr_end;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	m	struct:__anon10	file:
vc_state	kernel/chr_drv/console.c	/^	unsigned long	vc_state;$/;"	m	struct:__anon10	file:
vc_top	kernel/chr_drv/console.c	/^	unsigned long	vc_top,vc_bottom;$/;"	m	struct:__anon10	file:
vc_translate	kernel/chr_drv/console.c	/^	char *		vc_translate;$/;"	m	struct:__anon10	file:
vc_video_erase_char	kernel/chr_drv/console.c	/^	unsigned short	vc_video_erase_char;	$/;"	m	struct:__anon10	file:
vc_video_mem_end	kernel/chr_drv/console.c	/^	unsigned long	vc_video_mem_end;	\/* End of video RAM (sort of)	*\/$/;"	m	struct:__anon10	file:
vc_video_mem_start	kernel/chr_drv/console.c	/^	unsigned long	vc_video_mem_start;	\/* Start of video RAM		*\/$/;"	m	struct:__anon10	file:
vc_x	kernel/chr_drv/console.c	/^	unsigned long	vc_x,vc_y;$/;"	m	struct:__anon10	file:
vc_y	kernel/chr_drv/console.c	/^	unsigned long	vc_x,vc_y;$/;"	m	struct:__anon10	file:
verify_area	kernel/fork.c	/^void verify_area(void * addr,int size)$/;"	f
version	include/sys/utsname.h	/^	char version[9];$/;"	m	struct:utsname
video_erase_char	kernel/chr_drv/console.c	/^#define video_erase_char /;"	d	file:
video_mem_base	kernel/chr_drv/console.c	/^static unsigned long	video_mem_base;		\/* Base of video memory		*\/$/;"	v	file:
video_mem_end	kernel/chr_drv/console.c	/^#define video_mem_end	/;"	d	file:
video_mem_start	kernel/chr_drv/console.c	/^#define video_mem_start	/;"	d	file:
video_mem_term	kernel/chr_drv/console.c	/^static unsigned long	video_mem_term;		\/* End of video memory		*\/$/;"	v	file:
video_num_columns	kernel/chr_drv/console.c	/^static unsigned long	video_num_columns;	\/* Number of text columns	*\/$/;"	v	file:
video_num_lines	kernel/chr_drv/console.c	/^static unsigned long	video_num_lines;	\/* Number of test lines		*\/$/;"	v	file:
video_page	kernel/chr_drv/console.c	/^static unsigned char	video_page;		\/* Initial video page		*\/$/;"	v	file:
video_port_reg	kernel/chr_drv/console.c	/^static unsigned short	video_port_reg;		\/* Video register select port	*\/$/;"	v	file:
video_port_val	kernel/chr_drv/console.c	/^static unsigned short	video_port_val;		\/* Video register value port	*\/$/;"	v	file:
video_size_row	kernel/chr_drv/console.c	/^static unsigned long	video_size_row;		\/* Bytes per row		*\/$/;"	v	file:
video_type	kernel/chr_drv/console.c	/^static unsigned char	video_type;		\/* Type of display being used	*\/$/;"	v	file:
vsprintf	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	f
wait	lib/wait.c	/^pid_t wait(int * wait_stat)$/;"	f
wait_address	fs/select.c	/^	struct task_struct ** wait_address;$/;"	m	struct:__anon1	typeref:struct:__anon1::task_struct	file:
wait_entry	fs/select.c	/^} wait_entry;$/;"	t	typeref:struct:__anon1	file:
wait_for_keypress	kernel/chr_drv/tty_io.c	/^void wait_for_keypress(void)$/;"	f
wait_for_request	kernel/blk_drv/ll_rw_blk.c	/^struct task_struct * wait_for_request = NULL;$/;"	v	typeref:struct:task_struct
wait_motor	kernel/sched.c	/^static struct task_struct * wait_motor[4] = {NULL,NULL,NULL,NULL};$/;"	v	typeref:struct:task_struct	file:
wait_on_buffer	fs/buffer.c	/^static inline void wait_on_buffer(struct buffer_head * bh)$/;"	f	file:
wait_on_floppy_select	kernel/blk_drv/floppy.c	/^struct task_struct * wait_on_floppy_select = NULL;$/;"	v	typeref:struct:task_struct
wait_on_inode	fs/inode.c	/^static inline void wait_on_inode(struct m_inode * inode)$/;"	f	file:
wait_on_super	fs/super.c	/^static void wait_on_super(struct super_block * sb)$/;"	f	file:
wait_until_sent	kernel/chr_drv/tty_ioctl.c	/^static void wait_until_sent(struct tty_struct * tty)$/;"	f	file:
waiting	kernel/blk_drv/blk.h	/^	struct task_struct * waiting;$/;"	m	struct:request	typeref:struct:request::task_struct
wake_up	kernel/sched.c	/^void wake_up(struct task_struct **p)$/;"	f
win_result	kernel/blk_drv/hd.c	/^static int win_result(void)$/;"	f	file:
winsize	include/termios.h	/^struct winsize {$/;"	s
wpcom	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	struct:hd_i_struct	file:
write	include/linux/tty.h	/^	void (*write)(struct tty_struct * tty);$/;"	m	struct:tty_struct
write_buffer_empty	kernel/chr_drv/rs_io.s	/^write_buffer_empty:$/;"	l
write_char	kernel/chr_drv/rs_io.s	/^write_char:$/;"	l
write_inode	fs/inode.c	/^static void write_inode(struct m_inode * inode)$/;"	f	file:
write_intr	kernel/blk_drv/hd.c	/^static void write_intr(void)$/;"	f	file:
write_pipe	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	f
write_q	include/linux/tty.h	/^	struct tty_queue *write_q;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::tty_queue
write_swap_page	include/linux/mm.h	/^#define write_swap_page(/;"	d
write_verify	mm/memory.c	/^void write_verify(unsigned long address)$/;"	f
ws_col	include/termios.h	/^	unsigned short ws_col;$/;"	m	struct:winsize
ws_row	include/termios.h	/^	unsigned short ws_row;$/;"	m	struct:winsize
ws_xpixel	include/termios.h	/^	unsigned short ws_xpixel;$/;"	m	struct:winsize
ws_ypixel	include/termios.h	/^	unsigned short ws_ypixel;$/;"	m	struct:winsize
x	kernel/chr_drv/console.c	/^#define x	/;"	d	file:
y	kernel/chr_drv/console.c	/^#define y	/;"	d	file:
ze	include/linux/math_emu.h	/^	int ze:1;$/;"	m	struct:swd
zero	boot/setup.S	/^zero:	sub	al,#0x0a$/;"	l
